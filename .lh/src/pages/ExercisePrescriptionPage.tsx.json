{
    "sourceFile": "src/pages/ExercisePrescriptionPage.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1761379597392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761461532733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,105 +5,491 @@\n import { AppTextStyles } from '../styles/textStyles';\n \n const PageContainer = styled.div`\n   min-height: 100vh;\n-  padding: 40px 20px;\n+  display: flex;\n   background: ${AppColors.background};\n-  display: flex;\n-  justify-content: center;\n-  align-items: center;\n `;\n \n-const ContentContainer = styled.div`\n+const SearchPanel = styled.div`\n+  width: 300px;\n   background: ${AppColors.surface};\n-  border-radius: 16px;\n-  padding: 48px;\n-  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);\n-  text-align: center;\n-  max-width: 600px;\n+  border-right: 1px solid ${AppColors.borderLight};\n+  padding: 20px;\n+  overflow-y: auto;\n+`;\n+\n+const SearchTitle = styled.h2`\n+  font-size: ${AppTextStyles.title2.fontSize};\n+  font-weight: 600;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 20px;\n+`;\n+\n+const SearchInput = styled.input`\n   width: 100%;\n+  padding: 12px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 8px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  margin-bottom: 16px;\n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+  }\n `;\n \n-const Title = styled.h1`\n-  font-size: ${AppTextStyles.title1.fontSize};\n-  font-weight: 700;\n+const MemberList = styled.div`\n+  max-height: 400px;\n+  overflow-y: auto;\n+`;\n+\n+const MemberItem = styled.div<{ selected?: boolean }>`\n+  padding: 12px;\n+  border: 1px solid ${props => props.selected ? AppColors.primary : AppColors.borderLight};\n+  border-radius: 8px;\n+  margin-bottom: 8px;\n+  cursor: pointer;\n+  background: ${props => props.selected ? AppColors.primary + '10' : AppColors.surface};\n+  \n+  &:hover {\n+    background: ${AppColors.primary}20;\n+  }\n+`;\n+\n+const MemberName = styled.div`\n+  font-weight: 600;\n   color: ${AppColors.onBackground};\n-  margin: 0 0 24px 0;\n+  margin-bottom: 4px;\n `;\n \n-const Description = styled.p`\n-  font-size: ${AppTextStyles.body1.fontSize};\n+const MemberInfo = styled.div`\n+  font-size: ${AppTextStyles.body3.fontSize};\n   color: ${AppColors.onInput1};\n-  margin: 0 0 32px 0;\n-  line-height: 1.6;\n `;\n \n-const InfoCard = styled.div`\n-  background: #f8f9fa;\n+const PrescriptionPanel = styled.div`\n+  flex: 1;\n+  padding: 20px;\n+  overflow-y: auto;\n+`;\n+\n+const PrescriptionContainer = styled.div`\n+  max-width: 800px;\n+  margin: 0 auto;\n+  background: white;\n+  padding: 40px;\n+  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n+  min-height: calc(100vh - 40px);\n+`;\n+\n+const PrescriptionTitle = styled.h1`\n+  text-align: center;\n+  font-size: 24px;\n+  font-weight: bold;\n+  margin-bottom: 30px;\n+  color: ${AppColors.onBackground};\n+`;\n+\n+const FormRow = styled.div`\n+  display: flex;\n+  gap: 20px;\n+  margin-bottom: 20px;\n+  align-items: center;\n+`;\n+\n+const FormGroup = styled.div`\n+  flex: 1;\n+`;\n+\n+const FormLabel = styled.label`\n+  display: block;\n+  font-size: ${AppTextStyles.label1.fontSize};\n+  font-weight: 600;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 8px;\n+`;\n+\n+const FormInput = styled.input`\n+  width: 100%;\n+  padding: 10px;\n   border: 1px solid ${AppColors.borderLight};\n-  border-radius: 12px;\n-  padding: 24px;\n-  margin: 24px 0;\n+  border-radius: 6px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  \n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+  }\n `;\n \n-const InfoLabel = styled.div`\n-  font-size: ${AppTextStyles.label2.fontSize};\n+const FormTextarea = styled.textarea`\n+  width: 100%;\n+  padding: 10px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 6px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  resize: vertical;\n+  \n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+  }\n+`;\n+\n+const CheckboxGroup = styled.div`\n+  display: flex;\n+  flex-wrap: wrap;\n+  gap: 15px;\n+`;\n+\n+const CheckboxItem = styled.label`\n+  display: flex;\n+  align-items: center;\n+  gap: 8px;\n+  cursor: pointer;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+`;\n+\n+const Checkbox = styled.input`\n+  margin: 0;\n+`;\n+\n+const ImageSection = styled.div`\n+  display: flex;\n+  gap: 20px;\n+  margin-bottom: 20px;\n+`;\n+\n+const ImageBox = styled.div`\n+  flex: 1;\n+  height: 200px;\n+  border: 2px dashed ${AppColors.borderLight};\n+  border-radius: 8px;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n   color: ${AppColors.onInput1};\n-  margin-bottom: 8px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n `;\n \n-const InfoValue = styled.div`\n-  font-size: ${AppTextStyles.body1.fontSize};\n-  font-weight: 600;\n+const ConsentSection = styled.div`\n+  margin-top: 40px;\n+  padding: 20px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 8px;\n+  background: #f9f9f9;\n+`;\n+\n+const ConsentText = styled.p`\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  line-height: 1.6;\n   color: ${AppColors.onBackground};\n+  margin-bottom: 20px;\n `;\n \n-const ComingSoonBadge = styled.div`\n-  display: inline-block;\n-  background: ${AppColors.primary};\n-  color: ${AppColors.onPrimary};\n-  padding: 8px 16px;\n-  border-radius: 20px;\n-  font-size: ${AppTextStyles.label2.fontSize};\n-  font-weight: 500;\n-  margin-bottom: 16px;\n+const SignatureArea = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: flex-end;\n `;\n \n+const SignatureBox = styled.div`\n+  width: 200px;\n+  height: 80px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 6px;\n+  background: white;\n+  position: relative;\n+  \n+  &::after {\n+    content: '서명';\n+    position: absolute;\n+    bottom: -25px;\n+    left: 50%;\n+    transform: translateX(-50%);\n+    font-size: ${AppTextStyles.body3.fontSize};\n+    color: ${AppColors.onInput1};\n+  }\n+`;\n+\n+const DateArea = styled.div`\n+  text-align: right;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  color: ${AppColors.onBackground};\n+`;\n+\n+interface Member {\n+  id: string;\n+  name: string;\n+  birthDate: string;\n+  phone: string;\n+}\n+\n const ExercisePrescriptionPage: React.FC = () => {\n   const [searchParams] = useSearchParams();\n-  const [memberId, setMemberId] = useState<string>('');\n+  const [searchTerm, setSearchTerm] = useState('');\n+  const [selectedMember, setSelectedMember] = useState<Member | null>(null);\n+  const [formData, setFormData] = useState({\n+    height: '',\n+    weight: '',\n+    footSize: '',\n+    medications: '',\n+    medicalHistory: {\n+      musculoskeletal: false,\n+      cardiovascular: false,\n+      diabetes: false,\n+      osteoporosis: false,\n+      thyroid: false,\n+      varicose: false,\n+      arthritis: false,\n+    },\n+    painHistory: '',\n+  });\n \n+  // 샘플 회원 데이터 (실제로는 API에서 가져올 데이터)\n+  const [members] = useState<Member[]>([\n+    { id: '1', name: '김철수', birthDate: '1985-03-15', phone: '010-1234-5678' },\n+    { id: '2', name: '이영희', birthDate: '1990-07-22', phone: '010-2345-6789' },\n+    { id: '3', name: '박민수', birthDate: '1988-11-08', phone: '010-3456-7890' },\n+    { id: '4', name: '최지영', birthDate: '1992-05-30', phone: '010-4567-8901' },\n+  ]);\n+\n+  const filteredMembers = members.filter(member =>\n+    member.name.includes(searchTerm) || member.phone.includes(searchTerm)\n+  );\n+\n   useEffect(() => {\n     const memberIdParam = searchParams.get('memberId');\n     if (memberIdParam) {\n-      setMemberId(memberIdParam);\n+      const member = members.find(m => m.id === memberIdParam);\n+      if (member) {\n+        setSelectedMember(member);\n+      }\n     }\n-  }, [searchParams]);\n+  }, [searchParams, members]);\n \n+  const handleMemberSelect = (member: Member) => {\n+    setSelectedMember(member);\n+  };\n+\n+  const handleInputChange = (field: string, value: string) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      [field]: value,\n+    }));\n+  };\n+\n+  const handleCheckboxChange = (field: string, checked: boolean) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      medicalHistory: {\n+        ...prev.medicalHistory,\n+        [field]: checked,\n+      },\n+    }));\n+  };\n+\n   return (\n     <PageContainer>\n-      <ContentContainer>\n-        <ComingSoonBadge>개발 중</ComingSoonBadge>\n-        <Title>운동처방 페이지</Title>\n-        <Description>\n-          개인 맞춤형 운동 프로그램을 제공하는 페이지입니다.\n-          <br />\n-          현재 개발 중이며, 곧 서비스를 시작할 예정입니다.\n-        </Description>\n-        \n-        {memberId && (\n-          <InfoCard>\n-            <InfoLabel>전달받은 회원 ID</InfoLabel>\n-            <InfoValue>{memberId}</InfoValue>\n-          </InfoCard>\n-        )}\n-        \n-        <Description>\n-          이 페이지는 QR 코드를 통해 접근되었으며,\n-          <br />\n-          향후 회원별 맞춤 운동처방 정보를 제공할 예정입니다.\n-        </Description>\n-      </ContentContainer>\n+      <SearchPanel>\n+        <SearchTitle>회원 검색</SearchTitle>\n+        <SearchInput\n+          type=\"text\"\n+          placeholder=\"이름 또는 전화번호로 검색\"\n+          value={searchTerm}\n+          onChange={(e) => setSearchTerm(e.target.value)}\n+        />\n+        <MemberList>\n+          {filteredMembers.map(member => (\n+            <MemberItem\n+              key={member.id}\n+              selected={selectedMember?.id === member.id}\n+              onClick={() => handleMemberSelect(member)}\n+            >\n+              <MemberName>{member.name}</MemberName>\n+              <MemberInfo>{member.birthDate}</MemberInfo>\n+              <MemberInfo>{member.phone}</MemberInfo>\n+            </MemberItem>\n+          ))}\n+        </MemberList>\n+      </SearchPanel>\n+\n+      <PrescriptionPanel>\n+        <PrescriptionContainer>\n+          <PrescriptionTitle>운동처방서</PrescriptionTitle>\n+          \n+          {/* 기본 정보 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>성명</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                value={selectedMember?.name || ''}\n+                readOnly\n+                style={{ background: '#f5f5f5' }}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>생년월일</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                value={selectedMember?.birthDate || ''}\n+                readOnly\n+                style={{ background: '#f5f5f5' }}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>키/체중</FormLabel>\n+              <div style={{ display: 'flex', gap: '10px' }}>\n+                <FormInput\n+                  type=\"text\"\n+                  placeholder=\"키(cm)\"\n+                  value={formData.height}\n+                  onChange={(e) => handleInputChange('height', e.target.value)}\n+                />\n+                <FormInput\n+                  type=\"text\"\n+                  placeholder=\"체중(kg)\"\n+                  value={formData.weight}\n+                  onChange={(e) => handleInputChange('weight', e.target.value)}\n+                />\n+              </div>\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>발사이즈</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"발사이즈\"\n+                value={formData.footSize}\n+                onChange={(e) => handleInputChange('footSize', e.target.value)}\n+              />\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 복용중인 약 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>복용중인 약</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"복용중인 약물을 입력하세요\"\n+                value={formData.medications}\n+                onChange={(e) => handleInputChange('medications', e.target.value)}\n+              />\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 병력사항 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>병력사항</FormLabel>\n+              <CheckboxGroup>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.musculoskeletal}\n+                    onChange={(e) => handleCheckboxChange('musculoskeletal', e.target.checked)}\n+                  />\n+                  근골격계질환\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.cardiovascular}\n+                    onChange={(e) => handleCheckboxChange('cardiovascular', e.target.checked)}\n+                  />\n+                  심혈관계질환\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.diabetes}\n+                    onChange={(e) => handleCheckboxChange('diabetes', e.target.checked)}\n+                  />\n+                  당뇨\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.osteoporosis}\n+                    onChange={(e) => handleCheckboxChange('osteoporosis', e.target.checked)}\n+                  />\n+                  골다공증\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.thyroid}\n+                    onChange={(e) => handleCheckboxChange('thyroid', e.target.checked)}\n+                  />\n+                  갑상선\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.varicose}\n+                    onChange={(e) => handleCheckboxChange('varicose', e.target.checked)}\n+                  />\n+                  정맥류\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.arthritis}\n+                    onChange={(e) => handleCheckboxChange('arthritis', e.target.checked)}\n+                  />\n+                  관절염\n+                </CheckboxItem>\n+              </CheckboxGroup>\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 이미지 영역 */}\n+          <ImageSection>\n+            <ImageBox>\n+              <strong>정면</strong>\n+              <small>이미지 첨부</small>\n+            </ImageBox>\n+            <ImageBox>\n+              <strong>척추</strong>\n+              <small>이미지 첨부</small>\n+            </ImageBox>\n+            <ImageBox>\n+              <strong>후면</strong>\n+              <small>이미지 첨부</small>\n+            </ImageBox>\n+          </ImageSection>\n+\n+          {/* 통증 히스토리 및 운동목적 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>시술, 수술 등 통증 히스토리 및 코멘트/운동목적</FormLabel>\n+              <FormTextarea\n+                rows={6}\n+                placeholder=\"통증 히스토리, 수술 이력, 운동 목적 등을 상세히 기입해주세요\"\n+                value={formData.painHistory}\n+                onChange={(e) => handleInputChange('painHistory', e.target.value)}\n+              />\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 동의서 */}\n+          <ConsentSection>\n+            <ConsentText>\n+              라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n+              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.\n+            </ConsentText>\n+            <SignatureArea>\n+              <DateArea>\n+                날짜: {new Date().toLocaleDateString('ko-KR')}\n+              </DateArea>\n+              <SignatureBox />\n+            </SignatureArea>\n+          </ConsentSection>\n+        </PrescriptionContainer>\n+      </PrescriptionPanel>\n     </PageContainer>\n   );\n };\n \n"
                },
                {
                    "date": 1761461643356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n import { useSearchParams } from 'react-router-dom';\n import styled from 'styled-components';\n import { AppColors } from '../styles/colors';\n import { AppTextStyles } from '../styles/textStyles';\n+import { dbManager } from '../utils/indexedDB';\n+import { Member } from '../utils/db/types';\n \n const PageContainer = styled.div`\n   min-height: 100vh;\n   display: flex;\n@@ -218,19 +220,13 @@\n   font-size: ${AppTextStyles.body2.fontSize};\n   color: ${AppColors.onBackground};\n `;\n \n-interface Member {\n-  id: string;\n-  name: string;\n-  birthDate: string;\n-  phone: string;\n-}\n-\n const ExercisePrescriptionPage: React.FC = () => {\n   const [searchParams] = useSearchParams();\n   const [searchTerm, setSearchTerm] = useState('');\n   const [selectedMember, setSelectedMember] = useState<Member | null>(null);\n+  const [members, setMembers] = useState<Member[]>([]);\n   const [formData, setFormData] = useState({\n     height: '',\n     weight: '',\n     footSize: '',\n@@ -246,24 +242,33 @@\n     },\n     painHistory: '',\n   });\n \n-  // 샘플 회원 데이터 (실제로는 API에서 가져올 데이터)\n-  const [members] = useState<Member[]>([\n-    { id: '1', name: '김철수', birthDate: '1985-03-15', phone: '010-1234-5678' },\n-    { id: '2', name: '이영희', birthDate: '1990-07-22', phone: '010-2345-6789' },\n-    { id: '3', name: '박민수', birthDate: '1988-11-08', phone: '010-3456-7890' },\n-    { id: '4', name: '최지영', birthDate: '1992-05-30', phone: '010-4567-8901' },\n-  ]);\n+  // 컴포넌트 마운트 시 회원 데이터 로드\n+  useEffect(() => {\n+    const loadMembers = async () => {\n+      try {\n+        const allMembers = await dbManager.getAllMembers();\n+        // 활성 회원만 필터링\n+        const activeMembers = allMembers.filter(member => member.isActive);\n+        setMembers(activeMembers);\n+      } catch (error) {\n+        console.error('회원 데이터 로드 실패:', error);\n+      }\n+    };\n \n+    loadMembers();\n+  }, []);\n+\n   const filteredMembers = members.filter(member =>\n     member.name.includes(searchTerm) || member.phone.includes(searchTerm)\n   );\n \n   useEffect(() => {\n-    const memberIdParam = searchParams.get('memberId');\n-    if (memberIdParam) {\n-      const member = members.find(m => m.id === memberIdParam);\n+    // URL 파라미터에서 userid 또는 memberId 확인\n+    const userIdParam = searchParams.get('userid') || searchParams.get('memberId');\n+    if (userIdParam && members.length > 0) {\n+      const member = members.find(m => m.id === userIdParam);\n       if (member) {\n         setSelectedMember(member);\n       }\n     }\n@@ -307,9 +312,9 @@\n               selected={selectedMember?.id === member.id}\n               onClick={() => handleMemberSelect(member)}\n             >\n               <MemberName>{member.name}</MemberName>\n-              <MemberInfo>{member.birthDate}</MemberInfo>\n+              <MemberInfo>{member.birth}</MemberInfo>\n               <MemberInfo>{member.phone}</MemberInfo>\n             </MemberItem>\n           ))}\n         </MemberList>\n@@ -333,9 +338,9 @@\n             <FormGroup>\n               <FormLabel>생년월일</FormLabel>\n               <FormInput\n                 type=\"text\"\n-                value={selectedMember?.birthDate || ''}\n+                value={selectedMember?.birth || ''}\n                 readOnly\n                 style={{ background: '#f5f5f5' }}\n               />\n             </FormGroup>\n"
                },
                {
                    "date": 1761461760471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,56 @@\n   padding: 20px;\n   overflow-y: auto;\n `;\n \n+const ButtonPanel = styled.div`\n+  width: 80px;\n+  background: ${AppColors.surface};\n+  border-right: 1px solid ${AppColors.borderLight};\n+  padding: 20px 10px;\n+  display: flex;\n+  flex-direction: column;\n+  gap: 15px;\n+  align-items: center;\n+`;\n+\n+const ActionButton = styled.button`\n+  width: 60px;\n+  height: 60px;\n+  border: none;\n+  border-radius: 12px;\n+  background: ${AppColors.primary};\n+  color: ${AppColors.onPrimary};\n+  font-size: ${AppTextStyles.label2.fontSize};\n+  font-weight: 600;\n+  cursor: pointer;\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n+  gap: 4px;\n+  transition: all 0.2s ease;\n+  \n+  &:hover {\n+    background: ${AppColors.primary}dd;\n+    transform: translateY(-2px);\n+  }\n+  \n+  &:active {\n+    transform: translateY(0);\n+  }\n+`;\n+\n+const ButtonIcon = styled.div`\n+  font-size: 20px;\n+  line-height: 1;\n+`;\n+\n+const ButtonText = styled.div`\n+  font-size: 10px;\n+  line-height: 1;\n+`;\n+\n const SearchTitle = styled.h2`\n   font-size: ${AppTextStyles.title2.fontSize};\n   font-weight: 600;\n   color: ${AppColors.onBackground};\n@@ -294,8 +342,36 @@\n       },\n     }));\n   };\n \n+  const handleSave = () => {\n+    // TODO: 데이터 저장 로직 구현\n+    console.log('저장:', { selectedMember, formData });\n+    alert('운동처방서가 저장되었습니다.');\n+  };\n+\n+  const handleShare = () => {\n+    // TODO: 공유 로직 구현\n+    console.log('공유:', { selectedMember, formData });\n+    if (navigator.share) {\n+      navigator.share({\n+        title: '운동처방서',\n+        text: `${selectedMember?.name}님의 운동처방서`,\n+        url: window.location.href,\n+      });\n+    } else {\n+      // fallback: 링크 복사\n+      navigator.clipboard.writeText(window.location.href);\n+      alert('링크가 클립보드에 복사되었습니다.');\n+    }\n+  };\n+\n+  const handlePrint = () => {\n+    // TODO: 인쇄 로직 구현 (PDF 생성 등)\n+    console.log('출력:', { selectedMember, formData });\n+    window.print();\n+  };\n+\n   return (\n     <PageContainer>\n       <SearchPanel>\n         <SearchTitle>회원 검색</SearchTitle>\n@@ -319,8 +395,25 @@\n           ))}\n         </MemberList>\n       </SearchPanel>\n \n+      <ButtonPanel>\n+        <ActionButton onClick={handleSave} title=\"저장\">\n+          <ButtonIcon>💾</ButtonIcon>\n+          <ButtonText>저장</ButtonText>\n+        </ActionButton>\n+        \n+        <ActionButton onClick={handleShare} title=\"공유\">\n+          <ButtonIcon>📤</ButtonIcon>\n+          <ButtonText>공유</ButtonText>\n+        </ActionButton>\n+        \n+        <ActionButton onClick={handlePrint} title=\"출력\">\n+          <ButtonIcon>🖨️</ButtonIcon>\n+          <ButtonText>출력</ButtonText>\n+        </ActionButton>\n+      </ButtonPanel>\n+\n       <PrescriptionPanel>\n         <PrescriptionContainer>\n           <PrescriptionTitle>운동처방서</PrescriptionTitle>\n           \n"
                },
                {
                    "date": 1761461831393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -437,25 +437,26 @@\n                 style={{ background: '#f5f5f5' }}\n               />\n             </FormGroup>\n             <FormGroup>\n-              <FormLabel>키/체중</FormLabel>\n-              <div style={{ display: 'flex', gap: '10px' }}>\n-                <FormInput\n-                  type=\"text\"\n-                  placeholder=\"키(cm)\"\n-                  value={formData.height}\n-                  onChange={(e) => handleInputChange('height', e.target.value)}\n-                />\n-                <FormInput\n-                  type=\"text\"\n-                  placeholder=\"체중(kg)\"\n-                  value={formData.weight}\n-                  onChange={(e) => handleInputChange('weight', e.target.value)}\n-                />\n-              </div>\n+              <FormLabel>키</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"키(cm)\"\n+                value={formData.height}\n+                onChange={(e) => handleInputChange('height', e.target.value)}\n+              />\n             </FormGroup>\n             <FormGroup>\n+              <FormLabel>체중</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"체중(kg)\"\n+                value={formData.weight}\n+                onChange={(e) => handleInputChange('weight', e.target.value)}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n               <FormLabel>발사이즈</FormLabel>\n               <FormInput\n                 type=\"text\"\n                 placeholder=\"발사이즈\"\n"
                },
                {
                    "date": 1761461874069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n const FormRow = styled.div`\n   display: flex;\n   gap: 20px;\n   margin-bottom: 20px;\n-  align-items: center;\n+  align-items: flex-start;\n `;\n \n const FormGroup = styled.div`\n   flex: 1;\n"
                },
                {
                    "date": 1761461935758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n `;\n \n const FormRow = styled.div`\n   display: flex;\n-  gap: 20px;\n+  gap: 15px;\n   margin-bottom: 20px;\n   align-items: flex-start;\n `;\n \n@@ -164,8 +164,9 @@\n   padding: 10px;\n   border: 1px solid ${AppColors.borderLight};\n   border-radius: 6px;\n   font-size: ${AppTextStyles.body2.fontSize};\n+  box-sizing: border-box;\n   \n   &:focus {\n     outline: none;\n     border-color: ${AppColors.primary};\n@@ -178,8 +179,9 @@\n   border: 1px solid ${AppColors.borderLight};\n   border-radius: 6px;\n   font-size: ${AppTextStyles.body2.fontSize};\n   resize: vertical;\n+  box-sizing: border-box;\n   \n   &:focus {\n     outline: none;\n     border-color: ${AppColors.primary};\n"
                },
                {
                    "date": 1761462139513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,16 +9,25 @@\n const PageContainer = styled.div`\n   min-height: 100vh;\n   display: flex;\n   background: ${AppColors.background};\n+  \n+  @media print {\n+    display: block;\n+    background: white;\n+  }\n `;\n \n const SearchPanel = styled.div`\n   width: 300px;\n   background: ${AppColors.surface};\n   border-right: 1px solid ${AppColors.borderLight};\n   padding: 20px;\n   overflow-y: auto;\n+  \n+  @media print {\n+    display: none;\n+  }\n `;\n \n const ButtonPanel = styled.div`\n   width: 80px;\n@@ -28,8 +37,12 @@\n   display: flex;\n   flex-direction: column;\n   gap: 15px;\n   align-items: center;\n+  \n+  @media print {\n+    display: none;\n+  }\n `;\n \n const ActionButton = styled.button`\n   width: 60px;\n@@ -120,8 +133,13 @@\n const PrescriptionPanel = styled.div`\n   flex: 1;\n   padding: 20px;\n   overflow-y: auto;\n+  \n+  @media print {\n+    padding: 0;\n+    overflow: visible;\n+  }\n `;\n \n const PrescriptionContainer = styled.div`\n   max-width: 800px;\n@@ -129,8 +147,16 @@\n   background: white;\n   padding: 40px;\n   box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n   min-height: calc(100vh - 40px);\n+  \n+  @media print {\n+    box-shadow: none;\n+    padding: 20px;\n+    margin: 0;\n+    max-width: none;\n+    min-height: auto;\n+  }\n `;\n \n const PrescriptionTitle = styled.h1`\n   text-align: center;\n@@ -345,33 +371,268 @@\n     }));\n   };\n \n   const handleSave = () => {\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n+    }\n+    \n     // TODO: 데이터 저장 로직 구현\n     console.log('저장:', { selectedMember, formData });\n     alert('운동처방서가 저장되었습니다.');\n   };\n \n   const handleShare = () => {\n-    // TODO: 공유 로직 구현\n-    console.log('공유:', { selectedMember, formData });\n-    if (navigator.share) {\n-      navigator.share({\n-        title: '운동처방서',\n-        text: `${selectedMember?.name}님의 운동처방서`,\n-        url: window.location.href,\n-      });\n-    } else {\n-      // fallback: 링크 복사\n-      navigator.clipboard.writeText(window.location.href);\n-      alert('링크가 클립보드에 복사되었습니다.');\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n     }\n+\n+    // 운동처방서만 표시하는 새 창 생성\n+    const printWindow = window.open('', '_blank', 'width=800,height=600');\n+    if (printWindow) {\n+      printWindow.document.write(`\n+        <!DOCTYPE html>\n+        <html>\n+        <head>\n+          <title>운동처방서 - ${selectedMember.name}</title>\n+          <style>\n+            body { font-family: Arial, sans-serif; margin: 20px; }\n+            .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n+            .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n+            .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n+            .form-group { flex: 1; }\n+            .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n+            .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n+            .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n+            .image-section { display: flex; gap: 20px; margin-bottom: 20px; }\n+            .image-box { flex: 1; height: 200px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n+            .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n+            .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n+            .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n+            .date-area { text-align: right; }\n+            textarea { resize: vertical; height: 100px; }\n+          </style>\n+        </head>\n+        <body>\n+          <div class=\"prescription-container\">\n+            <h1 class=\"title\">운동처방서</h1>\n+            \n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">성명</label>\n+                <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">생년월일</label>\n+                <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">키</label>\n+                <input class=\"form-input\" value=\"${formData.height}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">체중</label>\n+                <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">발사이즈</label>\n+                <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n+              </div>\n+            </div>\n+\n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">복용중인 약</label>\n+                <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n+              </div>\n+            </div>\n+\n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">병력사항</label>\n+                <div class=\"checkbox-group\">\n+                  ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n+                    const labels: { [key: string]: string } = {\n+                      musculoskeletal: '근골격계질환',\n+                      cardiovascular: '심혈관계질환',\n+                      diabetes: '당뇨',\n+                      osteoporosis: '골다공증',\n+                      thyroid: '갑상선',\n+                      varicose: '정맥류',\n+                      arthritis: '관절염'\n+                    };\n+                    return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                  }).join('')}\n+                </div>\n+              </div>\n+            </div>\n+\n+            <div class=\"image-section\">\n+              <div class=\"image-box\"><strong>정면</strong><br><small>이미지 첨부</small></div>\n+              <div class=\"image-box\"><strong>척추</strong><br><small>이미지 첨부</small></div>\n+              <div class=\"image-box\"><strong>후면</strong><br><small>이미지 첨부</small></div>\n+            </div>\n+\n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n+                <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n+              </div>\n+            </div>\n+\n+            <div class=\"consent-section\">\n+              <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n+              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n+              <div class=\"signature-area\">\n+                <div class=\"date-area\">날짜: ${new Date().toLocaleDateString('ko-KR')}</div>\n+                <div class=\"signature-box\"></div>\n+              </div>\n+            </div>\n+          </div>\n+        </body>\n+        </html>\n+      `);\n+      printWindow.document.close();\n+      \n+      // 네이티브 공유 API 사용 또는 링크 복사\n+      if (navigator.share) {\n+        navigator.share({\n+          title: '운동처방서',\n+          text: `${selectedMember.name}님의 운동처방서`,\n+          url: printWindow.location.href,\n+        });\n+      } else {\n+        alert('새 창에서 운동처방서를 확인하고 URL을 복사하여 공유하세요.');\n+      }\n+    }\n   };\n \n   const handlePrint = () => {\n-    // TODO: 인쇄 로직 구현 (PDF 생성 등)\n-    console.log('출력:', { selectedMember, formData });\n-    window.print();\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n+    }\n+\n+    // 운동처방서만 출력하기 위한 새 창 생성\n+    const printWindow = window.open('', '_blank', 'width=800,height=600');\n+    if (printWindow) {\n+      printWindow.document.write(`\n+        <!DOCTYPE html>\n+        <html>\n+        <head>\n+          <title>운동처방서 - ${selectedMember.name}</title>\n+          <style>\n+            @media print {\n+              body { margin: 0; padding: 20px; }\n+              .no-print { display: none !important; }\n+            }\n+            body { font-family: Arial, sans-serif; margin: 20px; }\n+            .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n+            .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n+            .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n+            .form-group { flex: 1; }\n+            .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n+            .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n+            .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n+            .image-section { display: flex; gap: 20px; margin-bottom: 20px; }\n+            .image-box { flex: 1; height: 200px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n+            .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n+            .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n+            .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n+            .date-area { text-align: right; }\n+            textarea { resize: vertical; height: 100px; }\n+            .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n+          </style>\n+        </head>\n+        <body>\n+          <button class=\"print-button no-print\" onclick=\"window.print()\">인쇄하기</button>\n+          <div class=\"prescription-container\">\n+            <h1 class=\"title\">운동처방서</h1>\n+            \n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">성명</label>\n+                <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">생년월일</label>\n+                <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">키</label>\n+                <input class=\"form-input\" value=\"${formData.height}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">체중</label>\n+                <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n+              </div>\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">발사이즈</label>\n+                <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n+              </div>\n+            </div>\n+\n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">복용중인 약</label>\n+                <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n+              </div>\n+            </div>\n+\n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">병력사항</label>\n+                <div class=\"checkbox-group\">\n+                  ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n+                    const labels: { [key: string]: string } = {\n+                      musculoskeletal: '근골격계질환',\n+                      cardiovascular: '심혈관계질환',\n+                      diabetes: '당뇨',\n+                      osteoporosis: '골다공증',\n+                      thyroid: '갑상선',\n+                      varicose: '정맥류',\n+                      arthritis: '관절염'\n+                    };\n+                    return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                  }).join('')}\n+                </div>\n+              </div>\n+            </div>\n+\n+            <div class=\"image-section\">\n+              <div class=\"image-box\"><strong>정면</strong><br><small>이미지 첨부</small></div>\n+              <div class=\"image-box\"><strong>척추</strong><br><small>이미지 첨부</small></div>\n+              <div class=\"image-box\"><strong>후면</strong><br><small>이미지 첨부</small></div>\n+            </div>\n+\n+            <div class=\"form-row\">\n+              <div class=\"form-group\">\n+                <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n+                <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n+              </div>\n+            </div>\n+\n+            <div class=\"consent-section\">\n+              <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n+              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n+              <div class=\"signature-area\">\n+                <div class=\"date-area\">날짜: ${new Date().toLocaleDateString('ko-KR')}</div>\n+                <div class=\"signature-box\"></div>\n+              </div>\n+            </div>\n+          </div>\n+        </body>\n+        </html>\n+      `);\n+      printWindow.document.close();\n+      \n+      // 자동으로 인쇄 대화상자 열기\n+      setTimeout(() => {\n+        printWindow.print();\n+      }, 1000);\n+    }\n   };\n \n   return (\n     <PageContainer>\n"
                },
                {
                    "date": 1761462269781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,15 +233,15 @@\n `;\n \n const ImageSection = styled.div`\n   display: flex;\n-  gap: 20px;\n+  gap: 10px;\n   margin-bottom: 20px;\n `;\n \n const ImageBox = styled.div`\n   flex: 1;\n-  height: 200px;\n+  height: 300px;\n   border: 2px dashed ${AppColors.borderLight};\n   border-radius: 8px;\n   display: flex;\n   flex-direction: column;\n@@ -404,10 +404,10 @@\n             .form-group { flex: 1; }\n             .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n             .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n             .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n-            .image-section { display: flex; gap: 20px; margin-bottom: 20px; }\n-            .image-box { flex: 1; height: 200px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n+            .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n+            .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n             .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n             .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n             .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n             .date-area { text-align: right; }\n@@ -534,10 +534,10 @@\n             .form-group { flex: 1; }\n             .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n             .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n             .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n-            .image-section { display: flex; gap: 20px; margin-bottom: 20px; }\n-            .image-box { flex: 1; height: 200px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n+            .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n+            .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n             .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n             .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n             .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n             .date-area { text-align: right; }\n"
                },
                {
                    "date": 1761463031108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,11 @@\n import styled from 'styled-components';\n import { AppColors } from '../styles/colors';\n import { AppTextStyles } from '../styles/textStyles';\n import { dbManager } from '../utils/indexedDB';\n-import { Member } from '../utils/db/types';\n+import { Member, ExercisePrescription, ExercisePrescriptionMedicalHistory, BodyImagePoint } from '../utils/db/types';\n+import BodyImageCanvas from '../components/BodyImageCanvas';\n+import bodyImageSvgs from '../utils/bodyImageSvgs';\n \n const PageContainer = styled.div`\n   min-height: 100vh;\n   display: flex;\n@@ -237,21 +239,8 @@\n   gap: 10px;\n   margin-bottom: 20px;\n `;\n \n-const ImageBox = styled.div`\n-  flex: 1;\n-  height: 300px;\n-  border: 2px dashed ${AppColors.borderLight};\n-  border-radius: 8px;\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  justify-content: center;\n-  color: ${AppColors.onInput1};\n-  font-size: ${AppTextStyles.body2.fontSize};\n-`;\n-\n const ConsentSection = styled.div`\n   margin-top: 40px;\n   padding: 20px;\n   border: 1px solid ${AppColors.borderLight};\n@@ -301,8 +290,9 @@\n   const [searchParams] = useSearchParams();\n   const [searchTerm, setSearchTerm] = useState('');\n   const [selectedMember, setSelectedMember] = useState<Member | null>(null);\n   const [members, setMembers] = useState<Member[]>([]);\n+  const [currentPrescription, setCurrentPrescription] = useState<ExercisePrescription | null>(null);\n   const [formData, setFormData] = useState({\n     height: '',\n     weight: '',\n     footSize: '',\n@@ -314,10 +304,15 @@\n       osteoporosis: false,\n       thyroid: false,\n       varicose: false,\n       arthritis: false,\n+    } as ExercisePrescriptionMedicalHistory,\n+    painHistory: '',\n+    bodyImages: {\n+      front: [] as BodyImagePoint[],\n+      spine: [] as BodyImagePoint[],\n+      back: [] as BodyImagePoint[],\n     },\n-    painHistory: '',\n   });\n \n   // 컴포넌트 마운트 시 회원 데이터 로드\n   useEffect(() => {\n@@ -334,8 +329,90 @@\n \n     loadMembers();\n   }, []);\n \n+  // 선택된 회원이 변경될 때 운동처방서 로드\n+  useEffect(() => {\n+    const loadPrescription = async () => {\n+      if (!selectedMember) {\n+        // 회원이 선택되지 않았으면 초기화\n+        setCurrentPrescription(null);\n+        setFormData({\n+          height: '',\n+          weight: '',\n+          footSize: '',\n+          medications: '',\n+          medicalHistory: {\n+            musculoskeletal: false,\n+            cardiovascular: false,\n+            diabetes: false,\n+            osteoporosis: false,\n+            thyroid: false,\n+            varicose: false,\n+            arthritis: false,\n+          },\n+          painHistory: '',\n+          bodyImages: {\n+            front: [],\n+            spine: [],\n+            back: [],\n+          },\n+        });\n+        return;\n+      }\n+\n+      try {\n+        // 해당 회원의 운동처방서 조회\n+        const prescription = await dbManager.exercisePrescription.getExercisePrescriptionByMember(selectedMember.id);\n+        \n+        if (prescription) {\n+          // 기존 운동처방서가 있으면 로드\n+          setCurrentPrescription(prescription);\n+          setFormData({\n+            height: prescription.height,\n+            weight: prescription.weight,\n+            footSize: prescription.footSize,\n+            medications: prescription.medications,\n+            medicalHistory: prescription.medicalHistory,\n+            painHistory: prescription.painHistory,\n+            bodyImages: prescription.bodyImages,\n+          });\n+          console.log('기존 운동처방서 로드:', prescription);\n+        } else {\n+          // 기존 운동처방서가 없으면 빈 템플릿 사용\n+          setCurrentPrescription(null);\n+          setFormData({\n+            height: '',\n+            weight: '',\n+            footSize: '',\n+            medications: '',\n+            medicalHistory: {\n+              musculoskeletal: false,\n+              cardiovascular: false,\n+              diabetes: false,\n+              osteoporosis: false,\n+              thyroid: false,\n+              varicose: false,\n+              arthritis: false,\n+            },\n+            painHistory: '',\n+            bodyImages: {\n+              front: [],\n+              spine: [],\n+              back: [],\n+            },\n+          });\n+          console.log('새 운동처방서 템플릿 생성');\n+        }\n+      } catch (error) {\n+        console.error('운동처방서 로드 실패:', error);\n+        alert('운동처방서 로드에 실패했습니다.');\n+      }\n+    };\n+\n+    loadPrescription();\n+  }, [selectedMember]);\n+\n   const filteredMembers = members.filter(member =>\n     member.name.includes(searchTerm) || member.phone.includes(searchTerm)\n   );\n \n@@ -370,130 +447,226 @@\n       },\n     }));\n   };\n \n-  const handleSave = () => {\n+  // 신체 이미지 포인트 관리 함수들\n+  const handleAddBodyImagePoint = (imageType: 'front' | 'spine' | 'back', point: Omit<BodyImagePoint, 'id'>) => {\n+    const newPoint: BodyImagePoint = {\n+      ...point,\n+      id: `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`, // 임시 ID 생성\n+    };\n+\n+    setFormData(prev => ({\n+      ...prev,\n+      bodyImages: {\n+        ...prev.bodyImages,\n+        [imageType]: [...prev.bodyImages[imageType], newPoint],\n+      },\n+    }));\n+  };\n+\n+  const handleUpdateBodyImagePoint = (imageType: 'front' | 'spine' | 'back', pointId: string, updates: Partial<Omit<BodyImagePoint, 'id'>>) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      bodyImages: {\n+        ...prev.bodyImages,\n+        [imageType]: prev.bodyImages[imageType].map(point =>\n+          point.id === pointId ? { ...point, ...updates } : point\n+        ),\n+      },\n+    }));\n+  };\n+\n+  const handleDeleteBodyImagePoint = (imageType: 'front' | 'spine' | 'back', pointId: string) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      bodyImages: {\n+        ...prev.bodyImages,\n+        [imageType]: prev.bodyImages[imageType].filter(point => point.id !== pointId),\n+      },\n+    }));\n+  };\n+\n+  const handleSave = async () => {\n     if (!selectedMember) {\n       alert('회원을 선택해주세요.');\n       return;\n     }\n     \n-    // TODO: 데이터 저장 로직 구현\n-    console.log('저장:', { selectedMember, formData });\n-    alert('운동처방서가 저장되었습니다.');\n-  };\n+    try {\n+      const prescriptionData = {\n+        memberId: selectedMember.id,\n+        memberName: selectedMember.name,\n+        height: formData.height,\n+        weight: formData.weight,\n+        footSize: formData.footSize,\n+        medications: formData.medications,\n+        medicalHistory: formData.medicalHistory,\n+        painHistory: formData.painHistory,\n+        bodyImages: formData.bodyImages,\n+        isActive: true,\n+        prescriptionDate: new Date(),\n+      };\n \n-  const handleShare = () => {\n-    if (!selectedMember) {\n-      alert('회원을 선택해주세요.');\n-      return;\n+      if (currentPrescription) {\n+        // 기존 운동처방서 업데이트\n+        await dbManager.exercisePrescription.updateExercisePrescription(\n+          currentPrescription.id,\n+          prescriptionData\n+        );\n+        console.log('운동처방서 업데이트 완료:', currentPrescription.id);\n+      } else {\n+        // 새 운동처방서 생성\n+        const prescriptionId = await dbManager.exercisePrescription.saveExercisePrescription(prescriptionData);\n+        console.log('새 운동처방서 생성 완료:', prescriptionId);\n+        \n+        // 생성된 처방서 정보 업데이트\n+        const savedPrescription = await dbManager.exercisePrescription.getExercisePrescriptionById(prescriptionId);\n+        setCurrentPrescription(savedPrescription);\n+      }\n+      \n+      alert('운동처방서가 저장되었습니다.');\n+    } catch (error) {\n+      console.error('운동처방서 저장 실패:', error);\n+      alert('운동처방서 저장에 실패했습니다.');\n     }\n+  };\n \n-    // 운동처방서만 표시하는 새 창 생성\n-    const printWindow = window.open('', '_blank', 'width=800,height=600');\n-    if (printWindow) {\n-      printWindow.document.write(`\n-        <!DOCTYPE html>\n-        <html>\n-        <head>\n-          <title>운동처방서 - ${selectedMember.name}</title>\n-          <style>\n-            body { font-family: Arial, sans-serif; margin: 20px; }\n-            .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n-            .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n-            .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n-            .form-group { flex: 1; }\n-            .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n-            .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n-            .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n-            .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n-            .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n-            .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n-            .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n-            .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n-            .date-area { text-align: right; }\n-            textarea { resize: vertical; height: 100px; }\n-          </style>\n-        </head>\n-        <body>\n-          <div class=\"prescription-container\">\n-            <h1 class=\"title\">운동처방서</h1>\n-            \n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">성명</label>\n-                <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">생년월일</label>\n-                <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">키</label>\n-                <input class=\"form-input\" value=\"${formData.height}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">체중</label>\n-                <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">발사이즈</label>\n-                <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n-              </div>\n+  const generatePrescriptionHTML = () => {\n+    if (!selectedMember) return '';\n+\n+    // 신체 이미지 포인트들을 HTML로 변환\n+    const generatePointsHTML = (points: BodyImagePoint[], imageType: string) => {\n+      if (points.length === 0) return `<div class=\"image-box\"><strong>${imageType}</strong><br><small>등록된 포인트 없음</small></div>`;\n+      \n+      const pointsHtml = points.map(point => \n+        `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y}%; width: 8px; height: 8px; background: ${point.color || '#ff0000'}; border: 1px solid white; border-radius: 50%; transform: translate(-50%, -50%);\"></div>\n+         ${point.memo ? `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y + 5}%; font-size: 10px; background: rgba(0,0,0,0.7); color: white; padding: 2px 4px; border-radius: 2px; transform: translateX(-50%); white-space: nowrap;\">${point.memo}</div>` : ''}`\n+      ).join('');\n+      \n+      return `<div class=\"image-box\" style=\"position: relative;\"><strong>${imageType}</strong><br><small>${points.length}개 포인트 등록됨</small>${pointsHtml}</div>`;\n+    };\n+\n+    return `\n+      <!DOCTYPE html>\n+      <html>\n+      <head>\n+        <title>운동처방서 - ${selectedMember.name}</title>\n+        <style>\n+          @media print {\n+            body { margin: 0; padding: 20px; }\n+            .no-print { display: none !important; }\n+          }\n+          body { font-family: Arial, sans-serif; margin: 20px; }\n+          .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n+          .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n+          .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n+          .form-group { flex: 1; }\n+          .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n+          .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n+          .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n+          .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n+          .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n+          .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n+          .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n+          .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n+          .date-area { text-align: right; }\n+          textarea { resize: vertical; height: 100px; }\n+          .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n+        </style>\n+      </head>\n+      <body>\n+        <button class=\"print-button no-print\" onclick=\"window.print()\">인쇄하기</button>\n+        <div class=\"prescription-container\">\n+          <h1 class=\"title\">운동처방서</h1>\n+          \n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">성명</label>\n+              <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n             </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">생년월일</label>\n+              <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">키</label>\n+              <input class=\"form-input\" value=\"${formData.height}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">체중</label>\n+              <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">발사이즈</label>\n+              <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n+            </div>\n+          </div>\n \n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">복용중인 약</label>\n-                <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n-              </div>\n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">복용중인 약</label>\n+              <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n             </div>\n+          </div>\n \n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">병력사항</label>\n-                <div class=\"checkbox-group\">\n-                  ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n-                    const labels: { [key: string]: string } = {\n-                      musculoskeletal: '근골격계질환',\n-                      cardiovascular: '심혈관계질환',\n-                      diabetes: '당뇨',\n-                      osteoporosis: '골다공증',\n-                      thyroid: '갑상선',\n-                      varicose: '정맥류',\n-                      arthritis: '관절염'\n-                    };\n-                    return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n-                  }).join('')}\n-                </div>\n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">병력사항</label>\n+              <div class=\"checkbox-group\">\n+                ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n+                  const labels: { [key: string]: string } = {\n+                    musculoskeletal: '근골격계질환',\n+                    cardiovascular: '심혈관계질환',\n+                    diabetes: '당뇨',\n+                    osteoporosis: '골다공증',\n+                    thyroid: '갑상선',\n+                    varicose: '정맥류',\n+                    arthritis: '관절염'\n+                  };\n+                  return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                }).join('')}\n               </div>\n             </div>\n+          </div>\n \n-            <div class=\"image-section\">\n-              <div class=\"image-box\"><strong>정면</strong><br><small>이미지 첨부</small></div>\n-              <div class=\"image-box\"><strong>척추</strong><br><small>이미지 첨부</small></div>\n-              <div class=\"image-box\"><strong>후면</strong><br><small>이미지 첨부</small></div>\n-            </div>\n+          <div class=\"image-section\">\n+            ${generatePointsHTML(formData.bodyImages.front, '정면')}\n+            ${generatePointsHTML(formData.bodyImages.spine, '척추')}\n+            ${generatePointsHTML(formData.bodyImages.back, '후면')}\n+          </div>\n \n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n-                <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n-              </div>\n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n+              <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n             </div>\n+          </div>\n \n-            <div class=\"consent-section\">\n-              <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n-              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n-              <div class=\"signature-area\">\n-                <div class=\"date-area\">날짜: ${new Date().toLocaleDateString('ko-KR')}</div>\n-                <div class=\"signature-box\"></div>\n-              </div>\n+          <div class=\"consent-section\">\n+            <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n+            본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n+            <div class=\"signature-area\">\n+              <div class=\"date-area\">날짜: ${new Date().toLocaleDateString('ko-KR')}</div>\n+              <div class=\"signature-box\"></div>\n             </div>\n           </div>\n-        </body>\n-        </html>\n-      `);\n+        </div>\n+      </body>\n+      </html>\n+    `;\n+  };\n+\n+  const handleShare = () => {\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n+    }\n+\n+    // 운동처방서만 표시하는 새 창 생성\n+    const printWindow = window.open('', '_blank', 'width=800,height=600');\n+    if (printWindow) {\n+      printWindow.document.write(generatePrescriptionHTML());\n       printWindow.document.close();\n       \n       // 네이티브 공유 API 사용 또는 링크 복사\n       if (navigator.share) {\n@@ -516,116 +689,9 @@\n \n     // 운동처방서만 출력하기 위한 새 창 생성\n     const printWindow = window.open('', '_blank', 'width=800,height=600');\n     if (printWindow) {\n-      printWindow.document.write(`\n-        <!DOCTYPE html>\n-        <html>\n-        <head>\n-          <title>운동처방서 - ${selectedMember.name}</title>\n-          <style>\n-            @media print {\n-              body { margin: 0; padding: 20px; }\n-              .no-print { display: none !important; }\n-            }\n-            body { font-family: Arial, sans-serif; margin: 20px; }\n-            .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n-            .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n-            .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n-            .form-group { flex: 1; }\n-            .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n-            .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n-            .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n-            .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n-            .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; }\n-            .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n-            .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n-            .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n-            .date-area { text-align: right; }\n-            textarea { resize: vertical; height: 100px; }\n-            .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n-          </style>\n-        </head>\n-        <body>\n-          <button class=\"print-button no-print\" onclick=\"window.print()\">인쇄하기</button>\n-          <div class=\"prescription-container\">\n-            <h1 class=\"title\">운동처방서</h1>\n-            \n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">성명</label>\n-                <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">생년월일</label>\n-                <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">키</label>\n-                <input class=\"form-input\" value=\"${formData.height}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">체중</label>\n-                <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n-              </div>\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">발사이즈</label>\n-                <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n-              </div>\n-            </div>\n-\n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">복용중인 약</label>\n-                <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n-              </div>\n-            </div>\n-\n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">병력사항</label>\n-                <div class=\"checkbox-group\">\n-                  ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n-                    const labels: { [key: string]: string } = {\n-                      musculoskeletal: '근골격계질환',\n-                      cardiovascular: '심혈관계질환',\n-                      diabetes: '당뇨',\n-                      osteoporosis: '골다공증',\n-                      thyroid: '갑상선',\n-                      varicose: '정맥류',\n-                      arthritis: '관절염'\n-                    };\n-                    return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n-                  }).join('')}\n-                </div>\n-              </div>\n-            </div>\n-\n-            <div class=\"image-section\">\n-              <div class=\"image-box\"><strong>정면</strong><br><small>이미지 첨부</small></div>\n-              <div class=\"image-box\"><strong>척추</strong><br><small>이미지 첨부</small></div>\n-              <div class=\"image-box\"><strong>후면</strong><br><small>이미지 첨부</small></div>\n-            </div>\n-\n-            <div class=\"form-row\">\n-              <div class=\"form-group\">\n-                <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n-                <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n-              </div>\n-            </div>\n-\n-            <div class=\"consent-section\">\n-              <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n-              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n-              <div class=\"signature-area\">\n-                <div class=\"date-area\">날짜: ${new Date().toLocaleDateString('ko-KR')}</div>\n-                <div class=\"signature-box\"></div>\n-              </div>\n-            </div>\n-          </div>\n-        </body>\n-        </html>\n-      `);\n+      printWindow.document.write(generatePrescriptionHTML());\n       printWindow.document.close();\n       \n       // 자동으로 인쇄 대화상자 열기\n       setTimeout(() => {\n@@ -808,20 +874,32 @@\n           </FormRow>\n \n           {/* 이미지 영역 */}\n           <ImageSection>\n-            <ImageBox>\n-              <strong>정면</strong>\n-              <small>이미지 첨부</small>\n-            </ImageBox>\n-            <ImageBox>\n-              <strong>척추</strong>\n-              <small>이미지 첨부</small>\n-            </ImageBox>\n-            <ImageBox>\n-              <strong>후면</strong>\n-              <small>이미지 첨부</small>\n-            </ImageBox>\n+            <BodyImageCanvas\n+              imageType=\"front\"\n+              imageUrl={bodyImageSvgs.front}\n+              points={formData.bodyImages.front}\n+              onAddPoint={(point) => handleAddBodyImagePoint('front', point)}\n+              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('front', pointId, updates)}\n+              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('front', pointId)}\n+            />\n+            <BodyImageCanvas\n+              imageType=\"spine\"\n+              imageUrl={bodyImageSvgs.spine}\n+              points={formData.bodyImages.spine}\n+              onAddPoint={(point) => handleAddBodyImagePoint('spine', point)}\n+              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('spine', pointId, updates)}\n+              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('spine', pointId)}\n+            />\n+            <BodyImageCanvas\n+              imageType=\"back\"\n+              imageUrl={bodyImageSvgs.back}\n+              points={formData.bodyImages.back}\n+              onAddPoint={(point) => handleAddBodyImagePoint('back', point)}\n+              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('back', pointId, updates)}\n+              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('back', pointId)}\n+            />\n           </ImageSection>\n \n           {/* 통증 히스토리 및 운동목적 */}\n           <FormRow>\n"
                },
                {
                    "date": 1761463257599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import { AppTextStyles } from '../styles/textStyles';\n import { dbManager } from '../utils/indexedDB';\n import { Member, ExercisePrescription, ExercisePrescriptionMedicalHistory, BodyImagePoint } from '../utils/db/types';\n import BodyImageCanvas from '../components/BodyImageCanvas';\n-import bodyImageSvgs from '../utils/bodyImageSvgs';\n \n const PageContainer = styled.div`\n   min-height: 100vh;\n   display: flex;\n@@ -876,25 +875,25 @@\n           {/* 이미지 영역 */}\n           <ImageSection>\n             <BodyImageCanvas\n               imageType=\"front\"\n-              imageUrl={bodyImageSvgs.front}\n+              imageUrl=\"\"\n               points={formData.bodyImages.front}\n               onAddPoint={(point) => handleAddBodyImagePoint('front', point)}\n               onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('front', pointId, updates)}\n               onDeletePoint={(pointId) => handleDeleteBodyImagePoint('front', pointId)}\n             />\n             <BodyImageCanvas\n               imageType=\"spine\"\n-              imageUrl={bodyImageSvgs.spine}\n+              imageUrl=\"\"\n               points={formData.bodyImages.spine}\n               onAddPoint={(point) => handleAddBodyImagePoint('spine', point)}\n               onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('spine', pointId, updates)}\n               onDeletePoint={(pointId) => handleDeleteBodyImagePoint('spine', pointId)}\n             />\n             <BodyImageCanvas\n               imageType=\"back\"\n-              imageUrl={bodyImageSvgs.back}\n+              imageUrl=\"\"\n               points={formData.bodyImages.back}\n               onAddPoint={(point) => handleAddBodyImagePoint('back', point)}\n               onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('back', pointId, updates)}\n               onDeletePoint={(pointId) => handleDeleteBodyImagePoint('back', pointId)}\n"
                },
                {
                    "date": 1761463993357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import { AppTextStyles } from '../styles/textStyles';\n import { dbManager } from '../utils/indexedDB';\n import { Member, ExercisePrescription, ExercisePrescriptionMedicalHistory, BodyImagePoint } from '../utils/db/types';\n import BodyImageCanvas from '../components/BodyImageCanvas';\n+import SignatureCanvas from '../components/SignatureCanvas';\n \n const PageContainer = styled.div`\n   min-height: 100vh;\n   display: flex;\n@@ -44,32 +45,32 @@\n     display: none;\n   }\n `;\n \n-const ActionButton = styled.button`\n+const ActionButton = styled.button<{ disabled?: boolean }>`\n   width: 60px;\n   height: 60px;\n   border: none;\n   border-radius: 12px;\n-  background: ${AppColors.primary};\n-  color: ${AppColors.onPrimary};\n+  background: ${props => props.disabled ? AppColors.buttonDisabled : AppColors.primary};\n+  color: ${props => props.disabled ? AppColors.disabled : AppColors.onPrimary};\n   font-size: ${AppTextStyles.label2.fontSize};\n   font-weight: 600;\n-  cursor: pointer;\n+  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n   gap: 4px;\n   transition: all 0.2s ease;\n   \n   &:hover {\n-    background: ${AppColors.primary}dd;\n-    transform: translateY(-2px);\n+    background: ${props => props.disabled ? AppColors.buttonDisabled : AppColors.primary + 'dd'};\n+    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\n   }\n   \n   &:active {\n-    transform: translateY(0);\n+    transform: ${props => props.disabled ? 'none' : 'translateY(0)'};\n   }\n `;\n \n const ButtonIcon = styled.div`\n@@ -259,29 +260,45 @@\n   justify-content: space-between;\n   align-items: flex-end;\n `;\n \n-const SignatureBox = styled.div`\n-  width: 200px;\n-  height: 80px;\n+const SignatureSection = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  gap: 10px;\n+`;\n+\n+const SignatureLabel = styled.div`\n+  font-size: ${AppTextStyles.body3.fontSize};\n+  color: ${AppColors.onInput1};\n+`;\n+\n+const DateRow = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  margin-top: 20px;\n+  padding: 15px;\n+  background: #f8f9fa;\n+  border-radius: 8px;\n   border: 1px solid ${AppColors.borderLight};\n-  border-radius: 6px;\n-  background: white;\n-  position: relative;\n-  \n-  &::after {\n-    content: '서명';\n-    position: absolute;\n-    bottom: -25px;\n-    left: 50%;\n-    transform: translateX(-50%);\n-    font-size: ${AppTextStyles.body3.fontSize};\n-    color: ${AppColors.onInput1};\n-  }\n `;\n \n-const DateArea = styled.div`\n-  text-align: right;\n+const DateItem = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  gap: 5px;\n+`;\n+\n+const DateLabel = styled.div`\n+  font-size: ${AppTextStyles.body3.fontSize};\n+  color: ${AppColors.onInput1};\n+  font-weight: 600;\n+`;\n+\n+const DateValue = styled.div`\n   font-size: ${AppTextStyles.body2.fontSize};\n   color: ${AppColors.onBackground};\n `;\n \n@@ -310,8 +327,9 @@\n       front: [] as BodyImagePoint[],\n       spine: [] as BodyImagePoint[],\n       back: [] as BodyImagePoint[],\n     },\n+    signatureData: '', // 서명 데이터\n   });\n \n   // 컴포넌트 마운트 시 회원 데이터 로드\n   useEffect(() => {\n@@ -354,8 +372,9 @@\n             front: [],\n             spine: [],\n             back: [],\n           },\n+          signatureData: '',\n         });\n         return;\n       }\n \n@@ -373,8 +392,9 @@\n             medications: prescription.medications,\n             medicalHistory: prescription.medicalHistory,\n             painHistory: prescription.painHistory,\n             bodyImages: prescription.bodyImages,\n+            signatureData: prescription.signatureData || '',\n           });\n           console.log('기존 운동처방서 로드:', prescription);\n         } else {\n           // 기존 운동처방서가 없으면 빈 템플릿 사용\n@@ -398,8 +418,9 @@\n               front: [],\n               spine: [],\n               back: [],\n             },\n+            signatureData: '',\n           });\n           console.log('새 운동처방서 템플릿 생성');\n         }\n       } catch (error) {\n@@ -446,8 +467,21 @@\n       },\n     }));\n   };\n \n+  // 서명 변경 핸들러\n+  const handleSignatureChange = (dataUrl: string) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      signatureData: dataUrl,\n+    }));\n+  };\n+\n+  // 서명이 있는지 확인하는 함수\n+  const hasSignature = () => {\n+    return formData.signatureData && formData.signatureData.trim() !== '';\n+  };\n+\n   // 신체 이미지 포인트 관리 함수들\n   const handleAddBodyImagePoint = (imageType: 'front' | 'spine' | 'back', point: Omit<BodyImagePoint, 'id'>) => {\n     const newPoint: BodyImagePoint = {\n       ...point,\n@@ -489,8 +523,14 @@\n     if (!selectedMember) {\n       alert('회원을 선택해주세요.');\n       return;\n     }\n+\n+    // 서명 검증\n+    if (!hasSignature()) {\n+      alert('서명이 필요합니다. 서명을 완료해주세요.');\n+      return;\n+    }\n     \n     try {\n       const prescriptionData = {\n         memberId: selectedMember.id,\n@@ -501,17 +541,30 @@\n         medications: formData.medications,\n         medicalHistory: formData.medicalHistory,\n         painHistory: formData.painHistory,\n         bodyImages: formData.bodyImages,\n+        signatureData: formData.signatureData,\n+        signedAt: currentPrescription?.signedAt || new Date(), // 기존에 서명 날짜가 있으면 유지, 없으면 현재 시각\n         isActive: true,\n         prescriptionDate: new Date(),\n       };\n \n       if (currentPrescription) {\n         // 기존 운동처방서 업데이트\n         await dbManager.exercisePrescription.updateExercisePrescription(\n           currentPrescription.id,\n-          prescriptionData\n+          {\n+            height: formData.height,\n+            weight: formData.weight,\n+            footSize: formData.footSize,\n+            medications: formData.medications,\n+            medicalHistory: formData.medicalHistory,\n+            painHistory: formData.painHistory,\n+            bodyImages: formData.bodyImages,\n+            signatureData: formData.signatureData,\n+            isActive: true,\n+            prescriptionDate: new Date(),\n+          }\n         );\n         console.log('운동처방서 업데이트 완료:', currentPrescription.id);\n       } else {\n         // 새 운동처방서 생성\n@@ -525,9 +578,9 @@\n       \n       alert('운동처방서가 저장되었습니다.');\n     } catch (error) {\n       console.error('운동처방서 저장 실패:', error);\n-      alert('운동처방서 저장에 실패했습니다.');\n+      alert(error instanceof Error ? error.message : '운동처방서 저장에 실패했습니다.');\n     }\n   };\n \n   const generatePrescriptionHTML = () => {\n@@ -644,11 +697,36 @@\n           <div class=\"consent-section\">\n             <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n             본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n             <div class=\"signature-area\">\n-              <div class=\"date-area\">날짜: ${new Date().toLocaleDateString('ko-KR')}</div>\n-              <div class=\"signature-box\"></div>\n+              <div style=\"text-align: center;\">\n+                <div style=\"margin-bottom: 10px; font-size: 14px; color: #666;\">고객 서명</div>\n+                ${formData.signatureData ? `<img src=\"${formData.signatureData}\" style=\"max-width: 250px; max-height: 120px; border: 1px solid #ddd; border-radius: 6px;\">` : '<div style=\"width: 250px; height: 120px; border: 1px solid #ddd; border-radius: 6px; background: white; display: flex; align-items: center; justify-content: center; color: #999;\">서명 없음</div>'}\n+              </div>\n             </div>\n+            \n+            <div style=\"display: flex; justify-content: space-between; margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n+              <div style=\"text-align: center;\">\n+                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n+                <div style=\"font-size: 14px; color: #000;\">\n+                  ${currentPrescription?.signedAt \n+                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                    : hasSignature() \n+                      ? new Date().toLocaleDateString('ko-KR') \n+                      : '서명 후 표시됩니다'\n+                  }\n+                </div>\n+              </div>\n+              <div style=\"text-align: center;\">\n+                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n+                <div style=\"font-size: 14px; color: #000;\">\n+                  ${currentPrescription?.updatedAt \n+                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                    : new Date().toLocaleDateString('ko-KR')\n+                  }\n+                </div>\n+              </div>\n+            </div>\n           </div>\n         </div>\n       </body>\n       </html>\n@@ -724,9 +802,13 @@\n         </MemberList>\n       </SearchPanel>\n \n       <ButtonPanel>\n-        <ActionButton onClick={handleSave} title=\"저장\">\n+        <ActionButton \n+          onClick={handleSave} \n+          title=\"저장\"\n+          disabled={!hasSignature()}\n+        >\n           <ButtonIcon>💾</ButtonIcon>\n           <ButtonText>저장</ButtonText>\n         </ActionButton>\n         \n@@ -919,13 +1001,42 @@\n               라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n               본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.\n             </ConsentText>\n             <SignatureArea>\n-              <DateArea>\n-                날짜: {new Date().toLocaleDateString('ko-KR')}\n-              </DateArea>\n-              <SignatureBox />\n+              <SignatureSection>\n+                <SignatureLabel>고객 서명</SignatureLabel>\n+                <SignatureCanvas\n+                  width={250}\n+                  height={120}\n+                  onSignatureChange={handleSignatureChange}\n+                  initialSignature={formData.signatureData}\n+                />\n+              </SignatureSection>\n             </SignatureArea>\n+            \n+            {/* 날짜 정보 표시 */}\n+            <DateRow>\n+              <DateItem>\n+                <DateLabel>서명 날짜</DateLabel>\n+                <DateValue>\n+                  {currentPrescription?.signedAt \n+                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                    : hasSignature() \n+                      ? new Date().toLocaleDateString('ko-KR') \n+                      : '서명 후 표시됩니다'\n+                  }\n+                </DateValue>\n+              </DateItem>\n+              <DateItem>\n+                <DateLabel>최근 업데이트</DateLabel>\n+                <DateValue>\n+                  {currentPrescription?.updatedAt \n+                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                    : '저장 후 표시됩니다'\n+                  }\n+                </DateValue>\n+              </DateItem>\n+            </DateRow>\n           </ConsentSection>\n         </PrescriptionContainer>\n       </PrescriptionPanel>\n     </PageContainer>\n"
                },
                {
                    "date": 1761464143922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1050 @@\n+import React, { useEffect, useState } from 'react';\n+import { useSearchParams } from 'react-router-dom';\n+import styled from 'styled-components';\n+import { AppColors } from '../styles/colors';\n+import { AppTextStyles } from '../styles/textStyles';\n+import { dbManager } from '../utils/indexedDB';\n+import { Member, ExercisePrescription, ExercisePrescriptionMedicalHistory, BodyImagePoint } from '../utils/db/types';\n+import BodyImageCanvas from '../components/BodyImageCanvas';\n+import SignatureCanvas from '../components/SignatureCanvas';\n+\n+const PageContainer = styled.div`\n+  min-height: 100vh;\n+  display: flex;\n+  background: ${AppColors.background};\n+  \n+  @media print {\n+    display: block;\n+    background: white;\n+  }\n+`;\n+\n+const SearchPanel = styled.div`\n+  width: 300px;\n+  background: ${AppColors.surface};\n+  border-right: 1px solid ${AppColors.borderLight};\n+  padding: 20px;\n+  overflow-y: auto;\n+  \n+  @media print {\n+    display: none;\n+  }\n+`;\n+\n+const ButtonPanel = styled.div`\n+  width: 80px;\n+  background: ${AppColors.surface};\n+  border-right: 1px solid ${AppColors.borderLight};\n+  padding: 20px 10px;\n+  display: flex;\n+  flex-direction: column;\n+  gap: 15px;\n+  align-items: center;\n+  \n+  @media print {\n+    display: none;\n+  }\n+`;\n+\n+const ActionButton = styled.button<{ disabled?: boolean }>`\n+  width: 60px;\n+  height: 60px;\n+  border: none;\n+  border-radius: 12px;\n+  background: ${props => props.disabled ? AppColors.buttonDisabled : AppColors.primary};\n+  color: ${props => props.disabled ? AppColors.disabled : AppColors.onPrimary};\n+  font-size: ${AppTextStyles.label2.fontSize};\n+  font-weight: 600;\n+  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  justify-content: center;\n+  gap: 4px;\n+  transition: all 0.2s ease;\n+  \n+  &:hover {\n+    background: ${props => props.disabled ? AppColors.buttonDisabled : AppColors.primary + 'dd'};\n+    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\n+  }\n+  \n+  &:active {\n+    transform: ${props => props.disabled ? 'none' : 'translateY(0)'};\n+  }\n+`;\n+\n+const ButtonIcon = styled.div`\n+  font-size: 20px;\n+  line-height: 1;\n+`;\n+\n+const ButtonText = styled.div`\n+  font-size: 10px;\n+  line-height: 1;\n+`;\n+\n+const SearchTitle = styled.h2`\n+  font-size: ${AppTextStyles.title2.fontSize};\n+  font-weight: 600;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 20px;\n+`;\n+\n+const SearchInput = styled.input`\n+  width: 100%;\n+  padding: 12px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 8px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  margin-bottom: 16px;\n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+  }\n+`;\n+\n+const MemberList = styled.div`\n+  max-height: 400px;\n+  overflow-y: auto;\n+`;\n+\n+const MemberItem = styled.div<{ selected?: boolean }>`\n+  padding: 12px;\n+  border: 1px solid ${props => props.selected ? AppColors.primary : AppColors.borderLight};\n+  border-radius: 8px;\n+  margin-bottom: 8px;\n+  cursor: pointer;\n+  background: ${props => props.selected ? AppColors.primary + '10' : AppColors.surface};\n+  \n+  &:hover {\n+    background: ${AppColors.primary}20;\n+  }\n+`;\n+\n+const MemberName = styled.div`\n+  font-weight: 600;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 4px;\n+`;\n+\n+const MemberInfo = styled.div`\n+  font-size: ${AppTextStyles.body3.fontSize};\n+  color: ${AppColors.onInput1};\n+`;\n+\n+const PrescriptionPanel = styled.div`\n+  flex: 1;\n+  padding: 20px;\n+  overflow-y: auto;\n+  \n+  @media print {\n+    padding: 0;\n+    overflow: visible;\n+  }\n+`;\n+\n+const PrescriptionContainer = styled.div`\n+  max-width: 800px;\n+  margin: 0 auto;\n+  background: white;\n+  padding: 40px;\n+  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n+  min-height: calc(100vh - 40px);\n+  \n+  @media print {\n+    box-shadow: none;\n+    padding: 20px;\n+    margin: 0;\n+    max-width: none;\n+    min-height: auto;\n+  }\n+`;\n+\n+const PrescriptionTitle = styled.h1`\n+  text-align: center;\n+  font-size: 24px;\n+  font-weight: bold;\n+  margin-bottom: 30px;\n+  color: ${AppColors.onBackground};\n+`;\n+\n+const FormRow = styled.div`\n+  display: flex;\n+  gap: 15px;\n+  margin-bottom: 20px;\n+  align-items: flex-start;\n+`;\n+\n+const FormGroup = styled.div`\n+  flex: 1;\n+`;\n+\n+const FormLabel = styled.label`\n+  display: block;\n+  font-size: ${AppTextStyles.label1.fontSize};\n+  font-weight: 600;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 8px;\n+`;\n+\n+const FormInput = styled.input`\n+  width: 100%;\n+  padding: 10px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 6px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  box-sizing: border-box;\n+  \n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+  }\n+`;\n+\n+const FormTextarea = styled.textarea`\n+  width: 100%;\n+  padding: 10px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 6px;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  resize: vertical;\n+  box-sizing: border-box;\n+  \n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+  }\n+`;\n+\n+const CheckboxGroup = styled.div`\n+  display: flex;\n+  flex-wrap: wrap;\n+  gap: 15px;\n+`;\n+\n+const CheckboxItem = styled.label`\n+  display: flex;\n+  align-items: center;\n+  gap: 8px;\n+  cursor: pointer;\n+  font-size: ${AppTextStyles.body2.fontSize};\n+`;\n+\n+const Checkbox = styled.input`\n+  margin: 0;\n+`;\n+\n+const ImageSection = styled.div`\n+  display: flex;\n+  gap: 10px;\n+  margin-bottom: 20px;\n+`;\n+\n+const ConsentSection = styled.div`\n+  margin-top: 40px;\n+  padding: 20px;\n+  border: 1px solid ${AppColors.borderLight};\n+  border-radius: 8px;\n+  background: #f9f9f9;\n+`;\n+\n+const ConsentText = styled.p`\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  line-height: 1.6;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 20px;\n+`;\n+\n+const SignatureArea = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: flex-end;\n+`;\n+\n+const SignatureSection = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  gap: 10px;\n+`;\n+\n+const SignatureLabel = styled.div`\n+  font-size: ${AppTextStyles.body3.fontSize};\n+  color: ${AppColors.onInput1};\n+`;\n+\n+const DateRow = styled.div`\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  margin-top: 20px;\n+  padding: 15px;\n+  background: #f8f9fa;\n+  border-radius: 8px;\n+  border: 1px solid ${AppColors.borderLight};\n+`;\n+\n+const DateItem = styled.div`\n+  display: flex;\n+  flex-direction: column;\n+  align-items: center;\n+  gap: 5px;\n+`;\n+\n+const DateLabel = styled.div`\n+  font-size: ${AppTextStyles.body3.fontSize};\n+  color: ${AppColors.onInput1};\n+  font-weight: 600;\n+`;\n+\n+const DateValue = styled.div`\n+  font-size: ${AppTextStyles.body2.fontSize};\n+  color: ${AppColors.onBackground};\n+`;\n+\n+const ExercisePrescriptionPage: React.FC = () => {\n+  const [searchParams] = useSearchParams();\n+  const [searchTerm, setSearchTerm] = useState('');\n+  const [selectedMember, setSelectedMember] = useState<Member | null>(null);\n+  const [members, setMembers] = useState<Member[]>([]);\n+  const [currentPrescription, setCurrentPrescription] = useState<ExercisePrescription | null>(null);\n+  const [formData, setFormData] = useState({\n+    height: '',\n+    weight: '',\n+    footSize: '',\n+    medications: '',\n+    medicalHistory: {\n+      musculoskeletal: false,\n+      cardiovascular: false,\n+      diabetes: false,\n+      osteoporosis: false,\n+      thyroid: false,\n+      varicose: false,\n+      arthritis: false,\n+    } as ExercisePrescriptionMedicalHistory,\n+    painHistory: '',\n+    bodyImages: {\n+      front: [] as BodyImagePoint[],\n+      spine: [] as BodyImagePoint[],\n+      back: [] as BodyImagePoint[],\n+    },\n+    signatureData: '', // 서명 데이터\n+  });\n+\n+  // 컴포넌트 마운트 시 회원 데이터 로드\n+  useEffect(() => {\n+    const loadMembers = async () => {\n+      try {\n+        const allMembers = await dbManager.getAllMembers();\n+        // 활성 회원만 필터링\n+        const activeMembers = allMembers.filter(member => member.isActive);\n+        setMembers(activeMembers);\n+      } catch (error) {\n+        console.error('회원 데이터 로드 실패:', error);\n+      }\n+    };\n+\n+    loadMembers();\n+  }, []);\n+\n+  // 선택된 회원이 변경될 때 운동처방서 로드\n+  useEffect(() => {\n+    const loadPrescription = async () => {\n+      if (!selectedMember) {\n+        // 회원이 선택되지 않았으면 초기화\n+        setCurrentPrescription(null);\n+        setFormData({\n+          height: '',\n+          weight: '',\n+          footSize: '',\n+          medications: '',\n+          medicalHistory: {\n+            musculoskeletal: false,\n+            cardiovascular: false,\n+            diabetes: false,\n+            osteoporosis: false,\n+            thyroid: false,\n+            varicose: false,\n+            arthritis: false,\n+          },\n+          painHistory: '',\n+          bodyImages: {\n+            front: [],\n+            spine: [],\n+            back: [],\n+          },\n+          signatureData: '',\n+        });\n+        return;\n+      }\n+\n+      try {\n+        // 해당 회원의 운동처방서 조회\n+        const prescription = await dbManager.exercisePrescription.getExercisePrescriptionByMember(selectedMember.id);\n+        \n+        if (prescription) {\n+          // 기존 운동처방서가 있으면 로드\n+          setCurrentPrescription(prescription);\n+          setFormData({\n+            height: prescription.height,\n+            weight: prescription.weight,\n+            footSize: prescription.footSize,\n+            medications: prescription.medications,\n+            medicalHistory: prescription.medicalHistory,\n+            painHistory: prescription.painHistory,\n+            bodyImages: prescription.bodyImages,\n+            signatureData: prescription.signatureData || '',\n+          });\n+          console.log('기존 운동처방서 로드:', prescription);\n+        } else {\n+          // 기존 운동처방서가 없으면 빈 템플릿 사용\n+          setCurrentPrescription(null);\n+          setFormData({\n+            height: '',\n+            weight: '',\n+            footSize: '',\n+            medications: '',\n+            medicalHistory: {\n+              musculoskeletal: false,\n+              cardiovascular: false,\n+              diabetes: false,\n+              osteoporosis: false,\n+              thyroid: false,\n+              varicose: false,\n+              arthritis: false,\n+            },\n+            painHistory: '',\n+            bodyImages: {\n+              front: [],\n+              spine: [],\n+              back: [],\n+            },\n+            signatureData: '',\n+          });\n+          console.log('새 운동처방서 템플릿 생성');\n+        }\n+      } catch (error) {\n+        console.error('운동처방서 로드 실패:', error);\n+        alert('운동처방서 로드에 실패했습니다.');\n+      }\n+    };\n+\n+    loadPrescription();\n+  }, [selectedMember]);\n+\n+  const filteredMembers = members.filter(member =>\n+    member.name.includes(searchTerm) || member.phone.includes(searchTerm)\n+  );\n+\n+  useEffect(() => {\n+    // URL 파라미터에서 userid 또는 memberId 확인\n+    const userIdParam = searchParams.get('userid') || searchParams.get('memberId');\n+    if (userIdParam && members.length > 0) {\n+      const member = members.find(m => m.id === userIdParam);\n+      if (member) {\n+        setSelectedMember(member);\n+      }\n+    }\n+  }, [searchParams, members]);\n+\n+  const handleMemberSelect = (member: Member) => {\n+    setSelectedMember(member);\n+  };\n+\n+  const handleInputChange = (field: string, value: string) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      [field]: value,\n+    }));\n+  };\n+\n+  const handleCheckboxChange = (field: string, checked: boolean) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      medicalHistory: {\n+        ...prev.medicalHistory,\n+        [field]: checked,\n+      },\n+    }));\n+  };\n+\n+  // 서명 변경 핸들러\n+  const handleSignatureChange = (dataUrl: string) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      signatureData: dataUrl,\n+    }));\n+  };\n+\n+  // 서명이 있는지 확인하는 함수\n+  const hasSignature = () => {\n+    return formData.signatureData && formData.signatureData.trim() !== '';\n+  };\n+\n+  // 신체 이미지 포인트 관리 함수들\n+  const handleAddBodyImagePoint = (imageType: 'front' | 'spine' | 'back', point: Omit<BodyImagePoint, 'id'>) => {\n+    const newPoint: BodyImagePoint = {\n+      ...point,\n+      id: `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`, // 임시 ID 생성\n+    };\n+\n+    setFormData(prev => ({\n+      ...prev,\n+      bodyImages: {\n+        ...prev.bodyImages,\n+        [imageType]: [...prev.bodyImages[imageType], newPoint],\n+      },\n+    }));\n+  };\n+\n+  const handleUpdateBodyImagePoint = (imageType: 'front' | 'spine' | 'back', pointId: string, updates: Partial<Omit<BodyImagePoint, 'id'>>) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      bodyImages: {\n+        ...prev.bodyImages,\n+        [imageType]: prev.bodyImages[imageType].map(point =>\n+          point.id === pointId ? { ...point, ...updates } : point\n+        ),\n+      },\n+    }));\n+  };\n+\n+  const handleDeleteBodyImagePoint = (imageType: 'front' | 'spine' | 'back', pointId: string) => {\n+    setFormData(prev => ({\n+      ...prev,\n+      bodyImages: {\n+        ...prev.bodyImages,\n+        [imageType]: prev.bodyImages[imageType].filter(point => point.id !== pointId),\n+      },\n+    }));\n+  };\n+\n+  const handleSave = async () => {\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n+    }\n+\n+    // 서명 검증\n+    if (!hasSignature()) {\n+      alert('서명이 필요합니다. 서명을 완료해주세요.');\n+      return;\n+    }\n+    \n+    try {\n+      const prescriptionData = {\n+        memberId: selectedMember.id,\n+        memberName: selectedMember.name,\n+        height: formData.height,\n+        weight: formData.weight,\n+        footSize: formData.footSize,\n+        medications: formData.medications,\n+        medicalHistory: formData.medicalHistory,\n+        painHistory: formData.painHistory,\n+        bodyImages: formData.bodyImages,\n+        signatureData: formData.signatureData,\n+        signedAt: currentPrescription?.signedAt || new Date(), // 기존에 서명 날짜가 있으면 유지, 없으면 현재 시각\n+        isActive: true,\n+        prescriptionDate: new Date(),\n+      };\n+\n+      if (currentPrescription) {\n+        // 기존 운동처방서 업데이트\n+        await dbManager.exercisePrescription.updateExercisePrescription(\n+          currentPrescription.id,\n+          {\n+            height: formData.height,\n+            weight: formData.weight,\n+            footSize: formData.footSize,\n+            medications: formData.medications,\n+            medicalHistory: formData.medicalHistory,\n+            painHistory: formData.painHistory,\n+            bodyImages: formData.bodyImages,\n+            signatureData: formData.signatureData,\n+            isActive: true,\n+            prescriptionDate: new Date(),\n+          }\n+        );\n+        console.log('운동처방서 업데이트 완료:', currentPrescription.id);\n+        \n+        // 업데이트된 처방서 정보 다시 로드\n+        const updatedPrescription = await dbManager.exercisePrescription.getExercisePrescriptionById(currentPrescription.id);\n+        setCurrentPrescription(updatedPrescription);\n+      } else {\n+        // 새 운동처방서 생성\n+        const prescriptionId = await dbManager.exercisePrescription.saveExercisePrescription(prescriptionData);\n+        console.log('새 운동처방서 생성 완료:', prescriptionId);\n+        \n+        // 생성된 처방서 정보 업데이트\n+        const savedPrescription = await dbManager.exercisePrescription.getExercisePrescriptionById(prescriptionId);\n+        setCurrentPrescription(savedPrescription);\n+      }\n+      \n+      alert('운동처방서가 저장되었습니다.');\n+    } catch (error) {\n+      console.error('운동처방서 저장 실패:', error);\n+      alert(error instanceof Error ? error.message : '운동처방서 저장에 실패했습니다.');\n+    }\n+  };\n+\n+  const generatePrescriptionHTML = () => {\n+    if (!selectedMember) return '';\n+\n+    // 신체 이미지 포인트들을 HTML로 변환\n+    const generatePointsHTML = (points: BodyImagePoint[], imageType: string) => {\n+      if (points.length === 0) return `<div class=\"image-box\"><strong>${imageType}</strong><br><small>등록된 포인트 없음</small></div>`;\n+      \n+      const pointsHtml = points.map(point => \n+        `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y}%; width: 8px; height: 8px; background: ${point.color || '#ff0000'}; border: 1px solid white; border-radius: 50%; transform: translate(-50%, -50%);\"></div>\n+         ${point.memo ? `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y + 5}%; font-size: 10px; background: rgba(0,0,0,0.7); color: white; padding: 2px 4px; border-radius: 2px; transform: translateX(-50%); white-space: nowrap;\">${point.memo}</div>` : ''}`\n+      ).join('');\n+      \n+      return `<div class=\"image-box\" style=\"position: relative;\"><strong>${imageType}</strong><br><small>${points.length}개 포인트 등록됨</small>${pointsHtml}</div>`;\n+    };\n+\n+    return `\n+      <!DOCTYPE html>\n+      <html>\n+      <head>\n+        <title>운동처방서 - ${selectedMember.name}</title>\n+        <style>\n+          @media print {\n+            body { margin: 0; padding: 20px; }\n+            .no-print { display: none !important; }\n+          }\n+          body { font-family: Arial, sans-serif; margin: 20px; }\n+          .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n+          .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n+          .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n+          .form-group { flex: 1; }\n+          .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n+          .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n+          .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n+          .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n+          .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n+          .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n+          .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n+          .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n+          .date-area { text-align: right; }\n+          textarea { resize: vertical; height: 100px; }\n+          .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n+        </style>\n+      </head>\n+      <body>\n+        <button class=\"print-button no-print\" onclick=\"window.print()\">인쇄하기</button>\n+        <div class=\"prescription-container\">\n+          <h1 class=\"title\">운동처방서</h1>\n+          \n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">성명</label>\n+              <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">생년월일</label>\n+              <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">키</label>\n+              <input class=\"form-input\" value=\"${formData.height}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">체중</label>\n+              <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">발사이즈</label>\n+              <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n+            </div>\n+          </div>\n+\n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">복용중인 약</label>\n+              <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n+            </div>\n+          </div>\n+\n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">병력사항</label>\n+              <div class=\"checkbox-group\">\n+                ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n+                  const labels: { [key: string]: string } = {\n+                    musculoskeletal: '근골격계질환',\n+                    cardiovascular: '심혈관계질환',\n+                    diabetes: '당뇨',\n+                    osteoporosis: '골다공증',\n+                    thyroid: '갑상선',\n+                    varicose: '정맥류',\n+                    arthritis: '관절염'\n+                  };\n+                  return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                }).join('')}\n+              </div>\n+            </div>\n+          </div>\n+\n+          <div class=\"image-section\">\n+            ${generatePointsHTML(formData.bodyImages.front, '정면')}\n+            ${generatePointsHTML(formData.bodyImages.spine, '척추')}\n+            ${generatePointsHTML(formData.bodyImages.back, '후면')}\n+          </div>\n+\n+          <div class=\"form-row\">\n+            <div class=\"form-group\">\n+              <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n+              <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n+            </div>\n+          </div>\n+\n+          <div class=\"consent-section\">\n+            <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n+            본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n+            <div class=\"signature-area\">\n+              <div style=\"text-align: center;\">\n+                <div style=\"margin-bottom: 10px; font-size: 14px; color: #666;\">고객 서명</div>\n+                ${formData.signatureData ? `<img src=\"${formData.signatureData}\" style=\"max-width: 250px; max-height: 120px; border: 1px solid #ddd; border-radius: 6px;\">` : '<div style=\"width: 250px; height: 120px; border: 1px solid #ddd; border-radius: 6px; background: white; display: flex; align-items: center; justify-content: center; color: #999;\">서명 없음</div>'}\n+              </div>\n+            </div>\n+            \n+            <div style=\"display: flex; justify-content: space-between; margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n+              <div style=\"text-align: center;\">\n+                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n+                <div style=\"font-size: 14px; color: #000;\">\n+                  ${currentPrescription?.signedAt \n+                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                    : hasSignature() \n+                      ? new Date().toLocaleDateString('ko-KR') \n+                      : '서명 후 표시됩니다'\n+                  }\n+                </div>\n+              </div>\n+              <div style=\"text-align: center;\">\n+                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n+                <div style=\"font-size: 14px; color: #000;\">\n+                  ${currentPrescription?.updatedAt \n+                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                    : new Date().toLocaleDateString('ko-KR')\n+                  }\n+                </div>\n+              </div>\n+            </div>\n+          </div>\n+        </div>\n+      </body>\n+      </html>\n+    `;\n+  };\n+\n+  const handleShare = () => {\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n+    }\n+\n+    // 운동처방서만 표시하는 새 창 생성\n+    const printWindow = window.open('', '_blank', 'width=800,height=600');\n+    if (printWindow) {\n+      printWindow.document.write(generatePrescriptionHTML());\n+      printWindow.document.close();\n+      \n+      // 네이티브 공유 API 사용 또는 링크 복사\n+      if (navigator.share) {\n+        navigator.share({\n+          title: '운동처방서',\n+          text: `${selectedMember.name}님의 운동처방서`,\n+          url: printWindow.location.href,\n+        });\n+      } else {\n+        alert('새 창에서 운동처방서를 확인하고 URL을 복사하여 공유하세요.');\n+      }\n+    }\n+  };\n+\n+  const handlePrint = () => {\n+    if (!selectedMember) {\n+      alert('회원을 선택해주세요.');\n+      return;\n+    }\n+\n+    // 운동처방서만 출력하기 위한 새 창 생성\n+    const printWindow = window.open('', '_blank', 'width=800,height=600');\n+    if (printWindow) {\n+      printWindow.document.write(generatePrescriptionHTML());\n+      printWindow.document.close();\n+      \n+      // 자동으로 인쇄 대화상자 열기\n+      setTimeout(() => {\n+        printWindow.print();\n+      }, 1000);\n+    }\n+  };\n+\n+  return (\n+    <PageContainer>\n+      <SearchPanel>\n+        <SearchTitle>회원 검색</SearchTitle>\n+        <SearchInput\n+          type=\"text\"\n+          placeholder=\"이름 또는 전화번호로 검색\"\n+          value={searchTerm}\n+          onChange={(e) => setSearchTerm(e.target.value)}\n+        />\n+        <MemberList>\n+          {filteredMembers.map(member => (\n+            <MemberItem\n+              key={member.id}\n+              selected={selectedMember?.id === member.id}\n+              onClick={() => handleMemberSelect(member)}\n+            >\n+              <MemberName>{member.name}</MemberName>\n+              <MemberInfo>{member.birth}</MemberInfo>\n+              <MemberInfo>{member.phone}</MemberInfo>\n+            </MemberItem>\n+          ))}\n+        </MemberList>\n+      </SearchPanel>\n+\n+      <ButtonPanel>\n+        <ActionButton \n+          onClick={handleSave} \n+          title=\"저장\"\n+          disabled={!hasSignature()}\n+        >\n+          <ButtonIcon>💾</ButtonIcon>\n+          <ButtonText>저장</ButtonText>\n+        </ActionButton>\n+        \n+        <ActionButton onClick={handleShare} title=\"공유\">\n+          <ButtonIcon>📤</ButtonIcon>\n+          <ButtonText>공유</ButtonText>\n+        </ActionButton>\n+        \n+        <ActionButton onClick={handlePrint} title=\"출력\">\n+          <ButtonIcon>🖨️</ButtonIcon>\n+          <ButtonText>출력</ButtonText>\n+        </ActionButton>\n+      </ButtonPanel>\n+\n+      <PrescriptionPanel>\n+        <PrescriptionContainer>\n+          <PrescriptionTitle>운동처방서</PrescriptionTitle>\n+          \n+          {/* 기본 정보 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>성명</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                value={selectedMember?.name || ''}\n+                readOnly\n+                style={{ background: '#f5f5f5' }}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>생년월일</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                value={selectedMember?.birth || ''}\n+                readOnly\n+                style={{ background: '#f5f5f5' }}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>키</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"키(cm)\"\n+                value={formData.height}\n+                onChange={(e) => handleInputChange('height', e.target.value)}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>체중</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"체중(kg)\"\n+                value={formData.weight}\n+                onChange={(e) => handleInputChange('weight', e.target.value)}\n+              />\n+            </FormGroup>\n+            <FormGroup>\n+              <FormLabel>발사이즈</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"발사이즈\"\n+                value={formData.footSize}\n+                onChange={(e) => handleInputChange('footSize', e.target.value)}\n+              />\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 복용중인 약 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>복용중인 약</FormLabel>\n+              <FormInput\n+                type=\"text\"\n+                placeholder=\"복용중인 약물을 입력하세요\"\n+                value={formData.medications}\n+                onChange={(e) => handleInputChange('medications', e.target.value)}\n+              />\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 병력사항 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>병력사항</FormLabel>\n+              <CheckboxGroup>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.musculoskeletal}\n+                    onChange={(e) => handleCheckboxChange('musculoskeletal', e.target.checked)}\n+                  />\n+                  근골격계질환\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.cardiovascular}\n+                    onChange={(e) => handleCheckboxChange('cardiovascular', e.target.checked)}\n+                  />\n+                  심혈관계질환\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.diabetes}\n+                    onChange={(e) => handleCheckboxChange('diabetes', e.target.checked)}\n+                  />\n+                  당뇨\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.osteoporosis}\n+                    onChange={(e) => handleCheckboxChange('osteoporosis', e.target.checked)}\n+                  />\n+                  골다공증\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.thyroid}\n+                    onChange={(e) => handleCheckboxChange('thyroid', e.target.checked)}\n+                  />\n+                  갑상선\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.varicose}\n+                    onChange={(e) => handleCheckboxChange('varicose', e.target.checked)}\n+                  />\n+                  정맥류\n+                </CheckboxItem>\n+                <CheckboxItem>\n+                  <Checkbox\n+                    type=\"checkbox\"\n+                    checked={formData.medicalHistory.arthritis}\n+                    onChange={(e) => handleCheckboxChange('arthritis', e.target.checked)}\n+                  />\n+                  관절염\n+                </CheckboxItem>\n+              </CheckboxGroup>\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 이미지 영역 */}\n+          <ImageSection>\n+            <BodyImageCanvas\n+              imageType=\"front\"\n+              imageUrl=\"\"\n+              points={formData.bodyImages.front}\n+              onAddPoint={(point) => handleAddBodyImagePoint('front', point)}\n+              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('front', pointId, updates)}\n+              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('front', pointId)}\n+            />\n+            <BodyImageCanvas\n+              imageType=\"spine\"\n+              imageUrl=\"\"\n+              points={formData.bodyImages.spine}\n+              onAddPoint={(point) => handleAddBodyImagePoint('spine', point)}\n+              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('spine', pointId, updates)}\n+              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('spine', pointId)}\n+            />\n+            <BodyImageCanvas\n+              imageType=\"back\"\n+              imageUrl=\"\"\n+              points={formData.bodyImages.back}\n+              onAddPoint={(point) => handleAddBodyImagePoint('back', point)}\n+              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('back', pointId, updates)}\n+              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('back', pointId)}\n+            />\n+          </ImageSection>\n+\n+          {/* 통증 히스토리 및 운동목적 */}\n+          <FormRow>\n+            <FormGroup>\n+              <FormLabel>시술, 수술 등 통증 히스토리 및 코멘트/운동목적</FormLabel>\n+              <FormTextarea\n+                rows={6}\n+                placeholder=\"통증 히스토리, 수술 이력, 운동 목적 등을 상세히 기입해주세요\"\n+                value={formData.painHistory}\n+                onChange={(e) => handleInputChange('painHistory', e.target.value)}\n+              />\n+            </FormGroup>\n+          </FormRow>\n+\n+          {/* 동의서 */}\n+          <ConsentSection>\n+            <ConsentText>\n+              라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n+              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.\n+            </ConsentText>\n+            <SignatureArea>\n+              <SignatureSection>\n+                <SignatureLabel>고객 서명</SignatureLabel>\n+                <SignatureCanvas\n+                  width={250}\n+                  height={120}\n+                  onSignatureChange={handleSignatureChange}\n+                  initialSignature={formData.signatureData}\n+                />\n+              </SignatureSection>\n+            </SignatureArea>\n+            \n+            {/* 날짜 정보 표시 */}\n+            <DateRow>\n+              <DateItem>\n+                <DateLabel>서명 날짜</DateLabel>\n+                <DateValue>\n+                  {currentPrescription?.signedAt \n+                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                    : hasSignature() \n+                      ? new Date().toLocaleDateString('ko-KR') \n+                      : '서명 후 표시됩니다'\n+                  }\n+                </DateValue>\n+              </DateItem>\n+              <DateItem>\n+                <DateLabel>최근 업데이트</DateLabel>\n+                <DateValue>\n+                  {currentPrescription?.updatedAt \n+                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                    : '저장 후 표시됩니다'\n+                  }\n+                </DateValue>\n+              </DateItem>\n+            </DateRow>\n+          </ConsentSection>\n+        </PrescriptionContainer>\n+      </PrescriptionPanel>\n+    </PageContainer>\n+  );\n+};\n+\n+export default ExercisePrescriptionPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761464324870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -480,8 +480,13 @@\n   const hasSignature = () => {\n     return formData.signatureData && formData.signatureData.trim() !== '';\n   };\n \n+  // 기존 서명이 있는지 확인하는 함수 (DB에 저장된 서명)\n+  const hasExistingSignature = (): boolean => {\n+    return !!(currentPrescription?.signedAt && currentPrescription?.signatureData && currentPrescription.signatureData.trim() !== '');\n+  };\n+\n   // 신체 이미지 포인트 관리 함수들\n   const handleAddBodyImagePoint = (imageType: 'front' | 'spine' | 'back', point: Omit<BodyImagePoint, 'id'>) => {\n     const newPoint: BodyImagePoint = {\n       ...point,\n@@ -809,9 +814,9 @@\n       <ButtonPanel>\n         <ActionButton \n           onClick={handleSave} \n           title=\"저장\"\n-          disabled={!hasSignature()}\n+          disabled={!hasSignature() && !hasExistingSignature()} // 현재 서명이 있거나 기존 서명이 있어야 저장 가능\n         >\n           <ButtonIcon>💾</ButtonIcon>\n           <ButtonText>저장</ButtonText>\n         </ActionButton>\n@@ -1012,8 +1017,9 @@\n                   width={250}\n                   height={120}\n                   onSignatureChange={handleSignatureChange}\n                   initialSignature={formData.signatureData}\n+                  readonly={hasExistingSignature()} // 기존 서명이 있으면 읽기 전용\n                 />\n               </SignatureSection>\n             </SignatureArea>\n             \n@@ -1046,1051 +1052,5 @@\n     </PageContainer>\n   );\n };\n \n-export default ExercisePrescriptionPage;\n-import React, { useEffect, useState } from 'react';\n-import { useSearchParams } from 'react-router-dom';\n-import styled from 'styled-components';\n-import { AppColors } from '../styles/colors';\n-import { AppTextStyles } from '../styles/textStyles';\n-import { dbManager } from '../utils/indexedDB';\n-import { Member, ExercisePrescription, ExercisePrescriptionMedicalHistory, BodyImagePoint } from '../utils/db/types';\n-import BodyImageCanvas from '../components/BodyImageCanvas';\n-import SignatureCanvas from '../components/SignatureCanvas';\n-\n-const PageContainer = styled.div`\n-  min-height: 100vh;\n-  display: flex;\n-  background: ${AppColors.background};\n-  \n-  @media print {\n-    display: block;\n-    background: white;\n-  }\n-`;\n-\n-const SearchPanel = styled.div`\n-  width: 300px;\n-  background: ${AppColors.surface};\n-  border-right: 1px solid ${AppColors.borderLight};\n-  padding: 20px;\n-  overflow-y: auto;\n-  \n-  @media print {\n-    display: none;\n-  }\n-`;\n-\n-const ButtonPanel = styled.div`\n-  width: 80px;\n-  background: ${AppColors.surface};\n-  border-right: 1px solid ${AppColors.borderLight};\n-  padding: 20px 10px;\n-  display: flex;\n-  flex-direction: column;\n-  gap: 15px;\n-  align-items: center;\n-  \n-  @media print {\n-    display: none;\n-  }\n-`;\n-\n-const ActionButton = styled.button<{ disabled?: boolean }>`\n-  width: 60px;\n-  height: 60px;\n-  border: none;\n-  border-radius: 12px;\n-  background: ${props => props.disabled ? AppColors.buttonDisabled : AppColors.primary};\n-  color: ${props => props.disabled ? AppColors.disabled : AppColors.onPrimary};\n-  font-size: ${AppTextStyles.label2.fontSize};\n-  font-weight: 600;\n-  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  justify-content: center;\n-  gap: 4px;\n-  transition: all 0.2s ease;\n-  \n-  &:hover {\n-    background: ${props => props.disabled ? AppColors.buttonDisabled : AppColors.primary + 'dd'};\n-    transform: ${props => props.disabled ? 'none' : 'translateY(-2px)'};\n-  }\n-  \n-  &:active {\n-    transform: ${props => props.disabled ? 'none' : 'translateY(0)'};\n-  }\n-`;\n-\n-const ButtonIcon = styled.div`\n-  font-size: 20px;\n-  line-height: 1;\n-`;\n-\n-const ButtonText = styled.div`\n-  font-size: 10px;\n-  line-height: 1;\n-`;\n-\n-const SearchTitle = styled.h2`\n-  font-size: ${AppTextStyles.title2.fontSize};\n-  font-weight: 600;\n-  color: ${AppColors.onBackground};\n-  margin-bottom: 20px;\n-`;\n-\n-const SearchInput = styled.input`\n-  width: 100%;\n-  padding: 12px;\n-  border: 1px solid ${AppColors.borderLight};\n-  border-radius: 8px;\n-  font-size: ${AppTextStyles.body2.fontSize};\n-  margin-bottom: 16px;\n-  &:focus {\n-    outline: none;\n-    border-color: ${AppColors.primary};\n-  }\n-`;\n-\n-const MemberList = styled.div`\n-  max-height: 400px;\n-  overflow-y: auto;\n-`;\n-\n-const MemberItem = styled.div<{ selected?: boolean }>`\n-  padding: 12px;\n-  border: 1px solid ${props => props.selected ? AppColors.primary : AppColors.borderLight};\n-  border-radius: 8px;\n-  margin-bottom: 8px;\n-  cursor: pointer;\n-  background: ${props => props.selected ? AppColors.primary + '10' : AppColors.surface};\n-  \n-  &:hover {\n-    background: ${AppColors.primary}20;\n-  }\n-`;\n-\n-const MemberName = styled.div`\n-  font-weight: 600;\n-  color: ${AppColors.onBackground};\n-  margin-bottom: 4px;\n-`;\n-\n-const MemberInfo = styled.div`\n-  font-size: ${AppTextStyles.body3.fontSize};\n-  color: ${AppColors.onInput1};\n-`;\n-\n-const PrescriptionPanel = styled.div`\n-  flex: 1;\n-  padding: 20px;\n-  overflow-y: auto;\n-  \n-  @media print {\n-    padding: 0;\n-    overflow: visible;\n-  }\n-`;\n-\n-const PrescriptionContainer = styled.div`\n-  max-width: 800px;\n-  margin: 0 auto;\n-  background: white;\n-  padding: 40px;\n-  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n-  min-height: calc(100vh - 40px);\n-  \n-  @media print {\n-    box-shadow: none;\n-    padding: 20px;\n-    margin: 0;\n-    max-width: none;\n-    min-height: auto;\n-  }\n-`;\n-\n-const PrescriptionTitle = styled.h1`\n-  text-align: center;\n-  font-size: 24px;\n-  font-weight: bold;\n-  margin-bottom: 30px;\n-  color: ${AppColors.onBackground};\n-`;\n-\n-const FormRow = styled.div`\n-  display: flex;\n-  gap: 15px;\n-  margin-bottom: 20px;\n-  align-items: flex-start;\n-`;\n-\n-const FormGroup = styled.div`\n-  flex: 1;\n-`;\n-\n-const FormLabel = styled.label`\n-  display: block;\n-  font-size: ${AppTextStyles.label1.fontSize};\n-  font-weight: 600;\n-  color: ${AppColors.onBackground};\n-  margin-bottom: 8px;\n-`;\n-\n-const FormInput = styled.input`\n-  width: 100%;\n-  padding: 10px;\n-  border: 1px solid ${AppColors.borderLight};\n-  border-radius: 6px;\n-  font-size: ${AppTextStyles.body2.fontSize};\n-  box-sizing: border-box;\n-  \n-  &:focus {\n-    outline: none;\n-    border-color: ${AppColors.primary};\n-  }\n-`;\n-\n-const FormTextarea = styled.textarea`\n-  width: 100%;\n-  padding: 10px;\n-  border: 1px solid ${AppColors.borderLight};\n-  border-radius: 6px;\n-  font-size: ${AppTextStyles.body2.fontSize};\n-  resize: vertical;\n-  box-sizing: border-box;\n-  \n-  &:focus {\n-    outline: none;\n-    border-color: ${AppColors.primary};\n-  }\n-`;\n-\n-const CheckboxGroup = styled.div`\n-  display: flex;\n-  flex-wrap: wrap;\n-  gap: 15px;\n-`;\n-\n-const CheckboxItem = styled.label`\n-  display: flex;\n-  align-items: center;\n-  gap: 8px;\n-  cursor: pointer;\n-  font-size: ${AppTextStyles.body2.fontSize};\n-`;\n-\n-const Checkbox = styled.input`\n-  margin: 0;\n-`;\n-\n-const ImageSection = styled.div`\n-  display: flex;\n-  gap: 10px;\n-  margin-bottom: 20px;\n-`;\n-\n-const ConsentSection = styled.div`\n-  margin-top: 40px;\n-  padding: 20px;\n-  border: 1px solid ${AppColors.borderLight};\n-  border-radius: 8px;\n-  background: #f9f9f9;\n-`;\n-\n-const ConsentText = styled.p`\n-  font-size: ${AppTextStyles.body2.fontSize};\n-  line-height: 1.6;\n-  color: ${AppColors.onBackground};\n-  margin-bottom: 20px;\n-`;\n-\n-const SignatureArea = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: flex-end;\n-`;\n-\n-const SignatureSection = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  gap: 10px;\n-`;\n-\n-const SignatureLabel = styled.div`\n-  font-size: ${AppTextStyles.body3.fontSize};\n-  color: ${AppColors.onInput1};\n-`;\n-\n-const DateRow = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-  margin-top: 20px;\n-  padding: 15px;\n-  background: #f8f9fa;\n-  border-radius: 8px;\n-  border: 1px solid ${AppColors.borderLight};\n-`;\n-\n-const DateItem = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  gap: 5px;\n-`;\n-\n-const DateLabel = styled.div`\n-  font-size: ${AppTextStyles.body3.fontSize};\n-  color: ${AppColors.onInput1};\n-  font-weight: 600;\n-`;\n-\n-const DateValue = styled.div`\n-  font-size: ${AppTextStyles.body2.fontSize};\n-  color: ${AppColors.onBackground};\n-`;\n-\n-const ExercisePrescriptionPage: React.FC = () => {\n-  const [searchParams] = useSearchParams();\n-  const [searchTerm, setSearchTerm] = useState('');\n-  const [selectedMember, setSelectedMember] = useState<Member | null>(null);\n-  const [members, setMembers] = useState<Member[]>([]);\n-  const [currentPrescription, setCurrentPrescription] = useState<ExercisePrescription | null>(null);\n-  const [formData, setFormData] = useState({\n-    height: '',\n-    weight: '',\n-    footSize: '',\n-    medications: '',\n-    medicalHistory: {\n-      musculoskeletal: false,\n-      cardiovascular: false,\n-      diabetes: false,\n-      osteoporosis: false,\n-      thyroid: false,\n-      varicose: false,\n-      arthritis: false,\n-    } as ExercisePrescriptionMedicalHistory,\n-    painHistory: '',\n-    bodyImages: {\n-      front: [] as BodyImagePoint[],\n-      spine: [] as BodyImagePoint[],\n-      back: [] as BodyImagePoint[],\n-    },\n-    signatureData: '', // 서명 데이터\n-  });\n-\n-  // 컴포넌트 마운트 시 회원 데이터 로드\n-  useEffect(() => {\n-    const loadMembers = async () => {\n-      try {\n-        const allMembers = await dbManager.getAllMembers();\n-        // 활성 회원만 필터링\n-        const activeMembers = allMembers.filter(member => member.isActive);\n-        setMembers(activeMembers);\n-      } catch (error) {\n-        console.error('회원 데이터 로드 실패:', error);\n-      }\n-    };\n-\n-    loadMembers();\n-  }, []);\n-\n-  // 선택된 회원이 변경될 때 운동처방서 로드\n-  useEffect(() => {\n-    const loadPrescription = async () => {\n-      if (!selectedMember) {\n-        // 회원이 선택되지 않았으면 초기화\n-        setCurrentPrescription(null);\n-        setFormData({\n-          height: '',\n-          weight: '',\n-          footSize: '',\n-          medications: '',\n-          medicalHistory: {\n-            musculoskeletal: false,\n-            cardiovascular: false,\n-            diabetes: false,\n-            osteoporosis: false,\n-            thyroid: false,\n-            varicose: false,\n-            arthritis: false,\n-          },\n-          painHistory: '',\n-          bodyImages: {\n-            front: [],\n-            spine: [],\n-            back: [],\n-          },\n-          signatureData: '',\n-        });\n-        return;\n-      }\n-\n-      try {\n-        // 해당 회원의 운동처방서 조회\n-        const prescription = await dbManager.exercisePrescription.getExercisePrescriptionByMember(selectedMember.id);\n-        \n-        if (prescription) {\n-          // 기존 운동처방서가 있으면 로드\n-          setCurrentPrescription(prescription);\n-          setFormData({\n-            height: prescription.height,\n-            weight: prescription.weight,\n-            footSize: prescription.footSize,\n-            medications: prescription.medications,\n-            medicalHistory: prescription.medicalHistory,\n-            painHistory: prescription.painHistory,\n-            bodyImages: prescription.bodyImages,\n-            signatureData: prescription.signatureData || '',\n-          });\n-          console.log('기존 운동처방서 로드:', prescription);\n-        } else {\n-          // 기존 운동처방서가 없으면 빈 템플릿 사용\n-          setCurrentPrescription(null);\n-          setFormData({\n-            height: '',\n-            weight: '',\n-            footSize: '',\n-            medications: '',\n-            medicalHistory: {\n-              musculoskeletal: false,\n-              cardiovascular: false,\n-              diabetes: false,\n-              osteoporosis: false,\n-              thyroid: false,\n-              varicose: false,\n-              arthritis: false,\n-            },\n-            painHistory: '',\n-            bodyImages: {\n-              front: [],\n-              spine: [],\n-              back: [],\n-            },\n-            signatureData: '',\n-          });\n-          console.log('새 운동처방서 템플릿 생성');\n-        }\n-      } catch (error) {\n-        console.error('운동처방서 로드 실패:', error);\n-        alert('운동처방서 로드에 실패했습니다.');\n-      }\n-    };\n-\n-    loadPrescription();\n-  }, [selectedMember]);\n-\n-  const filteredMembers = members.filter(member =>\n-    member.name.includes(searchTerm) || member.phone.includes(searchTerm)\n-  );\n-\n-  useEffect(() => {\n-    // URL 파라미터에서 userid 또는 memberId 확인\n-    const userIdParam = searchParams.get('userid') || searchParams.get('memberId');\n-    if (userIdParam && members.length > 0) {\n-      const member = members.find(m => m.id === userIdParam);\n-      if (member) {\n-        setSelectedMember(member);\n-      }\n-    }\n-  }, [searchParams, members]);\n-\n-  const handleMemberSelect = (member: Member) => {\n-    setSelectedMember(member);\n-  };\n-\n-  const handleInputChange = (field: string, value: string) => {\n-    setFormData(prev => ({\n-      ...prev,\n-      [field]: value,\n-    }));\n-  };\n-\n-  const handleCheckboxChange = (field: string, checked: boolean) => {\n-    setFormData(prev => ({\n-      ...prev,\n-      medicalHistory: {\n-        ...prev.medicalHistory,\n-        [field]: checked,\n-      },\n-    }));\n-  };\n-\n-  // 서명 변경 핸들러\n-  const handleSignatureChange = (dataUrl: string) => {\n-    setFormData(prev => ({\n-      ...prev,\n-      signatureData: dataUrl,\n-    }));\n-  };\n-\n-  // 서명이 있는지 확인하는 함수\n-  const hasSignature = () => {\n-    return formData.signatureData && formData.signatureData.trim() !== '';\n-  };\n-\n-  // 신체 이미지 포인트 관리 함수들\n-  const handleAddBodyImagePoint = (imageType: 'front' | 'spine' | 'back', point: Omit<BodyImagePoint, 'id'>) => {\n-    const newPoint: BodyImagePoint = {\n-      ...point,\n-      id: `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`, // 임시 ID 생성\n-    };\n-\n-    setFormData(prev => ({\n-      ...prev,\n-      bodyImages: {\n-        ...prev.bodyImages,\n-        [imageType]: [...prev.bodyImages[imageType], newPoint],\n-      },\n-    }));\n-  };\n-\n-  const handleUpdateBodyImagePoint = (imageType: 'front' | 'spine' | 'back', pointId: string, updates: Partial<Omit<BodyImagePoint, 'id'>>) => {\n-    setFormData(prev => ({\n-      ...prev,\n-      bodyImages: {\n-        ...prev.bodyImages,\n-        [imageType]: prev.bodyImages[imageType].map(point =>\n-          point.id === pointId ? { ...point, ...updates } : point\n-        ),\n-      },\n-    }));\n-  };\n-\n-  const handleDeleteBodyImagePoint = (imageType: 'front' | 'spine' | 'back', pointId: string) => {\n-    setFormData(prev => ({\n-      ...prev,\n-      bodyImages: {\n-        ...prev.bodyImages,\n-        [imageType]: prev.bodyImages[imageType].filter(point => point.id !== pointId),\n-      },\n-    }));\n-  };\n-\n-  const handleSave = async () => {\n-    if (!selectedMember) {\n-      alert('회원을 선택해주세요.');\n-      return;\n-    }\n-\n-    // 서명 검증\n-    if (!hasSignature()) {\n-      alert('서명이 필요합니다. 서명을 완료해주세요.');\n-      return;\n-    }\n-    \n-    try {\n-      const prescriptionData = {\n-        memberId: selectedMember.id,\n-        memberName: selectedMember.name,\n-        height: formData.height,\n-        weight: formData.weight,\n-        footSize: formData.footSize,\n-        medications: formData.medications,\n-        medicalHistory: formData.medicalHistory,\n-        painHistory: formData.painHistory,\n-        bodyImages: formData.bodyImages,\n-        signatureData: formData.signatureData,\n-        signedAt: currentPrescription?.signedAt || new Date(), // 기존에 서명 날짜가 있으면 유지, 없으면 현재 시각\n-        isActive: true,\n-        prescriptionDate: new Date(),\n-      };\n-\n-      if (currentPrescription) {\n-        // 기존 운동처방서 업데이트\n-        await dbManager.exercisePrescription.updateExercisePrescription(\n-          currentPrescription.id,\n-          {\n-            height: formData.height,\n-            weight: formData.weight,\n-            footSize: formData.footSize,\n-            medications: formData.medications,\n-            medicalHistory: formData.medicalHistory,\n-            painHistory: formData.painHistory,\n-            bodyImages: formData.bodyImages,\n-            signatureData: formData.signatureData,\n-            isActive: true,\n-            prescriptionDate: new Date(),\n-          }\n-        );\n-        console.log('운동처방서 업데이트 완료:', currentPrescription.id);\n-      } else {\n-        // 새 운동처방서 생성\n-        const prescriptionId = await dbManager.exercisePrescription.saveExercisePrescription(prescriptionData);\n-        console.log('새 운동처방서 생성 완료:', prescriptionId);\n-        \n-        // 생성된 처방서 정보 업데이트\n-        const savedPrescription = await dbManager.exercisePrescription.getExercisePrescriptionById(prescriptionId);\n-        setCurrentPrescription(savedPrescription);\n-      }\n-      \n-      alert('운동처방서가 저장되었습니다.');\n-    } catch (error) {\n-      console.error('운동처방서 저장 실패:', error);\n-      alert(error instanceof Error ? error.message : '운동처방서 저장에 실패했습니다.');\n-    }\n-  };\n-\n-  const generatePrescriptionHTML = () => {\n-    if (!selectedMember) return '';\n-\n-    // 신체 이미지 포인트들을 HTML로 변환\n-    const generatePointsHTML = (points: BodyImagePoint[], imageType: string) => {\n-      if (points.length === 0) return `<div class=\"image-box\"><strong>${imageType}</strong><br><small>등록된 포인트 없음</small></div>`;\n-      \n-      const pointsHtml = points.map(point => \n-        `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y}%; width: 8px; height: 8px; background: ${point.color || '#ff0000'}; border: 1px solid white; border-radius: 50%; transform: translate(-50%, -50%);\"></div>\n-         ${point.memo ? `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y + 5}%; font-size: 10px; background: rgba(0,0,0,0.7); color: white; padding: 2px 4px; border-radius: 2px; transform: translateX(-50%); white-space: nowrap;\">${point.memo}</div>` : ''}`\n-      ).join('');\n-      \n-      return `<div class=\"image-box\" style=\"position: relative;\"><strong>${imageType}</strong><br><small>${points.length}개 포인트 등록됨</small>${pointsHtml}</div>`;\n-    };\n-\n-    return `\n-      <!DOCTYPE html>\n-      <html>\n-      <head>\n-        <title>운동처방서 - ${selectedMember.name}</title>\n-        <style>\n-          @media print {\n-            body { margin: 0; padding: 20px; }\n-            .no-print { display: none !important; }\n-          }\n-          body { font-family: Arial, sans-serif; margin: 20px; }\n-          .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n-          .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n-          .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n-          .form-group { flex: 1; }\n-          .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n-          .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n-          .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n-          .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n-          .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n-          .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n-          .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n-          .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n-          .date-area { text-align: right; }\n-          textarea { resize: vertical; height: 100px; }\n-          .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n-        </style>\n-      </head>\n-      <body>\n-        <button class=\"print-button no-print\" onclick=\"window.print()\">인쇄하기</button>\n-        <div class=\"prescription-container\">\n-          <h1 class=\"title\">운동처방서</h1>\n-          \n-          <div class=\"form-row\">\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">성명</label>\n-              <input class=\"form-input\" value=\"${selectedMember.name}\" readonly>\n-            </div>\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">생년월일</label>\n-              <input class=\"form-input\" value=\"${selectedMember.birth}\" readonly>\n-            </div>\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">키</label>\n-              <input class=\"form-input\" value=\"${formData.height}\" readonly>\n-            </div>\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">체중</label>\n-              <input class=\"form-input\" value=\"${formData.weight}\" readonly>\n-            </div>\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">발사이즈</label>\n-              <input class=\"form-input\" value=\"${formData.footSize}\" readonly>\n-            </div>\n-          </div>\n-\n-          <div class=\"form-row\">\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">복용중인 약</label>\n-              <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n-            </div>\n-          </div>\n-\n-          <div class=\"form-row\">\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">병력사항</label>\n-              <div class=\"checkbox-group\">\n-                ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n-                  const labels: { [key: string]: string } = {\n-                    musculoskeletal: '근골격계질환',\n-                    cardiovascular: '심혈관계질환',\n-                    diabetes: '당뇨',\n-                    osteoporosis: '골다공증',\n-                    thyroid: '갑상선',\n-                    varicose: '정맥류',\n-                    arthritis: '관절염'\n-                  };\n-                  return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n-                }).join('')}\n-              </div>\n-            </div>\n-          </div>\n-\n-          <div class=\"image-section\">\n-            ${generatePointsHTML(formData.bodyImages.front, '정면')}\n-            ${generatePointsHTML(formData.bodyImages.spine, '척추')}\n-            ${generatePointsHTML(formData.bodyImages.back, '후면')}\n-          </div>\n-\n-          <div class=\"form-row\">\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">시술, 수술 등 통증 히스토리 및 코멘트/운동목적</label>\n-              <textarea class=\"form-input\" readonly>${formData.painHistory}</textarea>\n-            </div>\n-          </div>\n-\n-          <div class=\"consent-section\">\n-            <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n-            본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n-            <div class=\"signature-area\">\n-              <div style=\"text-align: center;\">\n-                <div style=\"margin-bottom: 10px; font-size: 14px; color: #666;\">고객 서명</div>\n-                ${formData.signatureData ? `<img src=\"${formData.signatureData}\" style=\"max-width: 250px; max-height: 120px; border: 1px solid #ddd; border-radius: 6px;\">` : '<div style=\"width: 250px; height: 120px; border: 1px solid #ddd; border-radius: 6px; background: white; display: flex; align-items: center; justify-content: center; color: #999;\">서명 없음</div>'}\n-              </div>\n-            </div>\n-            \n-            <div style=\"display: flex; justify-content: space-between; margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n-              <div style=\"text-align: center;\">\n-                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n-                <div style=\"font-size: 14px; color: #000;\">\n-                  ${currentPrescription?.signedAt \n-                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n-                    : hasSignature() \n-                      ? new Date().toLocaleDateString('ko-KR') \n-                      : '서명 후 표시됩니다'\n-                  }\n-                </div>\n-              </div>\n-              <div style=\"text-align: center;\">\n-                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n-                <div style=\"font-size: 14px; color: #000;\">\n-                  ${currentPrescription?.updatedAt \n-                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n-                    : new Date().toLocaleDateString('ko-KR')\n-                  }\n-                </div>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-      </body>\n-      </html>\n-    `;\n-  };\n-\n-  const handleShare = () => {\n-    if (!selectedMember) {\n-      alert('회원을 선택해주세요.');\n-      return;\n-    }\n-\n-    // 운동처방서만 표시하는 새 창 생성\n-    const printWindow = window.open('', '_blank', 'width=800,height=600');\n-    if (printWindow) {\n-      printWindow.document.write(generatePrescriptionHTML());\n-      printWindow.document.close();\n-      \n-      // 네이티브 공유 API 사용 또는 링크 복사\n-      if (navigator.share) {\n-        navigator.share({\n-          title: '운동처방서',\n-          text: `${selectedMember.name}님의 운동처방서`,\n-          url: printWindow.location.href,\n-        });\n-      } else {\n-        alert('새 창에서 운동처방서를 확인하고 URL을 복사하여 공유하세요.');\n-      }\n-    }\n-  };\n-\n-  const handlePrint = () => {\n-    if (!selectedMember) {\n-      alert('회원을 선택해주세요.');\n-      return;\n-    }\n-\n-    // 운동처방서만 출력하기 위한 새 창 생성\n-    const printWindow = window.open('', '_blank', 'width=800,height=600');\n-    if (printWindow) {\n-      printWindow.document.write(generatePrescriptionHTML());\n-      printWindow.document.close();\n-      \n-      // 자동으로 인쇄 대화상자 열기\n-      setTimeout(() => {\n-        printWindow.print();\n-      }, 1000);\n-    }\n-  };\n-\n-  return (\n-    <PageContainer>\n-      <SearchPanel>\n-        <SearchTitle>회원 검색</SearchTitle>\n-        <SearchInput\n-          type=\"text\"\n-          placeholder=\"이름 또는 전화번호로 검색\"\n-          value={searchTerm}\n-          onChange={(e) => setSearchTerm(e.target.value)}\n-        />\n-        <MemberList>\n-          {filteredMembers.map(member => (\n-            <MemberItem\n-              key={member.id}\n-              selected={selectedMember?.id === member.id}\n-              onClick={() => handleMemberSelect(member)}\n-            >\n-              <MemberName>{member.name}</MemberName>\n-              <MemberInfo>{member.birth}</MemberInfo>\n-              <MemberInfo>{member.phone}</MemberInfo>\n-            </MemberItem>\n-          ))}\n-        </MemberList>\n-      </SearchPanel>\n-\n-      <ButtonPanel>\n-        <ActionButton \n-          onClick={handleSave} \n-          title=\"저장\"\n-          disabled={!hasSignature()}\n-        >\n-          <ButtonIcon>💾</ButtonIcon>\n-          <ButtonText>저장</ButtonText>\n-        </ActionButton>\n-        \n-        <ActionButton onClick={handleShare} title=\"공유\">\n-          <ButtonIcon>📤</ButtonIcon>\n-          <ButtonText>공유</ButtonText>\n-        </ActionButton>\n-        \n-        <ActionButton onClick={handlePrint} title=\"출력\">\n-          <ButtonIcon>🖨️</ButtonIcon>\n-          <ButtonText>출력</ButtonText>\n-        </ActionButton>\n-      </ButtonPanel>\n-\n-      <PrescriptionPanel>\n-        <PrescriptionContainer>\n-          <PrescriptionTitle>운동처방서</PrescriptionTitle>\n-          \n-          {/* 기본 정보 */}\n-          <FormRow>\n-            <FormGroup>\n-              <FormLabel>성명</FormLabel>\n-              <FormInput\n-                type=\"text\"\n-                value={selectedMember?.name || ''}\n-                readOnly\n-                style={{ background: '#f5f5f5' }}\n-              />\n-            </FormGroup>\n-            <FormGroup>\n-              <FormLabel>생년월일</FormLabel>\n-              <FormInput\n-                type=\"text\"\n-                value={selectedMember?.birth || ''}\n-                readOnly\n-                style={{ background: '#f5f5f5' }}\n-              />\n-            </FormGroup>\n-            <FormGroup>\n-              <FormLabel>키</FormLabel>\n-              <FormInput\n-                type=\"text\"\n-                placeholder=\"키(cm)\"\n-                value={formData.height}\n-                onChange={(e) => handleInputChange('height', e.target.value)}\n-              />\n-            </FormGroup>\n-            <FormGroup>\n-              <FormLabel>체중</FormLabel>\n-              <FormInput\n-                type=\"text\"\n-                placeholder=\"체중(kg)\"\n-                value={formData.weight}\n-                onChange={(e) => handleInputChange('weight', e.target.value)}\n-              />\n-            </FormGroup>\n-            <FormGroup>\n-              <FormLabel>발사이즈</FormLabel>\n-              <FormInput\n-                type=\"text\"\n-                placeholder=\"발사이즈\"\n-                value={formData.footSize}\n-                onChange={(e) => handleInputChange('footSize', e.target.value)}\n-              />\n-            </FormGroup>\n-          </FormRow>\n-\n-          {/* 복용중인 약 */}\n-          <FormRow>\n-            <FormGroup>\n-              <FormLabel>복용중인 약</FormLabel>\n-              <FormInput\n-                type=\"text\"\n-                placeholder=\"복용중인 약물을 입력하세요\"\n-                value={formData.medications}\n-                onChange={(e) => handleInputChange('medications', e.target.value)}\n-              />\n-            </FormGroup>\n-          </FormRow>\n-\n-          {/* 병력사항 */}\n-          <FormRow>\n-            <FormGroup>\n-              <FormLabel>병력사항</FormLabel>\n-              <CheckboxGroup>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.musculoskeletal}\n-                    onChange={(e) => handleCheckboxChange('musculoskeletal', e.target.checked)}\n-                  />\n-                  근골격계질환\n-                </CheckboxItem>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.cardiovascular}\n-                    onChange={(e) => handleCheckboxChange('cardiovascular', e.target.checked)}\n-                  />\n-                  심혈관계질환\n-                </CheckboxItem>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.diabetes}\n-                    onChange={(e) => handleCheckboxChange('diabetes', e.target.checked)}\n-                  />\n-                  당뇨\n-                </CheckboxItem>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.osteoporosis}\n-                    onChange={(e) => handleCheckboxChange('osteoporosis', e.target.checked)}\n-                  />\n-                  골다공증\n-                </CheckboxItem>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.thyroid}\n-                    onChange={(e) => handleCheckboxChange('thyroid', e.target.checked)}\n-                  />\n-                  갑상선\n-                </CheckboxItem>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.varicose}\n-                    onChange={(e) => handleCheckboxChange('varicose', e.target.checked)}\n-                  />\n-                  정맥류\n-                </CheckboxItem>\n-                <CheckboxItem>\n-                  <Checkbox\n-                    type=\"checkbox\"\n-                    checked={formData.medicalHistory.arthritis}\n-                    onChange={(e) => handleCheckboxChange('arthritis', e.target.checked)}\n-                  />\n-                  관절염\n-                </CheckboxItem>\n-              </CheckboxGroup>\n-            </FormGroup>\n-          </FormRow>\n-\n-          {/* 이미지 영역 */}\n-          <ImageSection>\n-            <BodyImageCanvas\n-              imageType=\"front\"\n-              imageUrl=\"\"\n-              points={formData.bodyImages.front}\n-              onAddPoint={(point) => handleAddBodyImagePoint('front', point)}\n-              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('front', pointId, updates)}\n-              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('front', pointId)}\n-            />\n-            <BodyImageCanvas\n-              imageType=\"spine\"\n-              imageUrl=\"\"\n-              points={formData.bodyImages.spine}\n-              onAddPoint={(point) => handleAddBodyImagePoint('spine', point)}\n-              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('spine', pointId, updates)}\n-              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('spine', pointId)}\n-            />\n-            <BodyImageCanvas\n-              imageType=\"back\"\n-              imageUrl=\"\"\n-              points={formData.bodyImages.back}\n-              onAddPoint={(point) => handleAddBodyImagePoint('back', point)}\n-              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('back', pointId, updates)}\n-              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('back', pointId)}\n-            />\n-          </ImageSection>\n-\n-          {/* 통증 히스토리 및 운동목적 */}\n-          <FormRow>\n-            <FormGroup>\n-              <FormLabel>시술, 수술 등 통증 히스토리 및 코멘트/운동목적</FormLabel>\n-              <FormTextarea\n-                rows={6}\n-                placeholder=\"통증 히스토리, 수술 이력, 운동 목적 등을 상세히 기입해주세요\"\n-                value={formData.painHistory}\n-                onChange={(e) => handleInputChange('painHistory', e.target.value)}\n-              />\n-            </FormGroup>\n-          </FormRow>\n-\n-          {/* 동의서 */}\n-          <ConsentSection>\n-            <ConsentText>\n-              라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n-              본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.\n-            </ConsentText>\n-            <SignatureArea>\n-              <SignatureSection>\n-                <SignatureLabel>고객 서명</SignatureLabel>\n-                <SignatureCanvas\n-                  width={250}\n-                  height={120}\n-                  onSignatureChange={handleSignatureChange}\n-                  initialSignature={formData.signatureData}\n-                />\n-              </SignatureSection>\n-            </SignatureArea>\n-            \n-            {/* 날짜 정보 표시 */}\n-            <DateRow>\n-              <DateItem>\n-                <DateLabel>서명 날짜</DateLabel>\n-                <DateValue>\n-                  {currentPrescription?.signedAt \n-                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n-                    : hasSignature() \n-                      ? new Date().toLocaleDateString('ko-KR') \n-                      : '서명 후 표시됩니다'\n-                  }\n-                </DateValue>\n-              </DateItem>\n-              <DateItem>\n-                <DateLabel>최근 업데이트</DateLabel>\n-                <DateValue>\n-                  {currentPrescription?.updatedAt \n-                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n-                    : '저장 후 표시됩니다'\n-                  }\n-                </DateValue>\n-              </DateItem>\n-            </DateRow>\n-          </ConsentSection>\n-        </PrescriptionContainer>\n-      </PrescriptionPanel>\n-    </PageContainer>\n-  );\n-};\n-\n export default ExercisePrescriptionPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761464396927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,8 +301,16 @@\n   font-size: ${AppTextStyles.body2.fontSize};\n   color: ${AppColors.onBackground};\n `;\n \n+const SignatureNote = styled.div`\n+  margin-top: 8px;\n+  font-size: ${AppTextStyles.body3.fontSize};\n+  color: ${AppColors.onInput1};\n+  text-align: center;\n+  font-style: italic;\n+`;\n+\n const ExercisePrescriptionPage: React.FC = () => {\n   const [searchParams] = useSearchParams();\n   const [searchTerm, setSearchTerm] = useState('');\n   const [selectedMember, setSelectedMember] = useState<Member | null>(null);\n@@ -529,15 +537,25 @@\n       alert('회원을 선택해주세요.');\n       return;\n     }\n \n-    // 서명 검증\n-    if (!hasSignature()) {\n+    // 서명 검증: 새 처방서는 서명 필수, 기존 처방서는 기존 서명이 있으면 OK\n+    if (!currentPrescription && !hasSignature()) {\n       alert('서명이 필요합니다. 서명을 완료해주세요.');\n       return;\n     }\n     \n+    if (currentPrescription && !hasExistingSignature() && !hasSignature()) {\n+      alert('서명이 필요합니다. 서명을 완료해주세요.');\n+      return;\n+    }\n+    \n     try {\n+      // 서명 데이터 결정: 기존 서명이 있으면 그것을 유지, 없으면 현재 서명 사용\n+      const finalSignatureData = hasExistingSignature() \n+        ? currentPrescription!.signatureData \n+        : formData.signatureData;\n+      \n       const prescriptionData = {\n         memberId: selectedMember.id,\n         memberName: selectedMember.name,\n         height: formData.height,\n@@ -546,9 +564,9 @@\n         medications: formData.medications,\n         medicalHistory: formData.medicalHistory,\n         painHistory: formData.painHistory,\n         bodyImages: formData.bodyImages,\n-        signatureData: formData.signatureData,\n+        signatureData: finalSignatureData,\n         signedAt: currentPrescription?.signedAt || new Date(), // 기존에 서명 날짜가 있으면 유지, 없으면 현재 시각\n         isActive: true,\n         prescriptionDate: new Date(),\n       };\n@@ -564,9 +582,9 @@\n             medications: formData.medications,\n             medicalHistory: formData.medicalHistory,\n             painHistory: formData.painHistory,\n             bodyImages: formData.bodyImages,\n-            signatureData: formData.signatureData,\n+            signatureData: finalSignatureData, // 최종 서명 데이터 사용\n             isActive: true,\n             prescriptionDate: new Date(),\n           }\n         );\n@@ -1019,8 +1037,18 @@\n                   onSignatureChange={handleSignatureChange}\n                   initialSignature={formData.signatureData}\n                   readonly={hasExistingSignature()} // 기존 서명이 있으면 읽기 전용\n                 />\n+                {hasExistingSignature() && (\n+                  <SignatureNote>\n+                    ✓ 서명이 완료되었습니다 (수정 불가)\n+                  </SignatureNote>\n+                )}\n+                {!hasExistingSignature() && (\n+                  <SignatureNote>\n+                    서명 후 저장하시면 수정할 수 없습니다\n+                  </SignatureNote>\n+                )}\n               </SignatureSection>\n             </SignatureArea>\n             \n             {/* 날짜 정보 표시 */}\n"
                },
                {
                    "date": 1761464477236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1031,8 +1031,9 @@\n             <SignatureArea>\n               <SignatureSection>\n                 <SignatureLabel>고객 서명</SignatureLabel>\n                 <SignatureCanvas\n+                  key={selectedMember?.id || 'no-member'} // 회원 변경 시 컴포넌트 재생성\n                   width={250}\n                   height={120}\n                   onSignatureChange={handleSignatureChange}\n                   initialSignature={formData.signatureData}\n"
                },
                {
                    "date": 1761464656178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,21 +254,8 @@\n   color: ${AppColors.onBackground};\n   margin-bottom: 20px;\n `;\n \n-const SignatureArea = styled.div`\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: flex-end;\n-`;\n-\n-const SignatureSection = styled.div`\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  gap: 10px;\n-`;\n-\n const SignatureLabel = styled.div`\n   font-size: ${AppTextStyles.body3.fontSize};\n   color: ${AppColors.onInput1};\n `;\n@@ -426,11 +413,11 @@\n               front: [],\n               spine: [],\n               back: [],\n             },\n-            signatureData: '',\n+            signatureData: '', // 서명 데이터 초기화\n           });\n-          console.log('새 운동처방서 템플릿 생성');\n+          console.log('새 운동처방서 템플릿 생성 - 서명 데이터 초기화됨');\n         }\n       } catch (error) {\n         console.error('운동처방서 로드 실패:', error);\n         alert('운동처방서 로드에 실패했습니다.');\n@@ -645,9 +632,8 @@\n           .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n           .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n           .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n           .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n-          .signature-area { display: flex; justify-content: space-between; align-items: flex-end; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n           .date-area { text-align: right; }\n           textarea { resize: vertical; height: 100px; }\n           .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n@@ -723,35 +709,43 @@\n \n           <div class=\"consent-section\">\n             <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n             본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n-            <div class=\"signature-area\">\n-              <div style=\"text-align: center;\">\n-                <div style=\"margin-bottom: 10px; font-size: 14px; color: #666;\">고객 서명</div>\n-                ${formData.signatureData ? `<img src=\"${formData.signatureData}\" style=\"max-width: 250px; max-height: 120px; border: 1px solid #ddd; border-radius: 6px;\">` : '<div style=\"width: 250px; height: 120px; border: 1px solid #ddd; border-radius: 6px; background: white; display: flex; align-items: center; justify-content: center; color: #999;\">서명 없음</div>'}\n-              </div>\n-            </div>\n             \n-            <div style=\"display: flex; justify-content: space-between; margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n-              <div style=\"text-align: center;\">\n-                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n-                <div style=\"font-size: 14px; color: #000;\">\n-                  ${currentPrescription?.signedAt \n-                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n-                    : hasSignature() \n-                      ? new Date().toLocaleDateString('ko-KR') \n-                      : '서명 후 표시됩니다'\n-                  }\n+            <div style=\"display: flex; gap: 20px; align-items: flex-start;\">\n+              <div style=\"flex: 0 0 auto; min-width: 300px; padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n+                <div style=\"display: flex; justify-content: space-between;\">\n+                  <div style=\"text-align: center;\">\n+                    <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n+                    <div style=\"font-size: 14px; color: #000;\">\n+                      ${currentPrescription?.signedAt \n+                        ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                        : hasSignature() \n+                          ? new Date().toLocaleDateString('ko-KR') \n+                          : '서명 후 표시됩니다'\n+                      }\n+                    </div>\n+                  </div>\n+                  <div style=\"text-align: center;\">\n+                    <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n+                    <div style=\"font-size: 14px; color: #000;\">\n+                      ${currentPrescription?.updatedAt \n+                        ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                        : new Date().toLocaleDateString('ko-KR')\n+                      }\n+                    </div>\n+                  </div>\n                 </div>\n               </div>\n-              <div style=\"text-align: center;\">\n-                <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n-                <div style=\"font-size: 14px; color: #000;\">\n-                  ${currentPrescription?.updatedAt \n-                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n-                    : new Date().toLocaleDateString('ko-KR')\n-                  }\n+              \n+              <div style=\"flex: 1; display: flex; flex-direction: column; align-items: center;\">\n+                <div style=\"display: flex; align-items: center; gap: 15px; margin-bottom: 10px; width: 100%; justify-content: center;\">\n+                  <div style=\"font-size: 14px; color: #666;\">고객 서명</div>\n+                  <div style=\"font-size: 12px; color: ${hasExistingSignature() ? '#28a745' : '#666'};\">\n+                    ${hasExistingSignature() ? '✓ 서명이 완료되었습니다 (수정 불가)' : '서명 후 저장하시면 수정할 수 없습니다'}\n+                  </div>\n                 </div>\n+                ${formData.signatureData ? `<img src=\"${formData.signatureData}\" style=\"max-width: 250px; max-height: 100px; border: 1px solid #ddd; border-radius: 6px;\">` : '<div style=\"width: 250px; height: 100px; border: 1px solid #ddd; border-radius: 6px; background: white; display: flex; align-items: center; justify-content: center; color: #999;\">서명 없음</div>'}\n               </div>\n             </div>\n           </div>\n         </div>\n@@ -1027,55 +1021,60 @@\n             <ConsentText>\n               라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n               본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.\n             </ConsentText>\n-            <SignatureArea>\n-              <SignatureSection>\n-                <SignatureLabel>고객 서명</SignatureLabel>\n+            \n+            {/* 서명 영역과 날짜 정보를 하나의 행으로 배치 */}\n+            <div style={{ display: 'flex', gap: '20px', alignItems: 'flex-start' }}>\n+              {/* 날짜 정보 카드 - 왼쪽 */}\n+              <DateRow style={{ flex: '0 0 auto', margin: '0', minWidth: '300px' }}>\n+                <DateItem>\n+                  <DateLabel>서명 날짜</DateLabel>\n+                  <DateValue>\n+                    {currentPrescription?.signedAt \n+                      ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                      : hasSignature() \n+                        ? new Date().toLocaleDateString('ko-KR') \n+                        : '서명 후 표시됩니다'\n+                    }\n+                  </DateValue>\n+                </DateItem>\n+                <DateItem>\n+                  <DateLabel>최근 업데이트</DateLabel>\n+                  <DateValue>\n+                    {currentPrescription?.updatedAt \n+                      ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                      : '저장 후 표시됩니다'\n+                    }\n+                  </DateValue>\n+                </DateItem>\n+              </DateRow>\n+\n+              {/* 서명 영역 - 오른쪽 */}\n+              <div style={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n+                <div style={{ display: 'flex', alignItems: 'center', gap: '15px', marginBottom: '10px', width: '100%', justifyContent: 'center' }}>\n+                  <SignatureLabel>고객 서명</SignatureLabel>\n+                  {hasExistingSignature() && (\n+                    <SignatureNote style={{ margin: '0', fontSize: '12px', color: '#28a745' }}>\n+                      ✓ 서명이 완료되었습니다 (수정 불가)\n+                    </SignatureNote>\n+                  )}\n+                  {!hasExistingSignature() && (\n+                    <SignatureNote style={{ margin: '0', fontSize: '12px' }}>\n+                      서명 후 저장하시면 수정할 수 없습니다\n+                    </SignatureNote>\n+                  )}\n+                </div>\n                 <SignatureCanvas\n-                  key={selectedMember?.id || 'no-member'} // 회원 변경 시 컴포넌트 재생성\n+                  key={selectedMember?.id || 'no-member'}\n                   width={250}\n-                  height={120}\n+                  height={100}\n                   onSignatureChange={handleSignatureChange}\n                   initialSignature={formData.signatureData}\n-                  readonly={hasExistingSignature()} // 기존 서명이 있으면 읽기 전용\n+                  readonly={hasExistingSignature()}\n                 />\n-                {hasExistingSignature() && (\n-                  <SignatureNote>\n-                    ✓ 서명이 완료되었습니다 (수정 불가)\n-                  </SignatureNote>\n-                )}\n-                {!hasExistingSignature() && (\n-                  <SignatureNote>\n-                    서명 후 저장하시면 수정할 수 없습니다\n-                  </SignatureNote>\n-                )}\n-              </SignatureSection>\n-            </SignatureArea>\n-            \n-            {/* 날짜 정보 표시 */}\n-            <DateRow>\n-              <DateItem>\n-                <DateLabel>서명 날짜</DateLabel>\n-                <DateValue>\n-                  {currentPrescription?.signedAt \n-                    ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n-                    : hasSignature() \n-                      ? new Date().toLocaleDateString('ko-KR') \n-                      : '서명 후 표시됩니다'\n-                  }\n-                </DateValue>\n-              </DateItem>\n-              <DateItem>\n-                <DateLabel>최근 업데이트</DateLabel>\n-                <DateValue>\n-                  {currentPrescription?.updatedAt \n-                    ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n-                    : '저장 후 표시됩니다'\n-                  }\n-                </DateValue>\n-              </DateItem>\n-            </DateRow>\n+              </div>\n+            </div>\n           </ConsentSection>\n         </PrescriptionContainer>\n       </PrescriptionPanel>\n     </PageContainer>\n"
                },
                {
                    "date": 1761464754009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,13 +254,8 @@\n   color: ${AppColors.onBackground};\n   margin-bottom: 20px;\n `;\n \n-const SignatureLabel = styled.div`\n-  font-size: ${AppTextStyles.body3.fontSize};\n-  color: ${AppColors.onInput1};\n-`;\n-\n const DateRow = styled.div`\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n@@ -711,40 +706,41 @@\n             <p>라비다 스포츠메디컬에서 제공하는 WBM 프로그램을 효과적으로 이용하기 위해 회원님 사전 건강 정보 작성에 동의하며, \n             본 상담지에 명시되지 않은 병력 및 기타 원인으로 발생되는 문제에 대해서는 당사는 일체의 책임이 없음을 알려 드립니다.</p>\n             \n             <div style=\"display: flex; gap: 20px; align-items: flex-start;\">\n-              <div style=\"flex: 0 0 auto; min-width: 300px; padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n-                <div style=\"display: flex; justify-content: space-between;\">\n-                  <div style=\"text-align: center;\">\n-                    <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n-                    <div style=\"font-size: 14px; color: #000;\">\n-                      ${currentPrescription?.signedAt \n-                        ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n-                        : hasSignature() \n-                          ? new Date().toLocaleDateString('ko-KR') \n-                          : '서명 후 표시됩니다'\n-                      }\n-                    </div>\n+              <div style=\"flex: 0 0 auto; min-width: 300px;\">\n+                <div style=\"margin-bottom: 10px; text-align: center;\">\n+                  <div style=\"font-size: 12px; color: ${hasExistingSignature() ? '#28a745' : '#666'};\">\n+                    ${hasExistingSignature() ? '✓ 서명이 완료되었습니다 (수정 불가)' : '서명 후 저장하시면 수정할 수 없습니다'}\n                   </div>\n-                  <div style=\"text-align: center;\">\n-                    <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n-                    <div style=\"font-size: 14px; color: #000;\">\n-                      ${currentPrescription?.updatedAt \n-                        ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n-                        : new Date().toLocaleDateString('ko-KR')\n-                      }\n+                </div>\n+                <div style=\"padding: 15px; background: #f8f9fa; border-radius: 8px; border: 1px solid #ddd;\">\n+                  <div style=\"display: flex; justify-content: space-between;\">\n+                    <div style=\"text-align: center;\">\n+                      <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">서명 날짜</div>\n+                      <div style=\"font-size: 14px; color: #000;\">\n+                        ${currentPrescription?.signedAt \n+                          ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                          : hasSignature() \n+                            ? new Date().toLocaleDateString('ko-KR') \n+                            : '서명 후 표시됩니다'\n+                        }\n+                      </div>\n                     </div>\n+                    <div style=\"text-align: center;\">\n+                      <div style=\"font-size: 12px; color: #666; font-weight: 600; margin-bottom: 5px;\">최근 업데이트</div>\n+                      <div style=\"font-size: 14px; color: #000;\">\n+                        ${currentPrescription?.updatedAt \n+                          ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                          : new Date().toLocaleDateString('ko-KR')\n+                        }\n+                      </div>\n+                    </div>\n                   </div>\n                 </div>\n               </div>\n               \n-              <div style=\"flex: 1; display: flex; flex-direction: column; align-items: center;\">\n-                <div style=\"display: flex; align-items: center; gap: 15px; margin-bottom: 10px; width: 100%; justify-content: center;\">\n-                  <div style=\"font-size: 14px; color: #666;\">고객 서명</div>\n-                  <div style=\"font-size: 12px; color: ${hasExistingSignature() ? '#28a745' : '#666'};\">\n-                    ${hasExistingSignature() ? '✓ 서명이 완료되었습니다 (수정 불가)' : '서명 후 저장하시면 수정할 수 없습니다'}\n-                  </div>\n-                </div>\n+              <div style=\"flex: 1; display: flex; flex-direction: column; align-items: center; justify-content: center;\">\n                 ${formData.signatureData ? `<img src=\"${formData.signatureData}\" style=\"max-width: 250px; max-height: 100px; border: 1px solid #ddd; border-radius: 6px;\">` : '<div style=\"width: 250px; height: 100px; border: 1px solid #ddd; border-radius: 6px; background: white; display: flex; align-items: center; justify-content: center; color: #999;\">서명 없음</div>'}\n               </div>\n             </div>\n           </div>\n@@ -1025,35 +1021,11 @@\n             \n             {/* 서명 영역과 날짜 정보를 하나의 행으로 배치 */}\n             <div style={{ display: 'flex', gap: '20px', alignItems: 'flex-start' }}>\n               {/* 날짜 정보 카드 - 왼쪽 */}\n-              <DateRow style={{ flex: '0 0 auto', margin: '0', minWidth: '300px' }}>\n-                <DateItem>\n-                  <DateLabel>서명 날짜</DateLabel>\n-                  <DateValue>\n-                    {currentPrescription?.signedAt \n-                      ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n-                      : hasSignature() \n-                        ? new Date().toLocaleDateString('ko-KR') \n-                        : '서명 후 표시됩니다'\n-                    }\n-                  </DateValue>\n-                </DateItem>\n-                <DateItem>\n-                  <DateLabel>최근 업데이트</DateLabel>\n-                  <DateValue>\n-                    {currentPrescription?.updatedAt \n-                      ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n-                      : '저장 후 표시됩니다'\n-                    }\n-                  </DateValue>\n-                </DateItem>\n-              </DateRow>\n-\n-              {/* 서명 영역 - 오른쪽 */}\n-              <div style={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n-                <div style={{ display: 'flex', alignItems: 'center', gap: '15px', marginBottom: '10px', width: '100%', justifyContent: 'center' }}>\n-                  <SignatureLabel>고객 서명</SignatureLabel>\n+              <div style={{ flex: '0 0 auto', minWidth: '300px' }}>\n+                {/* 서명 안내 텍스트 */}\n+                <div style={{ marginBottom: '10px', textAlign: 'center' }}>\n                   {hasExistingSignature() && (\n                     <SignatureNote style={{ margin: '0', fontSize: '12px', color: '#28a745' }}>\n                       ✓ 서명이 완료되었습니다 (수정 불가)\n                     </SignatureNote>\n@@ -1063,8 +1035,35 @@\n                       서명 후 저장하시면 수정할 수 없습니다\n                     </SignatureNote>\n                   )}\n                 </div>\n+                {/* 날짜 카드 */}\n+                <DateRow style={{ margin: '0' }}>\n+                  <DateItem>\n+                    <DateLabel>서명 날짜</DateLabel>\n+                    <DateValue>\n+                      {currentPrescription?.signedAt \n+                        ? new Date(currentPrescription.signedAt).toLocaleDateString('ko-KR')\n+                        : hasSignature() \n+                          ? new Date().toLocaleDateString('ko-KR') \n+                          : '서명 후 표시됩니다'\n+                      }\n+                    </DateValue>\n+                  </DateItem>\n+                  <DateItem>\n+                    <DateLabel>최근 업데이트</DateLabel>\n+                    <DateValue>\n+                      {currentPrescription?.updatedAt \n+                        ? new Date(currentPrescription.updatedAt).toLocaleDateString('ko-KR')\n+                        : '저장 후 표시됩니다'\n+                      }\n+                    </DateValue>\n+                  </DateItem>\n+                </DateRow>\n+              </div>\n+\n+              {/* 서명 영역 - 오른쪽 */}\n+              <div style={{ flex: 1, display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                 <SignatureCanvas\n                   key={selectedMember?.id || 'no-member'}\n                   width={250}\n                   height={100}\n"
                },
                {
                    "date": 1761464902058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,15 +218,15 @@\n \n const CheckboxGroup = styled.div`\n   display: flex;\n   flex-wrap: wrap;\n-  gap: 15px;\n+  gap: 10px;\n `;\n \n const CheckboxItem = styled.label`\n   display: flex;\n   align-items: center;\n-  gap: 8px;\n+  gap: 4px;\n   cursor: pointer;\n   font-size: ${AppTextStyles.body2.fontSize};\n `;\n \n@@ -240,9 +240,9 @@\n   margin-bottom: 20px;\n `;\n \n const ConsentSection = styled.div`\n-  margin-top: 40px;\n+  margin-top: 20px;\n   padding: 20px;\n   border: 1px solid ${AppColors.borderLight};\n   border-radius: 8px;\n   background: #f9f9f9;\n@@ -626,9 +626,9 @@\n           .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n           .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n           .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n           .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n-          .consent-section { margin-top: 40px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n+          .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n           .date-area { text-align: right; }\n           textarea { resize: vertical; height: 100px; }\n           .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n@@ -662,18 +662,18 @@\n             </div>\n           </div>\n \n           <div class=\"form-row\">\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">복용중인 약</label>\n-              <input class=\"form-input\" value=\"${formData.medications}\" readonly>\n+            <div class=\"form-group\" style=\"display: flex; align-items: center; gap: 15px;\">\n+              <label class=\"form-label\" style=\"margin-bottom: 0; min-width: 120px; flex-shrink: 0;\">복용중인 약</label>\n+              <input class=\"form-input\" value=\"${formData.medications}\" readonly style=\"flex: 1;\">\n             </div>\n           </div>\n \n           <div class=\"form-row\">\n-            <div class=\"form-group\">\n-              <label class=\"form-label\">병력사항</label>\n-              <div class=\"checkbox-group\">\n+            <div class=\"form-group\" style=\"display: flex; align-items: flex-start; gap: 15px;\">\n+              <label class=\"form-label\" style=\"margin-bottom: 0; min-width: 120px; flex-shrink: 0; padding-top: 8px;\">병력사항</label>\n+              <div class=\"checkbox-group\" style=\"flex: 1;\">\n                 ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n                   const labels: { [key: string]: string } = {\n                     musculoskeletal: '근골격계질환',\n                     cardiovascular: '심혈관계질환',\n@@ -892,26 +892,27 @@\n               />\n             </FormGroup>\n           </FormRow>\n \n-          {/* 복용중인 약 */}\n+          {/* 복용중인 약 - 라벨과 입력란을 같은 행에 배치 */}\n           <FormRow>\n-            <FormGroup>\n-              <FormLabel>복용중인 약</FormLabel>\n+            <FormGroup style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\n+              <FormLabel style={{ marginBottom: '0', minWidth: '120px', flexShrink: 0 }}>복용중인 약</FormLabel>\n               <FormInput\n                 type=\"text\"\n                 placeholder=\"복용중인 약물을 입력하세요\"\n                 value={formData.medications}\n                 onChange={(e) => handleInputChange('medications', e.target.value)}\n+                style={{ flex: 1 }}\n               />\n             </FormGroup>\n           </FormRow>\n \n-          {/* 병력사항 */}\n+          {/* 병력사항 - 라벨과 체크박스를 같은 행에 배치 */}\n           <FormRow>\n-            <FormGroup>\n-              <FormLabel>병력사항</FormLabel>\n-              <CheckboxGroup>\n+            <FormGroup style={{ display: 'flex', alignItems: 'flex-start', gap: '15px' }}>\n+              <FormLabel style={{ marginBottom: '0', minWidth: '120px', flexShrink: 0, paddingTop: '8px' }}>병력사항</FormLabel>\n+              <CheckboxGroup style={{ flex: 1 }}>\n                 <CheckboxItem>\n                   <Checkbox\n                     type=\"checkbox\"\n                     checked={formData.medicalHistory.musculoskeletal}\n"
                },
                {
                    "date": 1761465071062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -623,9 +623,9 @@\n           .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n           .form-group { flex: 1; }\n           .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n           .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n-          .checkbox-group { display: flex; flex-wrap: wrap; gap: 15px; }\n+          .checkbox-group { display: flex; flex-wrap: wrap; gap: 10px; }\n           .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n           .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n           .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n@@ -669,11 +669,11 @@\n             </div>\n           </div>\n \n           <div class=\"form-row\">\n-            <div class=\"form-group\" style=\"display: flex; align-items: flex-start; gap: 15px;\">\n-              <label class=\"form-label\" style=\"margin-bottom: 0; min-width: 120px; flex-shrink: 0; padding-top: 8px;\">병력사항</label>\n-              <div class=\"checkbox-group\" style=\"flex: 1;\">\n+            <div class=\"form-group\" style=\"display: flex; align-items: center; gap: 15px;\">\n+              <label class=\"form-label\" style=\"margin-bottom: 0; min-width: 120px; flex-shrink: 0;\">병력사항</label>\n+              <div class=\"checkbox-group\" style=\"flex: 1; gap: 10px;\">\n                 ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n                   const labels: { [key: string]: string } = {\n                     musculoskeletal: '근골격계질환',\n                     cardiovascular: '심혈관계질환',\n@@ -682,9 +682,9 @@\n                     thyroid: '갑상선',\n                     varicose: '정맥류',\n                     arthritis: '관절염'\n                   };\n-                  return `<label><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                  return `<label style=\"display: flex; align-items: center; gap: 4px;\"><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n                 }).join('')}\n               </div>\n             </div>\n           </div>\n@@ -908,10 +908,10 @@\n           </FormRow>\n \n           {/* 병력사항 - 라벨과 체크박스를 같은 행에 배치 */}\n           <FormRow>\n-            <FormGroup style={{ display: 'flex', alignItems: 'flex-start', gap: '15px' }}>\n-              <FormLabel style={{ marginBottom: '0', minWidth: '120px', flexShrink: 0, paddingTop: '8px' }}>병력사항</FormLabel>\n+            <FormGroup style={{ display: 'flex', alignItems: 'center', gap: '15px' }}>\n+              <FormLabel style={{ marginBottom: '0', minWidth: '120px', flexShrink: 0 }}>병력사항</FormLabel>\n               <CheckboxGroup style={{ flex: 1 }}>\n                 <CheckboxItem>\n                   <Checkbox\n                     type=\"checkbox\"\n"
                },
                {
                    "date": 1761465200784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -623,9 +623,10 @@\n           .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n           .form-group { flex: 1; }\n           .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n           .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n-          .checkbox-group { display: flex; flex-wrap: wrap; gap: 10px; }\n+          .checkbox-group { display: flex; flex-wrap: nowrap; gap: 10px; overflow: hidden; }\n+          .checkbox-item { display: flex; align-items: center; gap: 4px; white-space: nowrap; flex-shrink: 0; }\n           .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n           .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n           .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n@@ -671,9 +672,9 @@\n \n           <div class=\"form-row\">\n             <div class=\"form-group\" style=\"display: flex; align-items: center; gap: 15px;\">\n               <label class=\"form-label\" style=\"margin-bottom: 0; min-width: 120px; flex-shrink: 0;\">병력사항</label>\n-              <div class=\"checkbox-group\" style=\"flex: 1; gap: 10px;\">\n+              <div style=\"flex: 1; display: flex; flex-wrap: nowrap; gap: 10px; overflow: hidden;\">\n                 ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n                   const labels: { [key: string]: string } = {\n                     musculoskeletal: '근골격계질환',\n                     cardiovascular: '심혈관계질환',\n@@ -682,9 +683,9 @@\n                     thyroid: '갑상선',\n                     varicose: '정맥류',\n                     arthritis: '관절염'\n                   };\n-                  return `<label style=\"display: flex; align-items: center; gap: 4px;\"><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                  return `<label style=\"display: flex; align-items: center; gap: 4px; white-space: nowrap; flex-shrink: 0;\"><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n                 }).join('')}\n               </div>\n             </div>\n           </div>\n"
                },
                {
                    "date": 1761465319170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -623,10 +623,10 @@\n           .form-row { display: flex; gap: 15px; margin-bottom: 20px; }\n           .form-group { flex: 1; }\n           .form-label { display: block; font-weight: 600; margin-bottom: 8px; }\n           .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n-          .checkbox-group { display: flex; flex-wrap: nowrap; gap: 10px; overflow: hidden; }\n-          .checkbox-item { display: flex; align-items: center; gap: 4px; white-space: nowrap; flex-shrink: 0; }\n+          .checkbox-group { display: flex; flex-wrap: nowrap; gap: 8px; overflow: hidden; }\n+          .checkbox-item { display: flex; align-items: center; gap: 3px; white-space: nowrap; flex-shrink: 0; font-size: 12px; }\n           .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n           .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n           .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n@@ -672,9 +672,9 @@\n \n           <div class=\"form-row\">\n             <div class=\"form-group\" style=\"display: flex; align-items: center; gap: 15px;\">\n               <label class=\"form-label\" style=\"margin-bottom: 0; min-width: 120px; flex-shrink: 0;\">병력사항</label>\n-              <div style=\"flex: 1; display: flex; flex-wrap: nowrap; gap: 10px; overflow: hidden;\">\n+              <div style=\"flex: 1; display: flex; flex-wrap: nowrap; gap: 8px; overflow: hidden;\">\n                 ${Object.entries(formData.medicalHistory).map(([key, value]) => {\n                   const labels: { [key: string]: string } = {\n                     musculoskeletal: '근골격계질환',\n                     cardiovascular: '심혈관계질환',\n@@ -683,9 +683,9 @@\n                     thyroid: '갑상선',\n                     varicose: '정맥류',\n                     arthritis: '관절염'\n                   };\n-                  return `<label style=\"display: flex; align-items: center; gap: 4px; white-space: nowrap; flex-shrink: 0;\"><input type=\"checkbox\" ${value ? 'checked' : ''} disabled> ${labels[key]}</label>`;\n+                  return `<label style=\"display: flex; align-items: center; gap: 3px; white-space: nowrap; flex-shrink: 0; font-size: 12px;\"><input type=\"checkbox\" ${value ? 'checked' : ''} disabled style=\"margin: 0;\"> ${labels[key]}</label>`;\n                 }).join('')}\n               </div>\n             </div>\n           </div>\n"
                },
                {
                    "date": 1761465672684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -596,16 +596,67 @@\n     if (!selectedMember) return '';\n \n     // 신체 이미지 포인트들을 HTML로 변환\n     const generatePointsHTML = (points: BodyImagePoint[], imageType: string) => {\n-      if (points.length === 0) return `<div class=\"image-box\"><strong>${imageType}</strong><br><small>등록된 포인트 없음</small></div>`;\n+      if (points.length === 0) {\n+        return `\n+          <div class=\"image-box\">\n+            <div class=\"image-header\"><strong>${imageType}</strong></div>\n+            <div class=\"image-content\">\n+              <div class=\"no-points\">등록된 포인트 없음</div>\n+            </div>\n+          </div>\n+        `;\n+      }\n       \n-      const pointsHtml = points.map(point => \n-        `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y}%; width: 8px; height: 8px; background: ${point.color || '#ff0000'}; border: 1px solid white; border-radius: 50%; transform: translate(-50%, -50%);\"></div>\n-         ${point.memo ? `<div style=\"position: absolute; left: ${point.x}%; top: ${point.y + 5}%; font-size: 10px; background: rgba(0,0,0,0.7); color: white; padding: 2px 4px; border-radius: 2px; transform: translateX(-50%); white-space: nowrap;\">${point.memo}</div>` : ''}`\n+      // 포인트들을 시각적으로 표시\n+      const pointsHtml = points.map((point, index) => \n+        `<div class=\"point-marker\" style=\"\n+           position: absolute; \n+           left: ${point.x}%; \n+           top: ${point.y}%; \n+           width: 8px; \n+           height: 8px; \n+           background: ${point.color || '#ff0000'}; \n+           border: 1px solid white; \n+           border-radius: 50%; \n+           transform: translate(-50%, -50%);\n+           box-shadow: 0 0 3px rgba(0,0,0,0.4);\n+           z-index: 10;\n+         \"></div>\n+         ${point.memo ? `<div class=\"point-memo\" style=\"\n+           position: absolute; \n+           left: ${point.x}%; \n+           top: ${point.y}%; \n+           font-size: 8px; \n+           background: rgba(0,0,0,0.8); \n+           color: white; \n+           padding: 1px 4px; \n+           border-radius: 2px; \n+           transform: translate(-50%, calc(-100% - 6px)); \n+           white-space: nowrap;\n+           max-width: 100px;\n+           overflow: hidden;\n+           text-overflow: ellipsis;\n+           z-index: 11;\n+         \">${point.memo}</div>` : ''}`\n       ).join('');\n       \n-      return `<div class=\"image-box\" style=\"position: relative;\"><strong>${imageType}</strong><br><small>${points.length}개 포인트 등록됨</small>${pointsHtml}</div>`;\n+      // 포인트 목록을 텍스트로 표시 (필요시)\n+      const pointsList = points.length > 0 ? \n+        `<div class=\"points-summary\" style=\"margin-top: 5px; font-size: 10px; color: #666;\">\n+           ${points.length}개 포인트 등록됨\n+         </div>` : '';\n+      \n+      return `\n+        <div class=\"image-box\" style=\"position: relative;\">\n+          <div class=\"image-header\"><strong>${imageType}</strong></div>\n+          <div class=\"image-content\" style=\"position: relative; height: 200px; border: 1px solid #ddd; background: #f8f9fa; margin: 5px 0;\">\n+            ${pointsHtml}\n+          </div>\n+          ${pointsList}\n+        </div>\n+      `;\n     };\n \n     return `\n       <!DOCTYPE html>\n@@ -626,9 +677,44 @@\n           .form-input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 6px; box-sizing: border-box; }\n           .checkbox-group { display: flex; flex-wrap: nowrap; gap: 8px; overflow: hidden; }\n           .checkbox-item { display: flex; align-items: center; gap: 3px; white-space: nowrap; flex-shrink: 0; font-size: 12px; }\n           .image-section { display: flex; gap: 10px; margin-bottom: 20px; }\n-          .image-box { flex: 1; height: 300px; border: 2px dashed #ddd; border-radius: 8px; display: flex; flex-direction: column; align-items: center; justify-content: center; position: relative; }\n+          .image-box { \n+            flex: 1; \n+            border: 2px solid #ddd; \n+            border-radius: 8px; \n+            padding: 10px;\n+            background: white;\n+          }\n+          .image-header {\n+            text-align: center;\n+            font-weight: bold;\n+            margin-bottom: 8px;\n+            padding-bottom: 5px;\n+            border-bottom: 1px solid #eee;\n+          }\n+          .image-content {\n+            position: relative;\n+            height: 200px;\n+            border: 1px solid #ddd;\n+            background: #f8f9fa;\n+            margin: 5px 0;\n+            border-radius: 4px;\n+          }\n+          .no-points {\n+            position: absolute;\n+            top: 50%;\n+            left: 50%;\n+            transform: translate(-50%, -50%);\n+            color: #999;\n+            font-size: 12px;\n+          }\n+          .points-summary {\n+            margin-top: 5px;\n+            font-size: 10px;\n+            color: #666;\n+            text-align: center;\n+          }\n           .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n           .date-area { text-align: right; }\n           textarea { resize: vertical; height: 100px; }\n"
                },
                {
                    "date": 1761465796352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,48 +613,41 @@\n         `<div class=\"point-marker\" style=\"\n            position: absolute; \n            left: ${point.x}%; \n            top: ${point.y}%; \n-           width: 8px; \n-           height: 8px; \n+           width: 6px; \n+           height: 6px; \n            background: ${point.color || '#ff0000'}; \n            border: 1px solid white; \n            border-radius: 50%; \n            transform: translate(-50%, -50%);\n-           box-shadow: 0 0 3px rgba(0,0,0,0.4);\n+           box-shadow: 0 0 2px rgba(0,0,0,0.5);\n            z-index: 10;\n          \"></div>\n          ${point.memo ? `<div class=\"point-memo\" style=\"\n            position: absolute; \n            left: ${point.x}%; \n            top: ${point.y}%; \n-           font-size: 8px; \n+           font-size: 7px; \n            background: rgba(0,0,0,0.8); \n            color: white; \n-           padding: 1px 4px; \n+           padding: 1px 3px; \n            border-radius: 2px; \n-           transform: translate(-50%, calc(-100% - 6px)); \n+           transform: translate(-50%, calc(-100% - 4px)); \n            white-space: nowrap;\n-           max-width: 100px;\n+           max-width: 80px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            z-index: 11;\n          \">${point.memo}</div>` : ''}`\n       ).join('');\n       \n-      // 포인트 목록을 텍스트로 표시 (필요시)\n-      const pointsList = points.length > 0 ? \n-        `<div class=\"points-summary\" style=\"margin-top: 5px; font-size: 10px; color: #666;\">\n-           ${points.length}개 포인트 등록됨\n-         </div>` : '';\n-      \n       return `\n         <div class=\"image-box\" style=\"position: relative;\">\n           <div class=\"image-header\"><strong>${imageType}</strong></div>\n           <div class=\"image-content\" style=\"position: relative; height: 200px; border: 1px solid #ddd; background: #f8f9fa; margin: 5px 0;\">\n             ${pointsHtml}\n           </div>\n-          ${pointsList}\n         </div>\n       `;\n     };\n \n@@ -707,14 +700,8 @@\n             transform: translate(-50%, -50%);\n             color: #999;\n             font-size: 12px;\n           }\n-          .points-summary {\n-            margin-top: 5px;\n-            font-size: 10px;\n-            color: #666;\n-            text-align: center;\n-          }\n           .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n           .date-area { text-align: right; }\n           textarea { resize: vertical; height: 100px; }\n"
                },
                {
                    "date": 1761466015508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,60 +594,45 @@\n \n   const generatePrescriptionHTML = () => {\n     if (!selectedMember) return '';\n \n-    // 신체 이미지 포인트들을 HTML로 변환\n-    const generatePointsHTML = (points: BodyImagePoint[], imageType: string) => {\n+    // 신체 이미지 SVG 생성 함수\n+    const generateBodyImageSVG = (imageType: 'front' | 'spine' | 'back', title: string) => {\n+      const points = formData.bodyImages[imageType];\n+      \n       if (points.length === 0) {\n         return `\n           <div class=\"image-box\">\n-            <div class=\"image-header\"><strong>${imageType}</strong></div>\n+            <div class=\"image-header\"><strong>${title}</strong></div>\n             <div class=\"image-content\">\n               <div class=\"no-points\">등록된 포인트 없음</div>\n             </div>\n           </div>\n         `;\n       }\n-      \n-      // 포인트들을 시각적으로 표시\n-      const pointsHtml = points.map((point, index) => \n-        `<div class=\"point-marker\" style=\"\n-           position: absolute; \n-           left: ${point.x}%; \n-           top: ${point.y}%; \n-           width: 6px; \n-           height: 6px; \n-           background: ${point.color || '#ff0000'}; \n-           border: 1px solid white; \n-           border-radius: 50%; \n-           transform: translate(-50%, -50%);\n-           box-shadow: 0 0 2px rgba(0,0,0,0.5);\n-           z-index: 10;\n-         \"></div>\n-         ${point.memo ? `<div class=\"point-memo\" style=\"\n-           position: absolute; \n-           left: ${point.x}%; \n-           top: ${point.y}%; \n-           font-size: 7px; \n-           background: rgba(0,0,0,0.8); \n-           color: white; \n-           padding: 1px 3px; \n-           border-radius: 2px; \n-           transform: translate(-50%, calc(-100% - 4px)); \n-           white-space: nowrap;\n-           max-width: 80px;\n-           overflow: hidden;\n-           text-overflow: ellipsis;\n-           z-index: 11;\n-         \">${point.memo}</div>` : ''}`\n-      ).join('');\n-      \n+\n+      // SVG로 포인트들 생성\n+      const svgPoints = points.map(point => {\n+        const x = (point.x / 100) * 200; // 200px 기준\n+        const y = (point.y / 100) * 200; // 200px 기준\n+        \n+        return `\n+          <circle cx=\"${x}\" cy=\"${y}\" r=\"3\" fill=\"${point.color || '#ff0000'}\" stroke=\"#000\" stroke-width=\"1\"/>\n+          ${point.memo ? `<text x=\"${x}\" y=\"${y - 8}\" font-family=\"Arial\" font-size=\"8\" text-anchor=\"middle\" fill=\"#000\">${point.memo}</text>` : ''}\n+        `;\n+      }).join('');\n+\n+      const svgDataUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(`\n+        <svg width=\"200\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n+          <rect width=\"200\" height=\"200\" fill=\"#f8f9fa\" stroke=\"#ddd\" stroke-width=\"1\"/>\n+          ${svgPoints}\n+        </svg>\n+      `)}`;\n+\n       return `\n-        <div class=\"image-box\" style=\"position: relative;\">\n-          <div class=\"image-header\"><strong>${imageType}</strong></div>\n-          <div class=\"image-content\" style=\"position: relative; height: 200px; border: 1px solid #ddd; background: #f8f9fa; margin: 5px 0;\">\n-            ${pointsHtml}\n-          </div>\n+        <div class=\"image-box\">\n+          <div class=\"image-header\"><strong>${title}</strong></div>\n+          <img src=\"${svgDataUrl}\" style=\"width: 100%; height: 200px; object-fit: contain; border: 1px solid #ddd; border-radius: 4px;\" />\n         </div>\n       `;\n     };\n \n@@ -659,8 +644,25 @@\n         <style>\n           @media print {\n             body { margin: 0; padding: 20px; }\n             .no-print { display: none !important; }\n+            /* PDF 출력 최적화 */\n+            * {\n+              -webkit-print-color-adjust: exact !important;\n+              color-adjust: exact !important;\n+              print-color-adjust: exact !important;\n+            }\n+            .point-marker {\n+              background: var(--point-color) !important;\n+              border: 1px solid #000 !important;\n+              width: 4px !important;\n+              height: 4px !important;\n+            }\n+            .point-memo {\n+              background: #000 !important;\n+              color: #fff !important;\n+              font-size: 6px !important;\n+            }\n           }\n           body { font-family: Arial, sans-serif; margin: 20px; }\n           .prescription-container { max-width: 800px; margin: 0 auto; padding: 20px; }\n           .title { text-align: center; font-size: 24px; font-weight: bold; margin-bottom: 30px; }\n@@ -700,17 +702,36 @@\n             transform: translate(-50%, -50%);\n             color: #999;\n             font-size: 12px;\n           }\n+          .point-marker {\n+            -webkit-print-color-adjust: exact;\n+            color-adjust: exact;\n+            print-color-adjust: exact;\n+          }\n+          .point-memo {\n+            -webkit-print-color-adjust: exact;\n+            color-adjust: exact;\n+            print-color-adjust: exact;\n+          }\n           .consent-section { margin-top: 20px; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #f9f9f9; }\n           .signature-box { width: 200px; height: 80px; border: 1px solid #ddd; border-radius: 6px; background: white; }\n           .date-area { text-align: right; }\n           textarea { resize: vertical; height: 100px; }\n           .print-button { margin: 20px; padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }\n         </style>\n       </head>\n       <body>\n-        <button class=\"print-button no-print\" onclick=\"window.print()\">인쇄하기</button>\n+        <div class=\"no-print\" style=\"margin: 20px; padding: 15px; background: #f0f8ff; border: 1px solid #007bff; border-radius: 5px;\">\n+          <div style=\"display: flex; align-items: center; gap: 15px;\">\n+            <button class=\"print-button\" onclick=\"window.print()\" style=\"margin: 0;\">인쇄하기</button>\n+            <div style=\"font-size: 12px; color: #666;\">\n+              <strong>PDF 출력 시 색상이 안 보이는 경우:</strong><br>\n+              인쇄 옵션에서 \"기타 설정\" → \"배경 그래픽\" 체크 또는<br>\n+              Chrome: \"더보기\" → \"배경 그래픽\" 활성화\n+            </div>\n+          </div>\n+        </div>\n         <div class=\"prescription-container\">\n           <h1 class=\"title\">운동처방서</h1>\n           \n           <div class=\"form-row\">\n@@ -763,11 +784,11 @@\n             </div>\n           </div>\n \n           <div class=\"image-section\">\n-            ${generatePointsHTML(formData.bodyImages.front, '정면')}\n-            ${generatePointsHTML(formData.bodyImages.spine, '척추')}\n-            ${generatePointsHTML(formData.bodyImages.back, '후면')}\n+            ${generateBodyImageSVG('front', '정면')}\n+            ${generateBodyImageSVG('spine', '척추')}\n+            ${generateBodyImageSVG('back', '후면')}\n           </div>\n \n           <div class=\"form-row\">\n             <div class=\"form-group\">\n@@ -1047,32 +1068,38 @@\n           </FormRow>\n \n           {/* 이미지 영역 */}\n           <ImageSection>\n-            <BodyImageCanvas\n-              imageType=\"front\"\n-              imageUrl=\"\"\n-              points={formData.bodyImages.front}\n-              onAddPoint={(point) => handleAddBodyImagePoint('front', point)}\n-              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('front', pointId, updates)}\n-              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('front', pointId)}\n-            />\n-            <BodyImageCanvas\n-              imageType=\"spine\"\n-              imageUrl=\"\"\n-              points={formData.bodyImages.spine}\n-              onAddPoint={(point) => handleAddBodyImagePoint('spine', point)}\n-              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('spine', pointId, updates)}\n-              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('spine', pointId)}\n-            />\n-            <BodyImageCanvas\n-              imageType=\"back\"\n-              imageUrl=\"\"\n-              points={formData.bodyImages.back}\n-              onAddPoint={(point) => handleAddBodyImagePoint('back', point)}\n-              onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('back', pointId, updates)}\n-              onDeletePoint={(pointId) => handleDeleteBodyImagePoint('back', pointId)}\n-            />\n+            <div data-image-type=\"front\">\n+              <BodyImageCanvas\n+                imageType=\"front\"\n+                imageUrl=\"\"\n+                points={formData.bodyImages.front}\n+                onAddPoint={(point) => handleAddBodyImagePoint('front', point)}\n+                onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('front', pointId, updates)}\n+                onDeletePoint={(pointId) => handleDeleteBodyImagePoint('front', pointId)}\n+              />\n+            </div>\n+            <div data-image-type=\"spine\">\n+              <BodyImageCanvas\n+                imageType=\"spine\"\n+                imageUrl=\"\"\n+                points={formData.bodyImages.spine}\n+                onAddPoint={(point) => handleAddBodyImagePoint('spine', point)}\n+                onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('spine', pointId, updates)}\n+                onDeletePoint={(pointId) => handleDeleteBodyImagePoint('spine', pointId)}\n+              />\n+            </div>\n+            <div data-image-type=\"back\">\n+              <BodyImageCanvas\n+                imageType=\"back\"\n+                imageUrl=\"\"\n+                points={formData.bodyImages.back}\n+                onAddPoint={(point) => handleAddBodyImagePoint('back', point)}\n+                onUpdatePoint={(pointId, updates) => handleUpdateBodyImagePoint('back', pointId, updates)}\n+                onDeletePoint={(pointId) => handleDeleteBodyImagePoint('back', pointId)}\n+              />\n+            </div>\n           </ImageSection>\n \n           {/* 통증 히스토리 및 운동목적 */}\n           <FormRow>\n"
                }
            ],
            "date": 1761379597392,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AppColors } from '../styles/colors';\nimport { AppTextStyles } from '../styles/textStyles';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  padding: 40px 20px;\n  background: ${AppColors.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentContainer = styled.div`\n  background: ${AppColors.surface};\n  border-radius: 16px;\n  padding: 48px;\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  max-width: 600px;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: ${AppTextStyles.title1.fontSize};\n  font-weight: 700;\n  color: ${AppColors.onBackground};\n  margin: 0 0 24px 0;\n`;\n\nconst Description = styled.p`\n  font-size: ${AppTextStyles.body1.fontSize};\n  color: ${AppColors.onInput1};\n  margin: 0 0 32px 0;\n  line-height: 1.6;\n`;\n\nconst InfoCard = styled.div`\n  background: #f8f9fa;\n  border: 1px solid ${AppColors.borderLight};\n  border-radius: 12px;\n  padding: 24px;\n  margin: 24px 0;\n`;\n\nconst InfoLabel = styled.div`\n  font-size: ${AppTextStyles.label2.fontSize};\n  color: ${AppColors.onInput1};\n  margin-bottom: 8px;\n`;\n\nconst InfoValue = styled.div`\n  font-size: ${AppTextStyles.body1.fontSize};\n  font-weight: 600;\n  color: ${AppColors.onBackground};\n`;\n\nconst ComingSoonBadge = styled.div`\n  display: inline-block;\n  background: ${AppColors.primary};\n  color: ${AppColors.onPrimary};\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: ${AppTextStyles.label2.fontSize};\n  font-weight: 500;\n  margin-bottom: 16px;\n`;\n\nconst ExercisePrescriptionPage: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const [memberId, setMemberId] = useState<string>('');\n\n  useEffect(() => {\n    const memberIdParam = searchParams.get('memberId');\n    if (memberIdParam) {\n      setMemberId(memberIdParam);\n    }\n  }, [searchParams]);\n\n  return (\n    <PageContainer>\n      <ContentContainer>\n        <ComingSoonBadge>개발 중</ComingSoonBadge>\n        <Title>운동처방 페이지</Title>\n        <Description>\n          개인 맞춤형 운동 프로그램을 제공하는 페이지입니다.\n          <br />\n          현재 개발 중이며, 곧 서비스를 시작할 예정입니다.\n        </Description>\n        \n        {memberId && (\n          <InfoCard>\n            <InfoLabel>전달받은 회원 ID</InfoLabel>\n            <InfoValue>{memberId}</InfoValue>\n          </InfoCard>\n        )}\n        \n        <Description>\n          이 페이지는 QR 코드를 통해 접근되었으며,\n          <br />\n          향후 회원별 맞춤 운동처방 정보를 제공할 예정입니다.\n        </Description>\n      </ContentContainer>\n    </PageContainer>\n  );\n};\n\nexport default ExercisePrescriptionPage;"
        }
    ]
}