{
    "sourceFile": "src/pages/CMS/Terms/PrivacyPolicy.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1760163881524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760165251583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,12 @@\n-import React from 'react';\n+import React, { useState, useEffect, useCallback } from 'react';\n import styled from 'styled-components';\n import { AppColors } from '../../../styles/colors';\n import { AppTextStyles } from '../../../styles/textStyles';\n+import CustomTiptapEditor from '../../../components/Editor/CustomTiptapEditor';\n+import { toast } from 'react-toastify';\n+import { dbManager, TermsDocument } from '../../../utils/indexedDB';\n+import { devLog } from '../../../utils/devLogger';\n \n const Container = styled.div`\n   padding: 24px;\n   background-color: ${AppColors.surface};\n@@ -12,76 +16,163 @@\n const Title = styled.h1`\n   font-size: ${AppTextStyles.title1.fontSize};\n   font-weight: 700;\n   color: ${AppColors.onSurface};\n-  margin-bottom: 24px;\n+  margin: 0 0 24px 0;\n `;\n \n-const Content = styled.div`\n-  background-color: ${AppColors.background};\n-  padding: 32px;\n-  border-radius: 12px;\n-  border: 1px solid ${AppColors.borderLight};\n+const ButtonContainer = styled.div`\n+  display: flex;\n+  justify-content: flex-end;\n+  gap: 12px;\n+  margin-bottom: 20px;\n+  flex-wrap: wrap;\n `;\n \n-const Section = styled.div`\n-  margin-bottom: 32px;\n+const SaveButton = styled.button`\n+  padding: 12px 24px;\n+  border: none;\n+  border-radius: 8px;\n+  font-size: 14px;\n+  font-weight: bold;\n+  cursor: pointer;\n+  background-color: #007bff;\n+  color: white;\n+  transition: all 0.2s ease;\n+\n+  &:hover {\n+    background-color: #0056b3;\n+  }\n+\n+  &:disabled {\n+    background-color: #6c757d;\n+    cursor: not-allowed;\n+  }\n `;\n \n-const SectionTitle = styled.h2`\n-  font-size: ${AppTextStyles.title3.fontSize};\n-  font-weight: 600;\n-  color: ${AppColors.onSurface};\n-  margin-bottom: 16px;\n+const EditorContainer = styled.div`\n+  background-color: transparent;\n+  border-radius: 8px;\n+  min-height: 600px;\n+  border: 1px solid #ddd;\n+  padding: 20px;\n `;\n \n-const SectionContent = styled.p`\n-  font-size: ${AppTextStyles.body1.fontSize};\n-  color: ${AppColors.onSurface};\n-  line-height: 1.6;\n-  margin-bottom: 12px;\n+const LoadingMessage = styled.div`\n+  text-align: center;\n+  padding: 20px;\n+  color: #6c757d;\n+  font-size: 16px;\n `;\n \n const PrivacyPolicy: React.FC = () => {\n+  const [content, setContent] = useState<string>(\"\");\n+  const [currentDocument, setCurrentDocument] = useState<TermsDocument | null>(null);\n+  const [isLoading, setIsLoading] = useState<boolean>(false);\n+\n+  // 문서 로딩\n+  const loadDocument = useCallback(async () => {\n+    try {\n+      setIsLoading(true);\n+      const activeDoc = await dbManager.getActiveTermsDocument('privacy_policy');\n+      if (activeDoc) {\n+        setCurrentDocument(activeDoc);\n+        setContent(activeDoc.content);\n+        devLog(\"개인정보 처리방침 문서 로딩:\", activeDoc);\n+      } else {\n+        setCurrentDocument(null);\n+        setContent(\"\");\n+        devLog(\"새 개인정보 처리방침 문서 생성 준비\");\n+      }\n+    } catch (err: any) {\n+      devLog(\"개인정보 처리방침 문서 로딩 실패:\", err);\n+      toast.error(\"문서를 불러오는데 실패했습니다.\");\n+    } finally {\n+      setIsLoading(false);\n+    }\n+  }, []);\n+\n+  // 문서 저장\n+  const handleSave = async () => {\n+    if (!content.trim()) {\n+      toast.error(\"문서 내용을 입력해주세요.\");\n+      return;\n+    }\n+\n+    try {\n+      setIsLoading(true);\n+      \n+      if (currentDocument) {\n+        // 기존 문서 수정\n+        const updatedDoc = await dbManager.updateTermsDocument(currentDocument.id, {\n+          title: \"개인정보 처리방침\",\n+          content: content.trim(),\n+          isActive: true\n+        });\n+\n+        if (updatedDoc) {\n+          setCurrentDocument(updatedDoc);\n+          toast.success(\"개인정보 처리방침이 성공적으로 수정되었습니다!\");\n+        }\n+      } else {\n+        // 새 문서 생성\n+        const newDoc = await dbManager.addTermsDocument({\n+          type: 'privacy_policy',\n+          title: \"개인정보 처리방침\",\n+          content: content.trim(),\n+          isActive: true\n+        });\n+\n+        setCurrentDocument(newDoc);\n+        toast.success(\"개인정보 처리방침이 성공적으로 저장되었습니다!\");\n+      }\n+\n+      await loadDocument();\n+    } catch (err: any) {\n+      devLog(\"개인정보 처리방침 저장 실패:\", err);\n+      toast.error(`문서 저장에 실패했습니다: ${err.message}`);\n+    } finally {\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  // 에디터 내용 업데이트\n+  const handleEditorUpdate = (newContent: string) => {\n+    setContent(newContent);\n+  };\n+\n+  useEffect(() => {\n+    loadDocument();\n+  }, [loadDocument]);\n+\n   return (\n     <Container>\n       <Title>개인정보 처리방침</Title>\n-      <Content>\n-        <Section>\n-          <SectionTitle>1. 개인정보 수집 목적</SectionTitle>\n-          <SectionContent>\n-            라비다는 다음과 같은 목적으로 개인정보를 수집하고 있습니다:\n-          </SectionContent>\n-          <SectionContent>\n-            - 서비스 제공 및 회원 관리\n-            - 프로그램 예약 및 관리\n-            - 고객 상담 및 불만 처리\n-            - 마케팅 및 광고 활용\n-          </SectionContent>\n-        </Section>\n \n-        <Section>\n-          <SectionTitle>2. 수집하는 개인정보 항목</SectionTitle>\n-          <SectionContent>\n-            - 필수항목: 이름, 연락처, 이메일 주소\n-            - 선택항목: 생년월일, 주소, 건강 정보\n-          </SectionContent>\n-        </Section>\n+      {/* 저장 버튼 */}\n+      <ButtonContainer>\n+        <SaveButton \n+          onClick={handleSave} \n+          disabled={isLoading}\n+        >\n+          {isLoading ? \"저장 중...\" : \"저장하기\"}\n+        </SaveButton>\n+      </ButtonContainer>\n \n-        <Section>\n-          <SectionTitle>3. 개인정보 보유 및 이용기간</SectionTitle>\n-          <SectionContent>\n-            개인정보는 수집 목적 달성 시까지 보유하며, 관련 법령에 따라 일정 기간 보관할 수 있습니다.\n-          </SectionContent>\n-        </Section>\n-\n-        <Section>\n-          <SectionTitle>4. 개인정보 제3자 제공</SectionTitle>\n-          <SectionContent>\n-            회사는 원칙적으로 이용자의 개인정보를 제3자에게 제공하지 않습니다.\n-          </SectionContent>\n-        </Section>\n-      </Content>\n+      {/* 에디터 */}\n+      <EditorContainer>\n+        {isLoading ? (\n+          <LoadingMessage>로딩 중...</LoadingMessage>\n+        ) : (\n+          <CustomTiptapEditor\n+            enableImageUpload={false}\n+            key={`privacy-policy-${currentDocument?.id || 'new'}`}\n+            initialContent={content}\n+            onEditorUpdate={handleEditorUpdate}\n+            height={600}\n+          />\n+        )}\n+      </EditorContainer>\n     </Container>\n   );\n };\n \n"
                },
                {
                    "date": 1761911068632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n   // 문서 로딩\n   const loadDocument = useCallback(async () => {\n     try {\n       setIsLoading(true);\n-      const activeDoc = await dbManager.getActiveTermsDocument('privacy_policy');\n+      const activeDoc = await dbManager.terms.getActiveTermsDocument('privacy_policy');\n       if (activeDoc) {\n         setCurrentDocument(activeDoc);\n         setContent(activeDoc.content);\n         devLog(\"개인정보 처리방침 문서 로딩:\", activeDoc);\n@@ -102,9 +102,9 @@\n       setIsLoading(true);\n       \n       if (currentDocument) {\n         // 기존 문서 수정\n-        const updatedDoc = await dbManager.updateTermsDocument(currentDocument.id, {\n+        const updatedDoc = await dbManager.terms.updateTermsDocument(currentDocument.id, {\n           title: \"개인정보 처리방침\",\n           content: content.trim(),\n           isActive: true\n         });\n@@ -114,9 +114,9 @@\n           toast.success(\"개인정보 처리방침이 성공적으로 수정되었습니다!\");\n         }\n       } else {\n         // 새 문서 생성\n-        const newDoc = await dbManager.addTermsDocument({\n+        const newDoc = await dbManager.terms.addTermsDocument({\n           type: 'privacy_policy',\n           title: \"개인정보 처리방침\",\n           content: content.trim(),\n           isActive: true\n"
                }
            ],
            "date": 1760163881524,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport styled from 'styled-components';\nimport { AppColors } from '../../../styles/colors';\nimport { AppTextStyles } from '../../../styles/textStyles';\n\nconst Container = styled.div`\n  padding: 24px;\n  background-color: ${AppColors.surface};\n  min-height: 100vh;\n`;\n\nconst Title = styled.h1`\n  font-size: ${AppTextStyles.title1.fontSize};\n  font-weight: 700;\n  color: ${AppColors.onSurface};\n  margin-bottom: 24px;\n`;\n\nconst Content = styled.div`\n  background-color: ${AppColors.background};\n  padding: 32px;\n  border-radius: 12px;\n  border: 1px solid ${AppColors.borderLight};\n`;\n\nconst Section = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: ${AppTextStyles.title3.fontSize};\n  font-weight: 600;\n  color: ${AppColors.onSurface};\n  margin-bottom: 16px;\n`;\n\nconst SectionContent = styled.p`\n  font-size: ${AppTextStyles.body1.fontSize};\n  color: ${AppColors.onSurface};\n  line-height: 1.6;\n  margin-bottom: 12px;\n`;\n\nconst PrivacyPolicy: React.FC = () => {\n  return (\n    <Container>\n      <Title>개인정보 처리방침</Title>\n      <Content>\n        <Section>\n          <SectionTitle>1. 개인정보 수집 목적</SectionTitle>\n          <SectionContent>\n            라비다는 다음과 같은 목적으로 개인정보를 수집하고 있습니다:\n          </SectionContent>\n          <SectionContent>\n            - 서비스 제공 및 회원 관리\n            - 프로그램 예약 및 관리\n            - 고객 상담 및 불만 처리\n            - 마케팅 및 광고 활용\n          </SectionContent>\n        </Section>\n\n        <Section>\n          <SectionTitle>2. 수집하는 개인정보 항목</SectionTitle>\n          <SectionContent>\n            - 필수항목: 이름, 연락처, 이메일 주소\n            - 선택항목: 생년월일, 주소, 건강 정보\n          </SectionContent>\n        </Section>\n\n        <Section>\n          <SectionTitle>3. 개인정보 보유 및 이용기간</SectionTitle>\n          <SectionContent>\n            개인정보는 수집 목적 달성 시까지 보유하며, 관련 법령에 따라 일정 기간 보관할 수 있습니다.\n          </SectionContent>\n        </Section>\n\n        <Section>\n          <SectionTitle>4. 개인정보 제3자 제공</SectionTitle>\n          <SectionContent>\n            회사는 원칙적으로 이용자의 개인정보를 제3자에게 제공하지 않습니다.\n          </SectionContent>\n        </Section>\n      </Content>\n    </Container>\n  );\n};\n\nexport default PrivacyPolicy;\n"
        }
    ]
}