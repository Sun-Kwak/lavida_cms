{
    "sourceFile": "src/utils/db/types.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1761368450126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1761371973301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,352 @@\n+/**\n+ * IndexedDB 관련 타입 정의\n+ */\n+\n+// 기본 레코드 인터페이스\n+export interface DBRecord {\n+  id: string;\n+  createdAt: Date;\n+  updatedAt: Date;\n+}\n+\n+// 지점 인터페이스\n+export interface Branch extends DBRecord {\n+  name: string;\n+  address?: string;\n+  phone?: string;\n+  isActive: boolean;\n+}\n+\n+// 앱 설정 인터페이스\n+export interface AppSettings extends DBRecord {\n+  key: string;\n+  value: string;\n+}\n+\n+// 직원 인터페이스\n+export interface Staff extends DBRecord {\n+  name: string;\n+  loginId: string; // 로그인 ID\n+  password: string; // 비밀번호\n+  phone: string;\n+  email: string;\n+  branchId: string;\n+  position: string; // 직급\n+  role: string; // 직책\n+  employmentType: string; // 고용형태\n+  permission: string; // 권한\n+  program?: string; // 담당프로그램 (코치일 경우만)\n+  contractStartDate: Date;\n+  contractEndDate?: Date | null; // 계약종료일 (정규직은 없을 수 있음)\n+  contractFile?: File | null; // 계약서 파일\n+  contractFileName?: string; // 계약서 파일명 저장용\n+  contractFileData?: ArrayBuffer; // 계약서 파일 데이터 저장용\n+  workingHours?: {\n+    start: number; // 기본 근무 시작 시간 (시)\n+    end: number; // 기본 근무 종료 시간 (시)\n+  };\n+  isActive: boolean; // 활성/비활성 상태\n+}\n+\n+// 프로그램 인터페이스\n+export interface Program extends DBRecord {\n+  name: string;\n+  type: string; // '횟수제' | '기간제'\n+  isActive: boolean;\n+}\n+\n+// 상품 인터페이스\n+export interface Product extends DBRecord {\n+  name: string;\n+  branchId: string;\n+  programId: string;\n+  programName: string; // 프로그램명 저장 (조회 성능 향상)\n+  programType: string; // 프로그램 종류 저장 (조회 성능 향상)\n+  sessions?: number; // 횟수 (횟수제인 경우에만 필요)\n+  duration?: number; // 소요시간 (분 단위, 횟수제인 경우에만 필요)\n+  price?: number; // 가격\n+  description?: string; // 상품소개\n+  isActive: boolean;\n+}\n+\n+// 휴일 설정 인터페이스\n+export interface HolidaySettings extends DBRecord {\n+  staffId: string;\n+  date: string; // YYYY-MM-DD 형식\n+  isHoliday: boolean; // true: 휴일, false: 근무일\n+  workingHours?: {\n+    start: number;\n+    end: number;\n+  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n+}\n+\n+// 약관 문서 인터페이스\n+export interface TermsDocument extends DBRecord {\n+  type: 'privacy_policy' | 'terms_of_service' | 'business_info' | 'marketing_consent' | 'member_terms' | 'contract';\n+  title: string;\n+  content: string;\n+  version: number; // 버전 관리\n+  isActive: boolean;\n+  publishedAt?: Date | null; // 발행일\n+}\n+\n+// 회원 인터페이스\n+export interface Member extends DBRecord {\n+  name: string;\n+  phone: string;\n+  email: string;\n+  birth: string;\n+  gender: 'male' | 'female' | '';\n+  address: string;\n+  sigunguCode: string;\n+  dong: string;\n+  roadAddress: string;\n+  jibunAddress: string;\n+  branchId: string;\n+  branchName: string; // 조회 성능을 위해 저장\n+  coach: string; // 담당 코치 ID\n+  coachName: string; // 조회 성능을 위해 저장\n+  joinPath: string;\n+  loginId: string; // 로그인 ID (공란일 때는 임시값 생성)\n+  loginPassword: string | null; // 로그인 비밀번호 (공란 가능)\n+  enableLogin: boolean;\n+  agreementInfo: {\n+    agreements: Array<{\n+      id: string;\n+      title: string;\n+      content: string;\n+      required: boolean;\n+      agreed: boolean;\n+    }>;\n+    customerSignature: string;\n+    staffSignature: string;\n+  };\n+  isActive: boolean;\n+  registrationDate: string; // 회원가입일\n+  remarks?: string; // 비고\n+}\n+\n+// 결제 인터페이스\n+export interface Payment extends DBRecord {\n+  orderId?: string;           // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  branchId: string;\n+  branchName: string; // 지점명\n+  coach: string; // 담당 코치 ID\n+  coachName: string; // 담당 코치명\n+  products: Array<{\n+    id: string;\n+    name: string;\n+    price: number;\n+    quantity: number;\n+    programId?: string;\n+    programName?: string;\n+    programType?: string;\n+    description?: string;\n+  }>;\n+  totalAmount: number; // 총 결제 예정 금액\n+  paidAmount: number; // 실제 결제된 금액\n+  unpaidAmount: number; // 미결제 금액 (totalAmount - paidAmount)\n+  paymentStatus: 'pending' | 'completed' | 'cancelled' | 'refunded' | 'unpaid';\n+  paymentMethod?: string;\n+  paymentDate?: Date | null;\n+  // 결제 타입 및 연결 정보 추가\n+  paymentType: 'course' | 'asset' | 'other'; // 수강 결제 | 자산 결제 | 기타\n+  relatedCourseId?: string | null; // 연결된 수강 이력 ID\n+  relatedAssetId?: string | null; // 연결된 자산 ID (향후 사용)\n+  memo?: string; // 메모\n+  \n+  // 새로운 필드 추가\n+  amount?: number;            // 해당 결제수단으로 결제한 금액 (개별 결제 기록용)\n+  paymentReference?: string;  // 결제 참조번호 (카드 승인번호 등)\n+}\n+\n+// 포인트 인터페이스 (기존 시스템 호환용)\n+export interface Point extends DBRecord {\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  amount: number; // 포인트 금액 (양수: 적립, 음수: 사용)\n+  type: 'earned' | 'used' | 'expired' | 'adjusted'; // 적립, 사용, 만료, 조정\n+  source: string; // 포인트 발생 출처 (예: '회원등록 초과금', '상품구매', '포인트사용' 등)\n+  description?: string; // 상세 설명\n+  expiryDate?: Date | null; // 만료일 (적립된 포인트의 경우)\n+  relatedPaymentId?: string; // 연관된 결제 ID (있는 경우)\n+}\n+\n+// 수강 등록 인터페이스\n+export interface CourseEnrollment extends DBRecord {\n+  orderId?: string; // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  productId: string;\n+  productName: string; // 상품명\n+  productPrice: number; // 상품 가격\n+  programId: string;\n+  programName: string; // 프로그램명\n+  programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n+  branchId: string;\n+  branchName: string; // 지점명\n+  coach: string; // 담당 코치 ID\n+  coachName: string; // 담당 코치명\n+  enrollmentStatus: 'active' | 'completed' | 'suspended' | 'cancelled' | 'unpaid'; // 수강 상태 확장\n+  paidAmount: number; // 실제 지불한 금액\n+  unpaidAmount: number; // 미납 금액 (productPrice - paidAmount)\n+  startDate?: Date | null; // 수강 시작일\n+  endDate?: Date | null; // 수강 종료일 (기간제인 경우)\n+  sessionCount?: number; // 총 수업 횟수 (횟수제인 경우)\n+  completedSessions?: number; // 완료된 수업 횟수 (횟수제인 경우, 기본값 0)\n+  notes?: string; // 비고\n+  relatedPaymentId?: string; // 연관된 결제 ID (기존 호환성)\n+}\n+\n+// ==================== 새로운 개선된 스키마 ====================\n+\n+// 주문 인터페이스\n+export interface Order extends DBRecord {\n+  memberId: string;\n+  memberName: string;\n+  branchId: string;\n+  branchName: string;\n+  coach: string;\n+  coachName: string;\n+  \n+  // 주문 상품 정보\n+  orderItems: Array<{\n+    productId: string;\n+    productName: string;\n+    programId: string;\n+    programName: string;\n+    programType: string;\n+    price: number;\n+    quantity: number;\n+  }>;\n+  \n+  // 금액 정보\n+  totalAmount: number;        // 총 주문 금액\n+  paidAmount: number;         // 총 지불 금액\n+  unpaidAmount: number;       // 총 미수 금액\n+  pointsUsed: number;         // 사용된 포인트\n+  pointsEarned: number;       // 적립된 포인트 (초과금)\n+  \n+  // 상태 정보\n+  orderStatus: 'pending' | 'completed' | 'partially_paid' | 'cancelled';\n+  orderType: 'registration' | 'course_enrollment' | 'product_purchase';\n+  \n+  memo?: string;\n+}\n+\n+// 포인트 거래 관련 상품 정보\n+export interface PointTransactionProduct {\n+  productId: string;\n+  productName: string;\n+  productPrice: number;\n+  courseId?: string;          // 연결된 수강 ID (상품 구매 시 생성됨)\n+  courseName?: string;        // 수강명\n+}\n+\n+// 포인트 거래 인터페이스 (개선된 시스템)\n+export interface PointTransaction extends DBRecord {\n+  memberId: string;\n+  memberName: string;\n+  \n+  // 거래 정보\n+  amount: number;             // 포인트 금액 (+ 적립, - 사용)\n+  balance: number;            // 거래 후 잔액 (성능 최적화)\n+  transactionType: 'earn' | 'use' | 'expire' | 'adjust' | 'refund';\n+  \n+  // 관련 정보\n+  relatedOrderId?: string;    // 관련 주문 ID\n+  relatedPaymentId?: string;  // 관련 결제 ID (기존 호환성)\n+  \n+  // 추적 정보 강화\n+  products?: PointTransactionProduct[];  // 관련 상품 정보 (복수 가능)\n+  branchId?: string;          // 지점 정보\n+  branchName?: string;        // 지점명\n+  staffId?: string;           // 담당 직원 ID\n+  staffName?: string;         // 담당 직원명\n+  \n+  // 포인트 정책\n+  earnedDate?: Date;          // 적립일 (사용/만료 추적용)\n+  expiryDate?: Date;          // 만료일\n+  isExpired: boolean;         // 만료 여부\n+  \n+  source: string;             // 포인트 발생 출처\n+  description?: string;\n+  \n+  // FIFO 처리를 위한 추가 필드\n+  originalTransactionId?: string; // 원본 적립 거래 ID (사용/만료 시)\n+}\n+\n+// 포인트 잔액 인터페이스 (성능 최적화용)\n+export interface PointBalance extends DBRecord {\n+  memberId: string;\n+  \n+  // 실시간 잔액 정보\n+  totalBalance: number;       // 총 사용가능 포인트\n+  earnedPoints: number;       // 총 적립 포인트\n+  usedPoints: number;         // 총 사용 포인트\n+  expiredPoints: number;      // 총 만료 포인트\n+  \n+  // 만료 예정 포인트 (성능 최적화)\n+  expiringIn30Days: number;   // 30일 내 만료 예정\n+  expiringIn7Days: number;    // 7일 내 만료 예정\n+  \n+  lastUpdated: Date;          // 마지막 업데이트 시간\n+}\n+\n+// 중복 체크 결과 타입\n+export interface DuplicateCheckResult {\n+  isDuplicate: boolean;\n+  duplicateField?: string;\n+  message?: string;\n+}\n+\n+// 로그인 ID 중복 체크 결과 타입\n+export interface LoginIdDuplicateCheckResult {\n+  isDuplicate: boolean;\n+  duplicateType?: 'staff' | 'member';\n+  message?: string;\n+}\n+\n+// 포인트 통계 타입\n+export interface PointStats {\n+  totalEarned: number;\n+  totalUsed: number;\n+  totalExpired: number;\n+  currentBalance: number;\n+  transactionCount: number;\n+}\n+\n+// 미수 메타 정보 타입\n+export interface UnpaidMetaInfo {\n+  unpaidMemberCount: number;\n+  totalUnpaidAmount: number;\n+}\n+\n+// 주문 처리 데이터 타입\n+export interface OrderProcessingData {\n+  memberInfo: {\n+    id: string;\n+    name: string;\n+    branchId: string;\n+    branchName: string;\n+    coach: string;\n+    coachName: string;\n+  };\n+  products: Array<{\n+    id: string;\n+    name: string;\n+    price: number;\n+    programId: string;\n+    programName: string;\n+    programType: string;\n+  }>;\n+  payments: {\n+    cash: number;\n+    card: number;\n+    transfer: number;\n+    points: number;\n+  };\n+  orderType: 'registration' | 'course_enrollment';\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761376552502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n   name: string;\n   address?: string;\n   phone?: string;\n   isActive: boolean;\n+  lockerPrice?: number; // 지점별 라커 가격 (기본값: 5000원)\n }\n \n // 앱 설정 인터페이스\n export interface AppSettings extends DBRecord {\n@@ -348,341 +349,5 @@\n     transfer: number;\n     points: number;\n   };\n   orderType: 'registration' | 'course_enrollment';\n-}\n-/**\n- * IndexedDB 관련 타입 정의\n- */\n-\n-// 기본 레코드 인터페이스\n-export interface DBRecord {\n-  id: string;\n-  createdAt: Date;\n-  updatedAt: Date;\n-}\n-\n-// 지점 인터페이스\n-export interface Branch extends DBRecord {\n-  name: string;\n-  address?: string;\n-  phone?: string;\n-  isActive: boolean;\n-}\n-\n-// 앱 설정 인터페이스\n-export interface AppSettings extends DBRecord {\n-  key: string;\n-  value: string;\n-}\n-\n-// 직원 인터페이스\n-export interface Staff extends DBRecord {\n-  name: string;\n-  loginId: string; // 로그인 ID\n-  password: string; // 비밀번호\n-  phone: string;\n-  email: string;\n-  branchId: string;\n-  position: string; // 직급\n-  role: string; // 직책\n-  employmentType: string; // 고용형태\n-  permission: string; // 권한\n-  program?: string; // 담당프로그램 (코치일 경우만)\n-  contractStartDate: Date;\n-  contractEndDate?: Date | null; // 계약종료일 (정규직은 없을 수 있음)\n-  contractFile?: File | null; // 계약서 파일\n-  contractFileName?: string; // 계약서 파일명 저장용\n-  contractFileData?: ArrayBuffer; // 계약서 파일 데이터 저장용\n-  workingHours?: {\n-    start: number; // 기본 근무 시작 시간 (시)\n-    end: number; // 기본 근무 종료 시간 (시)\n-  };\n-  isActive: boolean; // 활성/비활성 상태\n-}\n-\n-// 프로그램 인터페이스\n-export interface Program extends DBRecord {\n-  name: string;\n-  type: string; // '횟수제' | '기간제'\n-  isActive: boolean;\n-}\n-\n-// 상품 인터페이스\n-export interface Product extends DBRecord {\n-  name: string;\n-  branchId: string;\n-  programId: string;\n-  programName: string; // 프로그램명 저장 (조회 성능 향상)\n-  programType: string; // 프로그램 종류 저장 (조회 성능 향상)\n-  sessions?: number; // 횟수 (횟수제인 경우에만 필요)\n-  duration?: number; // 소요시간 (분 단위, 횟수제인 경우에만 필요)\n-  price?: number; // 가격\n-  description?: string; // 상품소개\n-  isActive: boolean;\n-}\n-\n-// 휴일 설정 인터페이스\n-export interface HolidaySettings extends DBRecord {\n-  staffId: string;\n-  date: string; // YYYY-MM-DD 형식\n-  isHoliday: boolean; // true: 휴일, false: 근무일\n-  workingHours?: {\n-    start: number;\n-    end: number;\n-  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n-}\n-\n-// 약관 문서 인터페이스\n-export interface TermsDocument extends DBRecord {\n-  type: 'privacy_policy' | 'terms_of_service' | 'business_info' | 'marketing_consent' | 'member_terms' | 'contract';\n-  title: string;\n-  content: string;\n-  version: number; // 버전 관리\n-  isActive: boolean;\n-  publishedAt?: Date | null; // 발행일\n-}\n-\n-// 회원 인터페이스\n-export interface Member extends DBRecord {\n-  name: string;\n-  phone: string;\n-  email: string;\n-  birth: string;\n-  gender: 'male' | 'female' | '';\n-  address: string;\n-  sigunguCode: string;\n-  dong: string;\n-  roadAddress: string;\n-  jibunAddress: string;\n-  branchId: string;\n-  branchName: string; // 조회 성능을 위해 저장\n-  coach: string; // 담당 코치 ID\n-  coachName: string; // 조회 성능을 위해 저장\n-  joinPath: string;\n-  loginId: string; // 로그인 ID (공란일 때는 임시값 생성)\n-  loginPassword: string | null; // 로그인 비밀번호 (공란 가능)\n-  enableLogin: boolean;\n-  agreementInfo: {\n-    agreements: Array<{\n-      id: string;\n-      title: string;\n-      content: string;\n-      required: boolean;\n-      agreed: boolean;\n-    }>;\n-    customerSignature: string;\n-    staffSignature: string;\n-  };\n-  isActive: boolean;\n-  registrationDate: string; // 회원가입일\n-  remarks?: string; // 비고\n-}\n-\n-// 결제 인터페이스\n-export interface Payment extends DBRecord {\n-  orderId?: string;           // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n-  memberId: string;\n-  memberName: string; // 조회 성능을 위해 저장\n-  branchId: string;\n-  branchName: string; // 지점명\n-  coach: string; // 담당 코치 ID\n-  coachName: string; // 담당 코치명\n-  products: Array<{\n-    id: string;\n-    name: string;\n-    price: number;\n-    quantity: number;\n-    programId?: string;\n-    programName?: string;\n-    programType?: string;\n-    description?: string;\n-  }>;\n-  totalAmount: number; // 총 결제 예정 금액\n-  paidAmount: number; // 실제 결제된 금액\n-  unpaidAmount: number; // 미결제 금액 (totalAmount - paidAmount)\n-  paymentStatus: 'pending' | 'completed' | 'cancelled' | 'refunded' | 'unpaid';\n-  paymentMethod?: string;\n-  paymentDate?: Date | null;\n-  // 결제 타입 및 연결 정보 추가\n-  paymentType: 'course' | 'asset' | 'other'; // 수강 결제 | 자산 결제 | 기타\n-  relatedCourseId?: string | null; // 연결된 수강 이력 ID\n-  relatedAssetId?: string | null; // 연결된 자산 ID (향후 사용)\n-  memo?: string; // 메모\n-  \n-  // 새로운 필드 추가\n-  amount?: number;            // 해당 결제수단으로 결제한 금액 (개별 결제 기록용)\n-  paymentReference?: string;  // 결제 참조번호 (카드 승인번호 등)\n-}\n-\n-// 포인트 인터페이스 (기존 시스템 호환용)\n-export interface Point extends DBRecord {\n-  memberId: string;\n-  memberName: string; // 조회 성능을 위해 저장\n-  amount: number; // 포인트 금액 (양수: 적립, 음수: 사용)\n-  type: 'earned' | 'used' | 'expired' | 'adjusted'; // 적립, 사용, 만료, 조정\n-  source: string; // 포인트 발생 출처 (예: '회원등록 초과금', '상품구매', '포인트사용' 등)\n-  description?: string; // 상세 설명\n-  expiryDate?: Date | null; // 만료일 (적립된 포인트의 경우)\n-  relatedPaymentId?: string; // 연관된 결제 ID (있는 경우)\n-}\n-\n-// 수강 등록 인터페이스\n-export interface CourseEnrollment extends DBRecord {\n-  orderId?: string; // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n-  memberId: string;\n-  memberName: string; // 조회 성능을 위해 저장\n-  productId: string;\n-  productName: string; // 상품명\n-  productPrice: number; // 상품 가격\n-  programId: string;\n-  programName: string; // 프로그램명\n-  programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n-  branchId: string;\n-  branchName: string; // 지점명\n-  coach: string; // 담당 코치 ID\n-  coachName: string; // 담당 코치명\n-  enrollmentStatus: 'active' | 'completed' | 'suspended' | 'cancelled' | 'unpaid'; // 수강 상태 확장\n-  paidAmount: number; // 실제 지불한 금액\n-  unpaidAmount: number; // 미납 금액 (productPrice - paidAmount)\n-  startDate?: Date | null; // 수강 시작일\n-  endDate?: Date | null; // 수강 종료일 (기간제인 경우)\n-  sessionCount?: number; // 총 수업 횟수 (횟수제인 경우)\n-  completedSessions?: number; // 완료된 수업 횟수 (횟수제인 경우, 기본값 0)\n-  notes?: string; // 비고\n-  relatedPaymentId?: string; // 연관된 결제 ID (기존 호환성)\n-}\n-\n-// ==================== 새로운 개선된 스키마 ====================\n-\n-// 주문 인터페이스\n-export interface Order extends DBRecord {\n-  memberId: string;\n-  memberName: string;\n-  branchId: string;\n-  branchName: string;\n-  coach: string;\n-  coachName: string;\n-  \n-  // 주문 상품 정보\n-  orderItems: Array<{\n-    productId: string;\n-    productName: string;\n-    programId: string;\n-    programName: string;\n-    programType: string;\n-    price: number;\n-    quantity: number;\n-  }>;\n-  \n-  // 금액 정보\n-  totalAmount: number;        // 총 주문 금액\n-  paidAmount: number;         // 총 지불 금액\n-  unpaidAmount: number;       // 총 미수 금액\n-  pointsUsed: number;         // 사용된 포인트\n-  pointsEarned: number;       // 적립된 포인트 (초과금)\n-  \n-  // 상태 정보\n-  orderStatus: 'pending' | 'completed' | 'partially_paid' | 'cancelled';\n-  orderType: 'registration' | 'course_enrollment' | 'product_purchase';\n-  \n-  memo?: string;\n-}\n-\n-// 포인트 거래 인터페이스 (개선된 시스템)\n-export interface PointTransaction extends DBRecord {\n-  memberId: string;\n-  memberName: string;\n-  \n-  // 거래 정보\n-  amount: number;             // 포인트 금액 (+ 적립, - 사용)\n-  balance: number;            // 거래 후 잔액 (성능 최적화)\n-  transactionType: 'earn' | 'use' | 'expire' | 'adjust' | 'refund';\n-  \n-  // 관련 정보\n-  relatedOrderId?: string;    // 관련 주문 ID\n-  relatedPaymentId?: string;  // 관련 결제 ID (기존 호환성)\n-  \n-  // 포인트 정책\n-  earnedDate?: Date;          // 적립일 (사용/만료 추적용)\n-  expiryDate?: Date;          // 만료일\n-  isExpired: boolean;         // 만료 여부\n-  \n-  source: string;             // 포인트 발생 출처\n-  description?: string;\n-  \n-  // FIFO 처리를 위한 추가 필드\n-  originalTransactionId?: string; // 원본 적립 거래 ID (사용/만료 시)\n-}\n-\n-// 포인트 잔액 인터페이스 (성능 최적화용)\n-export interface PointBalance extends DBRecord {\n-  memberId: string;\n-  \n-  // 실시간 잔액 정보\n-  totalBalance: number;       // 총 사용가능 포인트\n-  earnedPoints: number;       // 총 적립 포인트\n-  usedPoints: number;         // 총 사용 포인트\n-  expiredPoints: number;      // 총 만료 포인트\n-  \n-  // 만료 예정 포인트 (성능 최적화)\n-  expiringIn30Days: number;   // 30일 내 만료 예정\n-  expiringIn7Days: number;    // 7일 내 만료 예정\n-  \n-  lastUpdated: Date;          // 마지막 업데이트 시간\n-}\n-\n-// 중복 체크 결과 타입\n-export interface DuplicateCheckResult {\n-  isDuplicate: boolean;\n-  duplicateField?: string;\n-  message?: string;\n-}\n-\n-// 로그인 ID 중복 체크 결과 타입\n-export interface LoginIdDuplicateCheckResult {\n-  isDuplicate: boolean;\n-  duplicateType?: 'staff' | 'member';\n-  message?: string;\n-}\n-\n-// 포인트 통계 타입\n-export interface PointStats {\n-  totalEarned: number;\n-  totalUsed: number;\n-  totalExpired: number;\n-  currentBalance: number;\n-  transactionCount: number;\n-}\n-\n-// 미수 메타 정보 타입\n-export interface UnpaidMetaInfo {\n-  unpaidMemberCount: number;\n-  totalUnpaidAmount: number;\n-}\n-\n-// 주문 처리 데이터 타입\n-export interface OrderProcessingData {\n-  memberInfo: {\n-    id: string;\n-    name: string;\n-    branchId: string;\n-    branchName: string;\n-    coach: string;\n-    coachName: string;\n-  };\n-  products: Array<{\n-    id: string;\n-    name: string;\n-    price: number;\n-    programId: string;\n-    programName: string;\n-    programType: string;\n-  }>;\n-  payments: {\n-    cash: number;\n-    card: number;\n-    transfer: number;\n-    points: number;\n-  };\n-  orderType: 'registration' | 'course_enrollment';\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761377685349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,23 @@\n   };\n   isActive: boolean; // 활성/비활성 상태\n }\n \n+// 라커 인터페이스\n+export interface Locker extends DBRecord {\n+  number: string;\n+  status: 'available' | 'occupied' | 'maintenance' | 'pending';\n+  branchId: string;\n+  branchName: string; // 조회 성능을 위해 저장\n+  userId?: string; // 사용자 ID\n+  userName?: string; // 사용자 이름\n+  startDate?: string; // 사용 시작일 (YYYY-MM-DD)\n+  endDate?: string; // 사용 종료일 (YYYY-MM-DD)\n+  paymentId?: string; // 관련 결제 ID\n+  months?: number; // 사용 기간 (개월)\n+  isActive: boolean;\n+}\n+\n // 프로그램 인터페이스\n export interface Program extends DBRecord {\n   name: string;\n   type: string; // '횟수제' | '기간제'\n"
                },
                {
                    "date": 1761378612658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,18 @@\n   };\n   isActive: boolean;\n   registrationDate: string; // 회원가입일\n   remarks?: string; // 비고\n+  \n+  // 라커 정보 (배정된 경우만)\n+  lockerInfo?: {\n+    lockerId: string;\n+    lockerNumber: string;\n+    startDate: string; // YYYY-MM-DD\n+    endDate: string; // YYYY-MM-DD\n+    months: number;\n+    paymentId?: string;\n+  } | null;\n }\n \n // 결제 인터페이스\n export interface Payment extends DBRecord {\n"
                },
                {
                    "date": 1761451696459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n   description?: string; // 상품소개\n   isActive: boolean;\n }\n \n-// 휴일 설정 인터페이스\n+// 기존 휴일 설정 인터페이스 (호환성 유지)\n export interface HolidaySettings extends DBRecord {\n   staffId: string;\n   date: string; // YYYY-MM-DD 형식\n   isHoliday: boolean; // true: 휴일, false: 근무일\n@@ -95,8 +95,27 @@\n     end: number;\n   }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n }\n \n+// 새로운 주별 휴일 설정 인터페이스\n+export interface WeeklyHolidaySettings extends DBRecord {\n+  staffId: string;\n+  weekStartDate: string; // 해당 주의 월요일 날짜 (YYYY-MM-DD 형식)\n+  weekDays: {\n+    monday: boolean;    // true: 휴일, false: 근무일\n+    tuesday: boolean;\n+    wednesday: boolean;\n+    thursday: boolean;\n+    friday: boolean;\n+    saturday: boolean;\n+    sunday: boolean;\n+  };\n+  workingHours?: {\n+    start: number;\n+    end: number;\n+  }; // 근무일의 기본 근무시간\n+}\n+\n // 약관 문서 인터페이스\n export interface TermsDocument extends DBRecord {\n   type: 'privacy_policy' | 'terms_of_service' | 'business_info' | 'marketing_consent' | 'member_terms' | 'contract';\n   title: string;\n"
                },
                {
                    "date": 1761452497195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,20 +100,93 @@\n export interface WeeklyHolidaySettings extends DBRecord {\n   staffId: string;\n   weekStartDate: string; // 해당 주의 월요일 날짜 (YYYY-MM-DD 형식)\n   weekDays: {\n-    monday: boolean;    // true: 휴일, false: 근무일\n-    tuesday: boolean;\n-    wednesday: boolean;\n-    thursday: boolean;\n-    friday: boolean;\n-    saturday: boolean;\n-    sunday: boolean;\n+    monday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;  // 시간 (예: 12시 = 12)\n+        end: number;    // 시간 (예: 13시 = 13)\n+        name?: string;  // 휴게시간 이름 (예: \"점심시간\")\n+      }>;\n+    };\n+    tuesday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    wednesday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    thursday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    friday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    saturday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    sunday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n   };\n-  workingHours?: {\n-    start: number;\n-    end: number;\n-  }; // 근무일의 기본 근무시간\n }\n \n // 약관 문서 인터페이스\n export interface TermsDocument extends DBRecord {\n"
                },
                {
                    "date": 1761455802318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -412,8 +412,29 @@\n   \n   lastUpdated: Date;          // 마지막 업데이트 시간\n }\n \n+// 스케줄 이벤트 인터페이스\n+export interface ScheduleEvent extends DBRecord {\n+  title: string;\n+  startTime: Date;\n+  endTime: Date;\n+  staffId: string;\n+  staffName: string;\n+  programId?: string;\n+  programName?: string;\n+  memberId?: string;\n+  memberName?: string;\n+  type: 'class' | 'personal' | 'meeting' | 'break' | 'holiday';\n+  color?: string;\n+  description?: string;\n+  branchId?: string;\n+  branchName?: string;\n+  recurrenceRule?: string; // RRULE for recurring events\n+  sourceType: 'manual' | 'weekly_holiday' | 'booking'; // 이벤트 생성 출처\n+  sourceId?: string; // 원본 데이터 ID (WeeklyHolidaySettings ID 등)\n+}\n+\n // 중복 체크 결과 타입\n export interface DuplicateCheckResult {\n   isDuplicate: boolean;\n   duplicateField?: string;\n"
                },
                {
                    "date": 1761457974515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,496 @@\n+/**\n+ * IndexedDB 관련 타입 정의\n+ */\n+\n+// 기본 레코드 인터페이스\n+export interface DBRecord {\n+  id: string;\n+  createdAt: Date;\n+  updatedAt: Date;\n+}\n+\n+// 지점 인터페이스\n+export interface Branch extends DBRecord {\n+  name: string;\n+  address?: string;\n+  phone?: string;\n+  isActive: boolean;\n+  lockerPrice?: number; // 지점별 라커 가격 (기본값: 5000원)\n+}\n+\n+// 앱 설정 인터페이스\n+export interface AppSettings extends DBRecord {\n+  key: string;\n+  value: string;\n+}\n+\n+// 직원 인터페이스\n+export interface Staff extends DBRecord {\n+  name: string;\n+  loginId: string; // 로그인 ID\n+  password: string; // 비밀번호\n+  phone: string;\n+  email: string;\n+  branchId: string;\n+  position: string; // 직급\n+  role: string; // 직책\n+  employmentType: string; // 고용형태\n+  permission: string; // 권한\n+  program?: string; // 담당프로그램 (코치일 경우만)\n+  contractStartDate: Date;\n+  contractEndDate?: Date | null; // 계약종료일 (정규직은 없을 수 있음)\n+  contractFile?: File | null; // 계약서 파일\n+  contractFileName?: string; // 계약서 파일명 저장용\n+  contractFileData?: ArrayBuffer; // 계약서 파일 데이터 저장용\n+  workingHours?: {\n+    start: number; // 기본 근무 시작 시간 (시)\n+    end: number; // 기본 근무 종료 시간 (시)\n+  };\n+  isActive: boolean; // 활성/비활성 상태\n+}\n+\n+// 라커 인터페이스\n+export interface Locker extends DBRecord {\n+  number: string;\n+  status: 'available' | 'occupied' | 'maintenance' | 'pending';\n+  branchId: string;\n+  branchName: string; // 조회 성능을 위해 저장\n+  userId?: string; // 사용자 ID\n+  userName?: string; // 사용자 이름\n+  startDate?: string; // 사용 시작일 (YYYY-MM-DD)\n+  endDate?: string; // 사용 종료일 (YYYY-MM-DD)\n+  paymentId?: string; // 관련 결제 ID\n+  months?: number; // 사용 기간 (개월)\n+  isActive: boolean;\n+}\n+\n+// 프로그램 인터페이스\n+export interface Program extends DBRecord {\n+  name: string;\n+  type: string; // '횟수제' | '기간제'\n+  isActive: boolean;\n+}\n+\n+// 상품 인터페이스\n+export interface Product extends DBRecord {\n+  name: string;\n+  branchId: string;\n+  programId: string;\n+  programName: string; // 프로그램명 저장 (조회 성능 향상)\n+  programType: string; // 프로그램 종류 저장 (조회 성능 향상)\n+  sessions?: number; // 횟수 (횟수제인 경우에만 필요)\n+  duration?: number; // 소요시간 (분 단위, 횟수제인 경우에만 필요)\n+  price?: number; // 가격\n+  description?: string; // 상품소개\n+  isActive: boolean;\n+}\n+\n+// 기존 휴일 설정 인터페이스 (호환성 유지)\n+export interface HolidaySettings extends DBRecord {\n+  staffId: string;\n+  date: string; // YYYY-MM-DD 형식\n+  isHoliday: boolean; // true: 휴일, false: 근무일\n+  workingHours?: {\n+    start: number;\n+    end: number;\n+  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n+}\n+\n+// 새로운 주별 휴일 설정 인터페이스\n+export interface WeeklyHolidaySettings extends DBRecord {\n+  staffId: string;\n+  weekStartDate: string; // 해당 주의 월요일 날짜 (YYYY-MM-DD 형식)\n+  weekDays: {\n+    monday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;  // 시간 (예: 12시 = 12)\n+        end: number;    // 시간 (예: 13시 = 13)\n+        name?: string;  // 휴게시간 이름 (예: \"점심시간\")\n+      }>;\n+    };\n+    tuesday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    wednesday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    thursday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    friday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    saturday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+    sunday: {\n+      isHoliday: boolean;\n+      workingHours?: {\n+        start: number;\n+        end: number;\n+      };\n+      breakTimes?: Array<{\n+        start: number;\n+        end: number;\n+        name?: string;\n+      }>;\n+    };\n+  };\n+}\n+\n+// 약관 문서 인터페이스\n+export interface TermsDocument extends DBRecord {\n+  type: 'privacy_policy' | 'terms_of_service' | 'business_info' | 'marketing_consent' | 'member_terms' | 'contract';\n+  title: string;\n+  content: string;\n+  version: number; // 버전 관리\n+  isActive: boolean;\n+  publishedAt?: Date | null; // 발행일\n+}\n+\n+// 회원 인터페이스\n+export interface Member extends DBRecord {\n+  name: string;\n+  phone: string;\n+  email: string;\n+  birth: string;\n+  gender: 'male' | 'female' | '';\n+  address: string;\n+  sigunguCode: string;\n+  dong: string;\n+  roadAddress: string;\n+  jibunAddress: string;\n+  branchId: string;\n+  branchName: string; // 조회 성능을 위해 저장\n+  coach: string; // 담당 코치 ID\n+  coachName: string; // 조회 성능을 위해 저장\n+  joinPath: string;\n+  loginId: string; // 로그인 ID (공란일 때는 임시값 생성)\n+  loginPassword: string | null; // 로그인 비밀번호 (공란 가능)\n+  enableLogin: boolean;\n+  agreementInfo: {\n+    agreements: Array<{\n+      id: string;\n+      title: string;\n+      content: string;\n+      required: boolean;\n+      agreed: boolean;\n+    }>;\n+    customerSignature: string;\n+    staffSignature: string;\n+  };\n+  isActive: boolean;\n+  registrationDate: string; // 회원가입일\n+  remarks?: string; // 비고\n+  \n+  // 라커 정보 (배정된 경우만)\n+  lockerInfo?: {\n+    lockerId: string;\n+    lockerNumber: string;\n+    startDate: string; // YYYY-MM-DD\n+    endDate: string; // YYYY-MM-DD\n+    months: number;\n+    paymentId?: string;\n+  } | null;\n+}\n+\n+// 결제 인터페이스\n+export interface Payment extends DBRecord {\n+  orderId?: string;           // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  branchId: string;\n+  branchName: string; // 지점명\n+  coach: string; // 담당 코치 ID\n+  coachName: string; // 담당 코치명\n+  products: Array<{\n+    id: string;\n+    name: string;\n+    price: number;\n+    quantity: number;\n+    programId?: string;\n+    programName?: string;\n+    programType?: string;\n+    description?: string;\n+  }>;\n+  totalAmount: number; // 총 결제 예정 금액\n+  paidAmount: number; // 실제 결제된 금액\n+  unpaidAmount: number; // 미결제 금액 (totalAmount - paidAmount)\n+  paymentStatus: 'pending' | 'completed' | 'cancelled' | 'refunded' | 'unpaid';\n+  paymentMethod?: string;\n+  paymentDate?: Date | null;\n+  // 결제 타입 및 연결 정보 추가\n+  paymentType: 'course' | 'asset' | 'other'; // 수강 결제 | 자산 결제 | 기타\n+  relatedCourseId?: string | null; // 연결된 수강 이력 ID\n+  relatedAssetId?: string | null; // 연결된 자산 ID (향후 사용)\n+  memo?: string; // 메모\n+  \n+  // 새로운 필드 추가\n+  amount?: number;            // 해당 결제수단으로 결제한 금액 (개별 결제 기록용)\n+  paymentReference?: string;  // 결제 참조번호 (카드 승인번호 등)\n+}\n+\n+// 포인트 인터페이스 (기존 시스템 호환용)\n+export interface Point extends DBRecord {\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  amount: number; // 포인트 금액 (양수: 적립, 음수: 사용)\n+  type: 'earned' | 'used' | 'expired' | 'adjusted'; // 적립, 사용, 만료, 조정\n+  source: string; // 포인트 발생 출처 (예: '회원등록 초과금', '상품구매', '포인트사용' 등)\n+  description?: string; // 상세 설명\n+  expiryDate?: Date | null; // 만료일 (적립된 포인트의 경우)\n+  relatedPaymentId?: string; // 연관된 결제 ID (있는 경우)\n+}\n+\n+// 수강 등록 인터페이스\n+export interface CourseEnrollment extends DBRecord {\n+  orderId?: string; // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  productId: string;\n+  productName: string; // 상품명\n+  productPrice: number; // 상품 가격\n+  programId: string;\n+  programName: string; // 프로그램명\n+  programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n+  branchId: string;\n+  branchName: string; // 지점명\n+  coach: string; // 담당 코치 ID\n+  coachName: string; // 담당 코치명\n+  enrollmentStatus: 'active' | 'completed' | 'suspended' | 'cancelled' | 'unpaid'; // 수강 상태 확장\n+  paidAmount: number; // 실제 지불한 금액\n+  unpaidAmount: number; // 미납 금액 (productPrice - paidAmount)\n+  startDate?: Date | null; // 수강 시작일\n+  endDate?: Date | null; // 수강 종료일 (기간제인 경우)\n+  sessionCount?: number; // 총 수업 횟수 (횟수제인 경우)\n+  completedSessions?: number; // 완료된 수업 횟수 (횟수제인 경우, 기본값 0)\n+  notes?: string; // 비고\n+  relatedPaymentId?: string; // 연관된 결제 ID (기존 호환성)\n+}\n+\n+// ==================== 새로운 개선된 스키마 ====================\n+\n+// 주문 인터페이스\n+export interface Order extends DBRecord {\n+  memberId: string;\n+  memberName: string;\n+  branchId: string;\n+  branchName: string;\n+  coach: string;\n+  coachName: string;\n+  \n+  // 주문 상품 정보\n+  orderItems: Array<{\n+    productId: string;\n+    productName: string;\n+    programId: string;\n+    programName: string;\n+    programType: string;\n+    price: number;\n+    quantity: number;\n+  }>;\n+  \n+  // 금액 정보\n+  totalAmount: number;        // 총 주문 금액\n+  paidAmount: number;         // 총 지불 금액\n+  unpaidAmount: number;       // 총 미수 금액\n+  pointsUsed: number;         // 사용된 포인트\n+  pointsEarned: number;       // 적립된 포인트 (초과금)\n+  \n+  // 상태 정보\n+  orderStatus: 'pending' | 'completed' | 'partially_paid' | 'cancelled';\n+  orderType: 'registration' | 'course_enrollment' | 'product_purchase';\n+  \n+  memo?: string;\n+}\n+\n+// 포인트 거래 관련 상품 정보\n+export interface PointTransactionProduct {\n+  productId: string;\n+  productName: string;\n+  productPrice: number;\n+  courseId?: string;          // 연결된 수강 ID (상품 구매 시 생성됨)\n+  courseName?: string;        // 수강명\n+}\n+\n+// 포인트 거래 인터페이스 (개선된 시스템)\n+export interface PointTransaction extends DBRecord {\n+  memberId: string;\n+  memberName: string;\n+  \n+  // 거래 정보\n+  amount: number;             // 포인트 금액 (+ 적립, - 사용)\n+  balance: number;            // 거래 후 잔액 (성능 최적화)\n+  transactionType: 'earn' | 'use' | 'expire' | 'adjust' | 'refund';\n+  \n+  // 관련 정보\n+  relatedOrderId?: string;    // 관련 주문 ID\n+  relatedPaymentId?: string;  // 관련 결제 ID (기존 호환성)\n+  \n+  // 추적 정보 강화\n+  products?: PointTransactionProduct[];  // 관련 상품 정보 (복수 가능)\n+  branchId?: string;          // 지점 정보\n+  branchName?: string;        // 지점명\n+  staffId?: string;           // 담당 직원 ID\n+  staffName?: string;         // 담당 직원명\n+  \n+  // 포인트 정책\n+  earnedDate?: Date;          // 적립일 (사용/만료 추적용)\n+  expiryDate?: Date;          // 만료일\n+  isExpired: boolean;         // 만료 여부\n+  \n+  source: string;             // 포인트 발생 출처\n+  description?: string;\n+  \n+  // FIFO 처리를 위한 추가 필드\n+  originalTransactionId?: string; // 원본 적립 거래 ID (사용/만료 시)\n+}\n+\n+// 포인트 잔액 인터페이스 (성능 최적화용)\n+export interface PointBalance extends DBRecord {\n+  memberId: string;\n+  \n+  // 실시간 잔액 정보\n+  totalBalance: number;       // 총 사용가능 포인트\n+  earnedPoints: number;       // 총 적립 포인트\n+  usedPoints: number;         // 총 사용 포인트\n+  expiredPoints: number;      // 총 만료 포인트\n+  \n+  // 만료 예정 포인트 (성능 최적화)\n+  expiringIn30Days: number;   // 30일 내 만료 예정\n+  expiringIn7Days: number;    // 7일 내 만료 예정\n+  \n+  lastUpdated: Date;          // 마지막 업데이트 시간\n+}\n+\n+// 스케줄 이벤트 인터페이스\n+export interface ScheduleEvent extends DBRecord {\n+  title: string;\n+  startTime: Date;\n+  endTime: Date;\n+  staffId: string;\n+  staffName: string;\n+  programId?: string;\n+  programName?: string;\n+  memberId?: string;\n+  memberName?: string;\n+  type: 'class' | 'personal' | 'meeting' | 'break' | 'holiday';\n+  color?: string;\n+  description?: string;\n+  branchId?: string;\n+  branchName?: string;\n+  recurrenceRule?: string; // RRULE for recurring events\n+  sourceType: 'manual' | 'weekly_holiday' | 'booking'; // 이벤트 생성 출처\n+  sourceId?: string; // 원본 데이터 ID (WeeklyHolidaySettings ID 등)\n+}\n+\n+// 중복 체크 결과 타입\n+export interface DuplicateCheckResult {\n+  isDuplicate: boolean;\n+  duplicateField?: string;\n+  message?: string;\n+}\n+\n+// 로그인 ID 중복 체크 결과 타입\n+export interface LoginIdDuplicateCheckResult {\n+  isDuplicate: boolean;\n+  duplicateType?: 'staff' | 'member';\n+  message?: string;\n+}\n+\n+// 포인트 통계 타입\n+export interface PointStats {\n+  totalEarned: number;\n+  totalUsed: number;\n+  totalExpired: number;\n+  currentBalance: number;\n+  transactionCount: number;\n+}\n+\n+// 미수 메타 정보 타입\n+export interface UnpaidMetaInfo {\n+  unpaidMemberCount: number;\n+  totalUnpaidAmount: number;\n+}\n+\n+// 주문 처리 데이터 타입\n+export interface OrderProcessingData {\n+  memberInfo: {\n+    id: string;\n+    name: string;\n+    branchId: string;\n+    branchName: string;\n+    coach: string;\n+    coachName: string;\n+  };\n+  products: Array<{\n+    id: string;\n+    name: string;\n+    price: number;\n+    programId: string;\n+    programName: string;\n+    programType: string;\n+    // 기간제 상품의 경우 추가 정보\n+    startDate?: Date;\n+    endDate?: Date;\n+    duration?: number; // 일 단위\n+    originalPrice?: number; // 계산되기 전 원래 가격\n+  }>;\n+  payments: {\n+    cash: number;\n+    card: number;\n+    transfer: number;\n+    points: number;\n+  };\n+  orderType: 'registration' | 'course_enrollment';\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761458536916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,505 +483,18 @@\n     // 기간제 상품의 경우 추가 정보\n     startDate?: Date;\n     endDate?: Date;\n     duration?: number; // 일 단위\n+    // 횟수제 상품의 경우 추가 정보\n+    sessions?: number; // 수업 횟수\n+    // 가격 정보\n     originalPrice?: number; // 계산되기 전 원래 가격\n+    appliedPrice?: number; // 실제 적용된 가격\n   }>;\n   payments: {\n     cash: number;\n     card: number;\n     transfer: number;\n     points: number;\n   };\n   orderType: 'registration' | 'course_enrollment';\n-}\n-/**\n- * IndexedDB 관련 타입 정의\n- */\n-\n-// 기본 레코드 인터페이스\n-export interface DBRecord {\n-  id: string;\n-  createdAt: Date;\n-  updatedAt: Date;\n-}\n-\n-// 지점 인터페이스\n-export interface Branch extends DBRecord {\n-  name: string;\n-  address?: string;\n-  phone?: string;\n-  isActive: boolean;\n-  lockerPrice?: number; // 지점별 라커 가격 (기본값: 5000원)\n-}\n-\n-// 앱 설정 인터페이스\n-export interface AppSettings extends DBRecord {\n-  key: string;\n-  value: string;\n-}\n-\n-// 직원 인터페이스\n-export interface Staff extends DBRecord {\n-  name: string;\n-  loginId: string; // 로그인 ID\n-  password: string; // 비밀번호\n-  phone: string;\n-  email: string;\n-  branchId: string;\n-  position: string; // 직급\n-  role: string; // 직책\n-  employmentType: string; // 고용형태\n-  permission: string; // 권한\n-  program?: string; // 담당프로그램 (코치일 경우만)\n-  contractStartDate: Date;\n-  contractEndDate?: Date | null; // 계약종료일 (정규직은 없을 수 있음)\n-  contractFile?: File | null; // 계약서 파일\n-  contractFileName?: string; // 계약서 파일명 저장용\n-  contractFileData?: ArrayBuffer; // 계약서 파일 데이터 저장용\n-  workingHours?: {\n-    start: number; // 기본 근무 시작 시간 (시)\n-    end: number; // 기본 근무 종료 시간 (시)\n-  };\n-  isActive: boolean; // 활성/비활성 상태\n-}\n-\n-// 라커 인터페이스\n-export interface Locker extends DBRecord {\n-  number: string;\n-  status: 'available' | 'occupied' | 'maintenance' | 'pending';\n-  branchId: string;\n-  branchName: string; // 조회 성능을 위해 저장\n-  userId?: string; // 사용자 ID\n-  userName?: string; // 사용자 이름\n-  startDate?: string; // 사용 시작일 (YYYY-MM-DD)\n-  endDate?: string; // 사용 종료일 (YYYY-MM-DD)\n-  paymentId?: string; // 관련 결제 ID\n-  months?: number; // 사용 기간 (개월)\n-  isActive: boolean;\n-}\n-\n-// 프로그램 인터페이스\n-export interface Program extends DBRecord {\n-  name: string;\n-  type: string; // '횟수제' | '기간제'\n-  isActive: boolean;\n-}\n-\n-// 상품 인터페이스\n-export interface Product extends DBRecord {\n-  name: string;\n-  branchId: string;\n-  programId: string;\n-  programName: string; // 프로그램명 저장 (조회 성능 향상)\n-  programType: string; // 프로그램 종류 저장 (조회 성능 향상)\n-  sessions?: number; // 횟수 (횟수제인 경우에만 필요)\n-  duration?: number; // 소요시간 (분 단위, 횟수제인 경우에만 필요)\n-  price?: number; // 가격\n-  description?: string; // 상품소개\n-  isActive: boolean;\n-}\n-\n-// 기존 휴일 설정 인터페이스 (호환성 유지)\n-export interface HolidaySettings extends DBRecord {\n-  staffId: string;\n-  date: string; // YYYY-MM-DD 형식\n-  isHoliday: boolean; // true: 휴일, false: 근무일\n-  workingHours?: {\n-    start: number;\n-    end: number;\n-  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n-}\n-\n-// 새로운 주별 휴일 설정 인터페이스\n-export interface WeeklyHolidaySettings extends DBRecord {\n-  staffId: string;\n-  weekStartDate: string; // 해당 주의 월요일 날짜 (YYYY-MM-DD 형식)\n-  weekDays: {\n-    monday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;  // 시간 (예: 12시 = 12)\n-        end: number;    // 시간 (예: 13시 = 13)\n-        name?: string;  // 휴게시간 이름 (예: \"점심시간\")\n-      }>;\n-    };\n-    tuesday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;\n-        end: number;\n-        name?: string;\n-      }>;\n-    };\n-    wednesday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;\n-        end: number;\n-        name?: string;\n-      }>;\n-    };\n-    thursday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;\n-        end: number;\n-        name?: string;\n-      }>;\n-    };\n-    friday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;\n-        end: number;\n-        name?: string;\n-      }>;\n-    };\n-    saturday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;\n-        end: number;\n-        name?: string;\n-      }>;\n-    };\n-    sunday: {\n-      isHoliday: boolean;\n-      workingHours?: {\n-        start: number;\n-        end: number;\n-      };\n-      breakTimes?: Array<{\n-        start: number;\n-        end: number;\n-        name?: string;\n-      }>;\n-    };\n-  };\n-}\n-\n-// 약관 문서 인터페이스\n-export interface TermsDocument extends DBRecord {\n-  type: 'privacy_policy' | 'terms_of_service' | 'business_info' | 'marketing_consent' | 'member_terms' | 'contract';\n-  title: string;\n-  content: string;\n-  version: number; // 버전 관리\n-  isActive: boolean;\n-  publishedAt?: Date | null; // 발행일\n-}\n-\n-// 회원 인터페이스\n-export interface Member extends DBRecord {\n-  name: string;\n-  phone: string;\n-  email: string;\n-  birth: string;\n-  gender: 'male' | 'female' | '';\n-  address: string;\n-  sigunguCode: string;\n-  dong: string;\n-  roadAddress: string;\n-  jibunAddress: string;\n-  branchId: string;\n-  branchName: string; // 조회 성능을 위해 저장\n-  coach: string; // 담당 코치 ID\n-  coachName: string; // 조회 성능을 위해 저장\n-  joinPath: string;\n-  loginId: string; // 로그인 ID (공란일 때는 임시값 생성)\n-  loginPassword: string | null; // 로그인 비밀번호 (공란 가능)\n-  enableLogin: boolean;\n-  agreementInfo: {\n-    agreements: Array<{\n-      id: string;\n-      title: string;\n-      content: string;\n-      required: boolean;\n-      agreed: boolean;\n-    }>;\n-    customerSignature: string;\n-    staffSignature: string;\n-  };\n-  isActive: boolean;\n-  registrationDate: string; // 회원가입일\n-  remarks?: string; // 비고\n-  \n-  // 라커 정보 (배정된 경우만)\n-  lockerInfo?: {\n-    lockerId: string;\n-    lockerNumber: string;\n-    startDate: string; // YYYY-MM-DD\n-    endDate: string; // YYYY-MM-DD\n-    months: number;\n-    paymentId?: string;\n-  } | null;\n-}\n-\n-// 결제 인터페이스\n-export interface Payment extends DBRecord {\n-  orderId?: string;           // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n-  memberId: string;\n-  memberName: string; // 조회 성능을 위해 저장\n-  branchId: string;\n-  branchName: string; // 지점명\n-  coach: string; // 담당 코치 ID\n-  coachName: string; // 담당 코치명\n-  products: Array<{\n-    id: string;\n-    name: string;\n-    price: number;\n-    quantity: number;\n-    programId?: string;\n-    programName?: string;\n-    programType?: string;\n-    description?: string;\n-  }>;\n-  totalAmount: number; // 총 결제 예정 금액\n-  paidAmount: number; // 실제 결제된 금액\n-  unpaidAmount: number; // 미결제 금액 (totalAmount - paidAmount)\n-  paymentStatus: 'pending' | 'completed' | 'cancelled' | 'refunded' | 'unpaid';\n-  paymentMethod?: string;\n-  paymentDate?: Date | null;\n-  // 결제 타입 및 연결 정보 추가\n-  paymentType: 'course' | 'asset' | 'other'; // 수강 결제 | 자산 결제 | 기타\n-  relatedCourseId?: string | null; // 연결된 수강 이력 ID\n-  relatedAssetId?: string | null; // 연결된 자산 ID (향후 사용)\n-  memo?: string; // 메모\n-  \n-  // 새로운 필드 추가\n-  amount?: number;            // 해당 결제수단으로 결제한 금액 (개별 결제 기록용)\n-  paymentReference?: string;  // 결제 참조번호 (카드 승인번호 등)\n-}\n-\n-// 포인트 인터페이스 (기존 시스템 호환용)\n-export interface Point extends DBRecord {\n-  memberId: string;\n-  memberName: string; // 조회 성능을 위해 저장\n-  amount: number; // 포인트 금액 (양수: 적립, 음수: 사용)\n-  type: 'earned' | 'used' | 'expired' | 'adjusted'; // 적립, 사용, 만료, 조정\n-  source: string; // 포인트 발생 출처 (예: '회원등록 초과금', '상품구매', '포인트사용' 등)\n-  description?: string; // 상세 설명\n-  expiryDate?: Date | null; // 만료일 (적립된 포인트의 경우)\n-  relatedPaymentId?: string; // 연관된 결제 ID (있는 경우)\n-}\n-\n-// 수강 등록 인터페이스\n-export interface CourseEnrollment extends DBRecord {\n-  orderId?: string; // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n-  memberId: string;\n-  memberName: string; // 조회 성능을 위해 저장\n-  productId: string;\n-  productName: string; // 상품명\n-  productPrice: number; // 상품 가격\n-  programId: string;\n-  programName: string; // 프로그램명\n-  programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n-  branchId: string;\n-  branchName: string; // 지점명\n-  coach: string; // 담당 코치 ID\n-  coachName: string; // 담당 코치명\n-  enrollmentStatus: 'active' | 'completed' | 'suspended' | 'cancelled' | 'unpaid'; // 수강 상태 확장\n-  paidAmount: number; // 실제 지불한 금액\n-  unpaidAmount: number; // 미납 금액 (productPrice - paidAmount)\n-  startDate?: Date | null; // 수강 시작일\n-  endDate?: Date | null; // 수강 종료일 (기간제인 경우)\n-  sessionCount?: number; // 총 수업 횟수 (횟수제인 경우)\n-  completedSessions?: number; // 완료된 수업 횟수 (횟수제인 경우, 기본값 0)\n-  notes?: string; // 비고\n-  relatedPaymentId?: string; // 연관된 결제 ID (기존 호환성)\n-}\n-\n-// ==================== 새로운 개선된 스키마 ====================\n-\n-// 주문 인터페이스\n-export interface Order extends DBRecord {\n-  memberId: string;\n-  memberName: string;\n-  branchId: string;\n-  branchName: string;\n-  coach: string;\n-  coachName: string;\n-  \n-  // 주문 상품 정보\n-  orderItems: Array<{\n-    productId: string;\n-    productName: string;\n-    programId: string;\n-    programName: string;\n-    programType: string;\n-    price: number;\n-    quantity: number;\n-  }>;\n-  \n-  // 금액 정보\n-  totalAmount: number;        // 총 주문 금액\n-  paidAmount: number;         // 총 지불 금액\n-  unpaidAmount: number;       // 총 미수 금액\n-  pointsUsed: number;         // 사용된 포인트\n-  pointsEarned: number;       // 적립된 포인트 (초과금)\n-  \n-  // 상태 정보\n-  orderStatus: 'pending' | 'completed' | 'partially_paid' | 'cancelled';\n-  orderType: 'registration' | 'course_enrollment' | 'product_purchase';\n-  \n-  memo?: string;\n-}\n-\n-// 포인트 거래 관련 상품 정보\n-export interface PointTransactionProduct {\n-  productId: string;\n-  productName: string;\n-  productPrice: number;\n-  courseId?: string;          // 연결된 수강 ID (상품 구매 시 생성됨)\n-  courseName?: string;        // 수강명\n-}\n-\n-// 포인트 거래 인터페이스 (개선된 시스템)\n-export interface PointTransaction extends DBRecord {\n-  memberId: string;\n-  memberName: string;\n-  \n-  // 거래 정보\n-  amount: number;             // 포인트 금액 (+ 적립, - 사용)\n-  balance: number;            // 거래 후 잔액 (성능 최적화)\n-  transactionType: 'earn' | 'use' | 'expire' | 'adjust' | 'refund';\n-  \n-  // 관련 정보\n-  relatedOrderId?: string;    // 관련 주문 ID\n-  relatedPaymentId?: string;  // 관련 결제 ID (기존 호환성)\n-  \n-  // 추적 정보 강화\n-  products?: PointTransactionProduct[];  // 관련 상품 정보 (복수 가능)\n-  branchId?: string;          // 지점 정보\n-  branchName?: string;        // 지점명\n-  staffId?: string;           // 담당 직원 ID\n-  staffName?: string;         // 담당 직원명\n-  \n-  // 포인트 정책\n-  earnedDate?: Date;          // 적립일 (사용/만료 추적용)\n-  expiryDate?: Date;          // 만료일\n-  isExpired: boolean;         // 만료 여부\n-  \n-  source: string;             // 포인트 발생 출처\n-  description?: string;\n-  \n-  // FIFO 처리를 위한 추가 필드\n-  originalTransactionId?: string; // 원본 적립 거래 ID (사용/만료 시)\n-}\n-\n-// 포인트 잔액 인터페이스 (성능 최적화용)\n-export interface PointBalance extends DBRecord {\n-  memberId: string;\n-  \n-  // 실시간 잔액 정보\n-  totalBalance: number;       // 총 사용가능 포인트\n-  earnedPoints: number;       // 총 적립 포인트\n-  usedPoints: number;         // 총 사용 포인트\n-  expiredPoints: number;      // 총 만료 포인트\n-  \n-  // 만료 예정 포인트 (성능 최적화)\n-  expiringIn30Days: number;   // 30일 내 만료 예정\n-  expiringIn7Days: number;    // 7일 내 만료 예정\n-  \n-  lastUpdated: Date;          // 마지막 업데이트 시간\n-}\n-\n-// 스케줄 이벤트 인터페이스\n-export interface ScheduleEvent extends DBRecord {\n-  title: string;\n-  startTime: Date;\n-  endTime: Date;\n-  staffId: string;\n-  staffName: string;\n-  programId?: string;\n-  programName?: string;\n-  memberId?: string;\n-  memberName?: string;\n-  type: 'class' | 'personal' | 'meeting' | 'break' | 'holiday';\n-  color?: string;\n-  description?: string;\n-  branchId?: string;\n-  branchName?: string;\n-  recurrenceRule?: string; // RRULE for recurring events\n-  sourceType: 'manual' | 'weekly_holiday' | 'booking'; // 이벤트 생성 출처\n-  sourceId?: string; // 원본 데이터 ID (WeeklyHolidaySettings ID 등)\n-}\n-\n-// 중복 체크 결과 타입\n-export interface DuplicateCheckResult {\n-  isDuplicate: boolean;\n-  duplicateField?: string;\n-  message?: string;\n-}\n-\n-// 로그인 ID 중복 체크 결과 타입\n-export interface LoginIdDuplicateCheckResult {\n-  isDuplicate: boolean;\n-  duplicateType?: 'staff' | 'member';\n-  message?: string;\n-}\n-\n-// 포인트 통계 타입\n-export interface PointStats {\n-  totalEarned: number;\n-  totalUsed: number;\n-  totalExpired: number;\n-  currentBalance: number;\n-  transactionCount: number;\n-}\n-\n-// 미수 메타 정보 타입\n-export interface UnpaidMetaInfo {\n-  unpaidMemberCount: number;\n-  totalUnpaidAmount: number;\n-}\n-\n-// 주문 처리 데이터 타입\n-export interface OrderProcessingData {\n-  memberInfo: {\n-    id: string;\n-    name: string;\n-    branchId: string;\n-    branchName: string;\n-    coach: string;\n-    coachName: string;\n-  };\n-  products: Array<{\n-    id: string;\n-    name: string;\n-    price: number;\n-    programId: string;\n-    programName: string;\n-    programType: string;\n-  }>;\n-  payments: {\n-    cash: number;\n-    card: number;\n-    transfer: number;\n-    points: number;\n-  };\n-  orderType: 'registration' | 'course_enrollment';\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761459201907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,9 +298,10 @@\n   memberId: string;\n   memberName: string; // 조회 성능을 위해 저장\n   productId: string;\n   productName: string; // 상품명\n-  productPrice: number; // 상품 가격\n+  productPrice: number; // 상품 가격 (계산된 정확한 금액)\n+  appliedPrice: number; // 적용 가격 (사용자가 조정한 최종 금액)\n   programId: string;\n   programName: string; // 프로그램명\n   programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n   branchId: string;\n@@ -308,9 +309,9 @@\n   coach: string; // 담당 코치 ID\n   coachName: string; // 담당 코치명\n   enrollmentStatus: 'active' | 'completed' | 'suspended' | 'cancelled' | 'unpaid'; // 수강 상태 확장\n   paidAmount: number; // 실제 지불한 금액\n-  unpaidAmount: number; // 미납 금액 (productPrice - paidAmount)\n+  unpaidAmount: number; // 미납 금액 (appliedPrice - paidAmount)\n   startDate?: Date | null; // 수강 시작일\n   endDate?: Date | null; // 수강 종료일 (기간제인 경우)\n   sessionCount?: number; // 총 수업 횟수 (횟수제인 경우)\n   completedSessions?: number; // 완료된 수업 횟수 (횟수제인 경우, 기본값 0)\n"
                },
                {
                    "date": 1761459341631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n   memberName: string; // 조회 성능을 위해 저장\n   productId: string;\n   productName: string; // 상품명\n   productPrice: number; // 상품 가격 (계산된 정확한 금액)\n-  appliedPrice: number; // 적용 가격 (사용자가 조정한 최종 금액)\n+  appliedPrice?: number; // 적용 가격 (사용자가 조정한 최종 금액) - 기존 데이터 호환성을 위해 optional\n   programId: string;\n   programName: string; // 프로그램명\n   programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n   branchId: string;\n"
                },
                {
                    "date": 1761460101742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,9 +430,9 @@\n   description?: string;\n   branchId?: string;\n   branchName?: string;\n   recurrenceRule?: string; // RRULE for recurring events\n-  sourceType: 'manual' | 'weekly_holiday' | 'booking'; // 이벤트 생성 출처\n+  sourceType: 'manual' | 'weekly_holiday' | 'booking' | 'period_enrollment'; // 이벤트 생성 출처\n   sourceId?: string; // 원본 데이터 ID (WeeklyHolidaySettings ID 등)\n }\n \n // 중복 체크 결과 타입\n"
                },
                {
                    "date": 1761463030868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,5 +497,50 @@\n     transfer: number;\n     points: number;\n   };\n   orderType: 'registration' | 'course_enrollment';\n+}\n+\n+// 운동처방서 관련 타입들\n+export interface BodyImagePoint {\n+  id: string;\n+  x: number; // 좌표 x (%)\n+  y: number; // 좌표 y (%)\n+  memo: string; // 메모\n+  color?: string; // 점 색상 (기본: 빨강)\n+}\n+\n+export interface ExercisePrescriptionMedicalHistory {\n+  musculoskeletal: boolean; // 근골격계질환\n+  cardiovascular: boolean; // 심혈관계질환\n+  diabetes: boolean; // 당뇨\n+  osteoporosis: boolean; // 골다공증\n+  thyroid: boolean; // 갑상선\n+  varicose: boolean; // 정맥류\n+  arthritis: boolean; // 관절염\n+}\n+\n+export interface ExercisePrescription extends DBRecord {\n+  memberId: string;\n+  memberName: string; // 조회 성능을 위해 저장\n+  \n+  // 기본 신체 정보\n+  height: string; // 키\n+  weight: string; // 체중\n+  footSize: string; // 발사이즈\n+  \n+  // 의료 정보\n+  medications: string; // 복용중인 약\n+  medicalHistory: ExercisePrescriptionMedicalHistory; // 병력사항\n+  painHistory: string; // 통증 히스토리 및 운동목적\n+  \n+  // 신체 이미지 점찍기 정보\n+  bodyImages: {\n+    front: BodyImagePoint[]; // 정면 이미지 점들\n+    spine: BodyImagePoint[]; // 척추 이미지 점들\n+    back: BodyImagePoint[]; // 후면 이미지 점들\n+  };\n+  \n+  // 메타 정보\n+  isActive: boolean;\n+  prescriptionDate: Date; // 처방서 작성일\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761463993270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -539,8 +539,12 @@\n     spine: BodyImagePoint[]; // 척추 이미지 점들\n     back: BodyImagePoint[]; // 후면 이미지 점들\n   };\n   \n+  // 서명 정보\n+  signatureData: string; // 서명 이미지 데이터 (base64)\n+  signedAt: Date | null; // 서명한 날짜 (최초 서명만 기록)\n+  \n   // 메타 정보\n   isActive: boolean;\n   prescriptionDate: Date; // 처방서 작성일\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1761908255062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n   programId: string;\n   programName: string; // 프로그램명 저장 (조회 성능 향상)\n   programType: string; // 프로그램 종류 저장 (조회 성능 향상)\n   sessions?: number; // 횟수 (횟수제인 경우에만 필요)\n+  months?: number; // 개월수 (기간제인 경우에만 필요)\n   duration?: number; // 소요시간 (분 단위, 횟수제인 경우에만 필요)\n   price?: number; // 가격\n   description?: string; // 상품소개\n   isActive: boolean;\n"
                }
            ],
            "date": 1761368450126,
            "name": "Commit-0",
            "content": "/**\n * IndexedDB 관련 타입 정의\n */\n\n// 기본 레코드 인터페이스\nexport interface DBRecord {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// 지점 인터페이스\nexport interface Branch extends DBRecord {\n  name: string;\n  address?: string;\n  phone?: string;\n  isActive: boolean;\n}\n\n// 앱 설정 인터페이스\nexport interface AppSettings extends DBRecord {\n  key: string;\n  value: string;\n}\n\n// 직원 인터페이스\nexport interface Staff extends DBRecord {\n  name: string;\n  loginId: string; // 로그인 ID\n  password: string; // 비밀번호\n  phone: string;\n  email: string;\n  branchId: string;\n  position: string; // 직급\n  role: string; // 직책\n  employmentType: string; // 고용형태\n  permission: string; // 권한\n  program?: string; // 담당프로그램 (코치일 경우만)\n  contractStartDate: Date;\n  contractEndDate?: Date | null; // 계약종료일 (정규직은 없을 수 있음)\n  contractFile?: File | null; // 계약서 파일\n  contractFileName?: string; // 계약서 파일명 저장용\n  contractFileData?: ArrayBuffer; // 계약서 파일 데이터 저장용\n  workingHours?: {\n    start: number; // 기본 근무 시작 시간 (시)\n    end: number; // 기본 근무 종료 시간 (시)\n  };\n  isActive: boolean; // 활성/비활성 상태\n}\n\n// 프로그램 인터페이스\nexport interface Program extends DBRecord {\n  name: string;\n  type: string; // '횟수제' | '기간제'\n  isActive: boolean;\n}\n\n// 상품 인터페이스\nexport interface Product extends DBRecord {\n  name: string;\n  branchId: string;\n  programId: string;\n  programName: string; // 프로그램명 저장 (조회 성능 향상)\n  programType: string; // 프로그램 종류 저장 (조회 성능 향상)\n  sessions?: number; // 횟수 (횟수제인 경우에만 필요)\n  duration?: number; // 소요시간 (분 단위, 횟수제인 경우에만 필요)\n  price?: number; // 가격\n  description?: string; // 상품소개\n  isActive: boolean;\n}\n\n// 휴일 설정 인터페이스\nexport interface HolidaySettings extends DBRecord {\n  staffId: string;\n  date: string; // YYYY-MM-DD 형식\n  isHoliday: boolean; // true: 휴일, false: 근무일\n  workingHours?: {\n    start: number;\n    end: number;\n  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n}\n\n// 약관 문서 인터페이스\nexport interface TermsDocument extends DBRecord {\n  type: 'privacy_policy' | 'terms_of_service' | 'business_info' | 'marketing_consent' | 'member_terms' | 'contract';\n  title: string;\n  content: string;\n  version: number; // 버전 관리\n  isActive: boolean;\n  publishedAt?: Date | null; // 발행일\n}\n\n// 회원 인터페이스\nexport interface Member extends DBRecord {\n  name: string;\n  phone: string;\n  email: string;\n  birth: string;\n  gender: 'male' | 'female' | '';\n  address: string;\n  sigunguCode: string;\n  dong: string;\n  roadAddress: string;\n  jibunAddress: string;\n  branchId: string;\n  branchName: string; // 조회 성능을 위해 저장\n  coach: string; // 담당 코치 ID\n  coachName: string; // 조회 성능을 위해 저장\n  joinPath: string;\n  loginId: string; // 로그인 ID (공란일 때는 임시값 생성)\n  loginPassword: string | null; // 로그인 비밀번호 (공란 가능)\n  enableLogin: boolean;\n  agreementInfo: {\n    agreements: Array<{\n      id: string;\n      title: string;\n      content: string;\n      required: boolean;\n      agreed: boolean;\n    }>;\n    customerSignature: string;\n    staffSignature: string;\n  };\n  isActive: boolean;\n  registrationDate: string; // 회원가입일\n  remarks?: string; // 비고\n}\n\n// 결제 인터페이스\nexport interface Payment extends DBRecord {\n  orderId?: string;           // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n  memberId: string;\n  memberName: string; // 조회 성능을 위해 저장\n  branchId: string;\n  branchName: string; // 지점명\n  coach: string; // 담당 코치 ID\n  coachName: string; // 담당 코치명\n  products: Array<{\n    id: string;\n    name: string;\n    price: number;\n    quantity: number;\n    programId?: string;\n    programName?: string;\n    programType?: string;\n    description?: string;\n  }>;\n  totalAmount: number; // 총 결제 예정 금액\n  paidAmount: number; // 실제 결제된 금액\n  unpaidAmount: number; // 미결제 금액 (totalAmount - paidAmount)\n  paymentStatus: 'pending' | 'completed' | 'cancelled' | 'refunded' | 'unpaid';\n  paymentMethod?: string;\n  paymentDate?: Date | null;\n  // 결제 타입 및 연결 정보 추가\n  paymentType: 'course' | 'asset' | 'other'; // 수강 결제 | 자산 결제 | 기타\n  relatedCourseId?: string | null; // 연결된 수강 이력 ID\n  relatedAssetId?: string | null; // 연결된 자산 ID (향후 사용)\n  memo?: string; // 메모\n  \n  // 새로운 필드 추가\n  amount?: number;            // 해당 결제수단으로 결제한 금액 (개별 결제 기록용)\n  paymentReference?: string;  // 결제 참조번호 (카드 승인번호 등)\n}\n\n// 포인트 인터페이스 (기존 시스템 호환용)\nexport interface Point extends DBRecord {\n  memberId: string;\n  memberName: string; // 조회 성능을 위해 저장\n  amount: number; // 포인트 금액 (양수: 적립, 음수: 사용)\n  type: 'earned' | 'used' | 'expired' | 'adjusted'; // 적립, 사용, 만료, 조정\n  source: string; // 포인트 발생 출처 (예: '회원등록 초과금', '상품구매', '포인트사용' 등)\n  description?: string; // 상세 설명\n  expiryDate?: Date | null; // 만료일 (적립된 포인트의 경우)\n  relatedPaymentId?: string; // 연관된 결제 ID (있는 경우)\n}\n\n// 수강 등록 인터페이스\nexport interface CourseEnrollment extends DBRecord {\n  orderId?: string; // 주문 ID 참조 (기존 데이터 호환성을 위해 optional)\n  memberId: string;\n  memberName: string; // 조회 성능을 위해 저장\n  productId: string;\n  productName: string; // 상품명\n  productPrice: number; // 상품 가격\n  programId: string;\n  programName: string; // 프로그램명\n  programType: string; // 프로그램 타입 ('횟수제' | '기간제')\n  branchId: string;\n  branchName: string; // 지점명\n  coach: string; // 담당 코치 ID\n  coachName: string; // 담당 코치명\n  enrollmentStatus: 'active' | 'completed' | 'suspended' | 'cancelled' | 'unpaid'; // 수강 상태 확장\n  paidAmount: number; // 실제 지불한 금액\n  unpaidAmount: number; // 미납 금액 (productPrice - paidAmount)\n  startDate?: Date | null; // 수강 시작일\n  endDate?: Date | null; // 수강 종료일 (기간제인 경우)\n  sessionCount?: number; // 총 수업 횟수 (횟수제인 경우)\n  completedSessions?: number; // 완료된 수업 횟수 (횟수제인 경우, 기본값 0)\n  notes?: string; // 비고\n  relatedPaymentId?: string; // 연관된 결제 ID (기존 호환성)\n}\n\n// ==================== 새로운 개선된 스키마 ====================\n\n// 주문 인터페이스\nexport interface Order extends DBRecord {\n  memberId: string;\n  memberName: string;\n  branchId: string;\n  branchName: string;\n  coach: string;\n  coachName: string;\n  \n  // 주문 상품 정보\n  orderItems: Array<{\n    productId: string;\n    productName: string;\n    programId: string;\n    programName: string;\n    programType: string;\n    price: number;\n    quantity: number;\n  }>;\n  \n  // 금액 정보\n  totalAmount: number;        // 총 주문 금액\n  paidAmount: number;         // 총 지불 금액\n  unpaidAmount: number;       // 총 미수 금액\n  pointsUsed: number;         // 사용된 포인트\n  pointsEarned: number;       // 적립된 포인트 (초과금)\n  \n  // 상태 정보\n  orderStatus: 'pending' | 'completed' | 'partially_paid' | 'cancelled';\n  orderType: 'registration' | 'course_enrollment' | 'product_purchase';\n  \n  memo?: string;\n}\n\n// 포인트 거래 인터페이스 (개선된 시스템)\nexport interface PointTransaction extends DBRecord {\n  memberId: string;\n  memberName: string;\n  \n  // 거래 정보\n  amount: number;             // 포인트 금액 (+ 적립, - 사용)\n  balance: number;            // 거래 후 잔액 (성능 최적화)\n  transactionType: 'earn' | 'use' | 'expire' | 'adjust' | 'refund';\n  \n  // 관련 정보\n  relatedOrderId?: string;    // 관련 주문 ID\n  relatedPaymentId?: string;  // 관련 결제 ID (기존 호환성)\n  \n  // 포인트 정책\n  earnedDate?: Date;          // 적립일 (사용/만료 추적용)\n  expiryDate?: Date;          // 만료일\n  isExpired: boolean;         // 만료 여부\n  \n  source: string;             // 포인트 발생 출처\n  description?: string;\n  \n  // FIFO 처리를 위한 추가 필드\n  originalTransactionId?: string; // 원본 적립 거래 ID (사용/만료 시)\n}\n\n// 포인트 잔액 인터페이스 (성능 최적화용)\nexport interface PointBalance extends DBRecord {\n  memberId: string;\n  \n  // 실시간 잔액 정보\n  totalBalance: number;       // 총 사용가능 포인트\n  earnedPoints: number;       // 총 적립 포인트\n  usedPoints: number;         // 총 사용 포인트\n  expiredPoints: number;      // 총 만료 포인트\n  \n  // 만료 예정 포인트 (성능 최적화)\n  expiringIn30Days: number;   // 30일 내 만료 예정\n  expiringIn7Days: number;    // 7일 내 만료 예정\n  \n  lastUpdated: Date;          // 마지막 업데이트 시간\n}\n\n// 중복 체크 결과 타입\nexport interface DuplicateCheckResult {\n  isDuplicate: boolean;\n  duplicateField?: string;\n  message?: string;\n}\n\n// 로그인 ID 중복 체크 결과 타입\nexport interface LoginIdDuplicateCheckResult {\n  isDuplicate: boolean;\n  duplicateType?: 'staff' | 'member';\n  message?: string;\n}\n\n// 포인트 통계 타입\nexport interface PointStats {\n  totalEarned: number;\n  totalUsed: number;\n  totalExpired: number;\n  currentBalance: number;\n  transactionCount: number;\n}\n\n// 미수 메타 정보 타입\nexport interface UnpaidMetaInfo {\n  unpaidMemberCount: number;\n  totalUnpaidAmount: number;\n}\n\n// 주문 처리 데이터 타입\nexport interface OrderProcessingData {\n  memberInfo: {\n    id: string;\n    name: string;\n    branchId: string;\n    branchName: string;\n    coach: string;\n    coachName: string;\n  };\n  products: Array<{\n    id: string;\n    name: string;\n    price: number;\n    programId: string;\n    programName: string;\n    programType: string;\n  }>;\n  payments: {\n    cash: number;\n    card: number;\n    transfer: number;\n    points: number;\n  };\n  orderType: 'registration' | 'course_enrollment';\n}"
        }
    ]
}