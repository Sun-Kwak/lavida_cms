{
    "sourceFile": "src/components/KakaoAddressSearch.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1760248357523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1760248357523,
            "name": "Commit-0",
            "content": "import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { KakaoAddressDocument, AddressInfo } from '../pages/CMS/Member/types';\n\ninterface KakaoAddressSearchProps {\n  onAddressSelect: (addressInfo: AddressInfo) => void;\n  placeholder?: string;\n  disabled?: boolean;\n  value?: string;\n}\n\nconst SearchContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  box-sizing: border-box;\n  \n  &:focus {\n    outline: none;\n    border-color: #007bff;\n  }\n  \n  &:disabled {\n    background-color: #f5f5f5;\n    color: #999;\n  }\n`;\n\nconst SearchButton = styled.button`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translateY(-50%);\n  padding: 6px 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  \n  &:hover {\n    background-color: #0056b3;\n  }\n  \n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ResultsList = styled.ul`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border: 1px solid #ddd;\n  border-top: none;\n  border-radius: 0 0 4px 4px;\n  max-height: 200px;\n  overflow-y: auto;\n  z-index: 1000;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ResultItem = styled.li`\n  padding: 12px;\n  cursor: pointer;\n  border-bottom: 1px solid #eee;\n  \n  &:hover {\n    background-color: #f8f9fa;\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst AddressName = styled.div`\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nconst AddressDetail = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n\nconst ErrorMessage = styled.div`\n  color: #dc3545;\n  font-size: 12px;\n  margin-top: 4px;\n`;\n\n// 카카오 주소 API 키 - 환경변수에서 가져오기\nconst KAKAO_API_KEY = process.env.REACT_APP_KAKAO_API_KEY;\n\nconst KakaoAddressSearch: React.FC<KakaoAddressSearchProps> = ({\n  onAddressSelect,\n  placeholder = \"주소를 검색하세요\",\n  disabled = false,\n  value = \"\"\n}) => {\n  const [searchQuery, setSearchQuery] = useState(value);\n  const [searchResults, setSearchResults] = useState<KakaoAddressDocument[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [error, setError] = useState<string>('');\n  const searchContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setSearchQuery(value);\n  }, [value]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target as Node)) {\n        setShowResults(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const searchAddress = async (query: string) => {\n    if (!query.trim()) {\n      setError('검색어를 입력해주세요.');\n      return;\n    }\n\n    if (!KAKAO_API_KEY) {\n      setError('카카오 API 키가 설정되지 않았습니다.');\n      return;\n    }\n\n    setIsSearching(true);\n    setError('');\n\n    try {\n      const response = await fetch(\n        `https://dapi.kakao.com/v2/local/search/address.json?query=${encodeURIComponent(query)}`,\n        {\n          headers: {\n            Authorization: `KakaoAK ${KAKAO_API_KEY}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      if (data.documents && data.documents.length > 0) {\n        setSearchResults(data.documents);\n        setShowResults(true);\n      } else {\n        setSearchResults([]);\n        setError('검색 결과가 없습니다.');\n      }\n    } catch (err) {\n      console.error('Address search error:', err);\n      setError('주소 검색 중 오류가 발생했습니다.');\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleSearch = () => {\n    searchAddress(searchQuery);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSearch();\n    }\n  };\n\n  const handleAddressSelect = (document: KakaoAddressDocument) => {\n    const addressInfo: AddressInfo = {\n      address: document.address_name,\n      sigunguCode: document.address.b_code, // 법정동 코드를 시군구 코드로 사용\n      dong: document.address.region_3depth_name || document.address.region_3depth_h_name, // 동 정보\n      roadAddress: document.road_address?.address_name || '',\n      jibunAddress: document.address.address_name\n    };\n\n    setSearchQuery(document.address_name);\n    setShowResults(false);\n    setError('');\n    onAddressSelect(addressInfo);\n  };\n\n  return (\n    <SearchContainer ref={searchContainerRef}>\n      <SearchInput\n        type=\"text\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        onKeyPress={handleKeyPress}\n        placeholder={placeholder}\n        disabled={disabled || isSearching}\n      />\n      <SearchButton\n        type=\"button\"\n        onClick={handleSearch}\n        disabled={disabled || isSearching}\n      >\n        {isSearching ? '검색중...' : '검색'}\n      </SearchButton>\n      \n      {error && <ErrorMessage>{error}</ErrorMessage>}\n      \n      {showResults && searchResults.length > 0 && (\n        <ResultsList>\n          {searchResults.map((document, index) => (\n            <ResultItem\n              key={index}\n              onClick={() => handleAddressSelect(document)}\n            >\n              <AddressName>{document.address_name}</AddressName>\n              {document.road_address && (\n                <AddressDetail>도로명: {document.road_address.address_name}</AddressDetail>\n              )}\n            </ResultItem>\n          ))}\n        </ResultsList>\n      )}\n    </SearchContainer>\n  );\n};\n\nexport default KakaoAddressSearch;\n"
        }
    ]
}