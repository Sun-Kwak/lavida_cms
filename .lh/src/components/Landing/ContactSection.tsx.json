{
    "sourceFile": "src/components/Landing/ContactSection.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1760504010819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760754775695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,415 @@\n+import React, { useState } from 'react';\n+import styled, { keyframes } from 'styled-components';\n+import { AppColors } from '../../styles/colors';\n+\n+// 애니메이션\n+const fadeInUp = keyframes`\n+  from {\n+    opacity: 0;\n+    transform: translateY(30px);\n+  }\n+  to {\n+    opacity: 1;\n+    transform: translateY(0);\n+  }\n+`;\n+\n+const slideIn = keyframes`\n+  from {\n+    opacity: 0;\n+    transform: translateX(-20px);\n+  }\n+  to {\n+    opacity: 1;\n+    transform: translateX(0);\n+  }\n+`;\n+\n+const float = keyframes`\n+  0%, 100% {\n+    transform: translateY(0px);\n+  }\n+  50% {\n+    transform: translateY(-3px);\n+  }\n+`;\n+\n+// 공통 섹션 스타일\n+const Section = styled.section`\n+  padding: 120px 20px;\n+  background: linear-gradient(135deg, \n+    ${AppColors.btnCEmphasis} 0%, \n+    ${AppColors.background} 50%, \n+    rgba(55, 187, 214, 0.03) 100%\n+  );\n+  position: relative;\n+  overflow: hidden;\n+\n+  &::before {\n+    content: '';\n+    position: absolute;\n+    top: 0;\n+    left: 0;\n+    right: 0;\n+    bottom: 0;\n+    background: radial-gradient(ellipse at center bottom, \n+      rgba(55, 187, 214, 0.1) 0%, \n+      transparent 60%\n+    );\n+    pointer-events: none;\n+  }\n+`;\n+\n+const Container = styled.div`\n+  max-width: 1200px;\n+  margin: 0 auto;\n+  position: relative;\n+  z-index: 1;\n+`;\n+\n+const SectionHeader = styled.div`\n+  text-align: center;\n+  margin-bottom: 80px;\n+`;\n+\n+const SectionTitle = styled.h2`\n+  font-size: clamp(2.5rem, 5vw, 3.5rem);\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 24px;\n+  font-weight: 700;\n+  letter-spacing: -0.02em;\n+  background: linear-gradient(135deg, \n+    ${AppColors.onBackground} 0%, \n+    ${AppColors.primary} 100%\n+  );\n+  -webkit-background-clip: text;\n+  -webkit-text-fill-color: transparent;\n+  background-clip: text;\n+  animation: ${fadeInUp} 0.8s ease-out;\n+`;\n+\n+const SectionDescription = styled.p`\n+  font-size: 1.3rem;\n+  color: ${AppColors.onInput2};\n+  max-width: 600px;\n+  margin: 0 auto;\n+  line-height: 1.7;\n+  font-weight: 300;\n+`;\n+\n+const ContactContent = styled.div`\n+  display: grid;\n+  grid-template-columns: 1fr 1fr;\n+  gap: 80px;\n+  align-items: start;\n+  \n+  @media (max-width: 968px) {\n+    grid-template-columns: 1fr;\n+    gap: 60px;\n+  }\n+`;\n+\n+const ContactInfo = styled.div`\n+  animation: ${slideIn} 0.8s ease-out 0.3s both;\n+`;\n+\n+const ContactGrid = styled.div`\n+  display: grid;\n+  gap: 32px;\n+`;\n+\n+const ContactCard = styled.div<{ index: number }>`\n+  display: flex;\n+  align-items: center;\n+  padding: 32px;\n+  background: rgba(255, 255, 255, 0.8);\n+  backdrop-filter: blur(10px);\n+  border: 1px solid rgba(255, 255, 255, 0.2);\n+  border-radius: 20px;\n+  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n+  transition: all 0.3s ease;\n+  animation: ${fadeInUp} 0.6s ease-out ${props => props.index * 0.15}s both;\n+\n+  &:hover {\n+    transform: translateY(-5px);\n+    box-shadow: 0 16px 48px rgba(55, 187, 214, 0.2);\n+  }\n+\n+  @media (max-width: 768px) {\n+    flex-direction: column;\n+    text-align: center;\n+    padding: 24px;\n+  }\n+`;\n+\n+const ContactIcon = styled.div`\n+  width: 80px;\n+  height: 80px;\n+  background: linear-gradient(135deg, \n+    ${AppColors.primary} 0%, \n+    ${AppColors.tertiary} 100%\n+  );\n+  border-radius: 20px;\n+  margin-right: 24px;\n+  display: flex;\n+  align-items: center;\n+  justify-content: center;\n+  color: ${AppColors.onPrimary};\n+  font-size: 2rem;\n+  box-shadow: 0 8px 24px rgba(55, 187, 214, 0.3);\n+  animation: ${float} 4s ease-in-out infinite;\n+  flex-shrink: 0;\n+\n+  @media (max-width: 768px) {\n+    margin-right: 0;\n+    margin-bottom: 16px;\n+  }\n+`;\n+\n+const ContactDetails = styled.div`\n+  flex: 1;\n+`;\n+\n+const ContactTitle = styled.h4`\n+  font-size: 1.4rem;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 8px;\n+  font-weight: 700;\n+`;\n+\n+const ContactText = styled.p`\n+  color: ${AppColors.onInput2};\n+  font-size: 1.1rem;\n+  line-height: 1.6;\n+  margin: 0;\n+`;\n+\n+const ContactForm = styled.div`\n+  animation: ${slideIn} 0.8s ease-out 0.5s both;\n+`;\n+\n+const FormContainer = styled.form`\n+  background: rgba(255, 255, 255, 0.9);\n+  backdrop-filter: blur(15px);\n+  border: 1px solid rgba(255, 255, 255, 0.2);\n+  border-radius: 24px;\n+  padding: 40px;\n+  box-shadow: 0 16px 48px rgba(0, 0, 0, 0.1);\n+`;\n+\n+const FormTitle = styled.h3`\n+  font-size: 1.8rem;\n+  color: ${AppColors.onBackground};\n+  margin-bottom: 32px;\n+  font-weight: 700;\n+  text-align: center;\n+`;\n+\n+const FormGroup = styled.div`\n+  margin-bottom: 24px;\n+`;\n+\n+const FormLabel = styled.label`\n+  display: block;\n+  color: ${AppColors.onBackground};\n+  font-weight: 600;\n+  margin-bottom: 8px;\n+  font-size: 1rem;\n+`;\n+\n+const FormInput = styled.input`\n+  width: 100%;\n+  padding: 16px 20px;\n+  border: 2px solid rgba(55, 187, 214, 0.2);\n+  border-radius: 12px;\n+  background: rgba(255, 255, 255, 0.8);\n+  font-size: 1rem;\n+  transition: all 0.3s ease;\n+  box-sizing: border-box;\n+\n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+    background: rgba(255, 255, 255, 1);\n+    box-shadow: 0 0 0 4px rgba(55, 187, 214, 0.1);\n+  }\n+\n+  &::placeholder {\n+    color: ${AppColors.onInput2};\n+  }\n+`;\n+\n+const FormTextarea = styled.textarea`\n+  width: 100%;\n+  min-height: 120px;\n+  padding: 16px 20px;\n+  border: 2px solid rgba(55, 187, 214, 0.2);\n+  border-radius: 12px;\n+  background: rgba(255, 255, 255, 0.8);\n+  font-size: 1rem;\n+  font-family: inherit;\n+  transition: all 0.3s ease;\n+  resize: vertical;\n+  box-sizing: border-box;\n+\n+  &:focus {\n+    outline: none;\n+    border-color: ${AppColors.primary};\n+    background: rgba(255, 255, 255, 1);\n+    box-shadow: 0 0 0 4px rgba(55, 187, 214, 0.1);\n+  }\n+\n+  &::placeholder {\n+    color: ${AppColors.onInput2};\n+  }\n+`;\n+\n+const SubmitButton = styled.button`\n+  width: 100%;\n+  padding: 18px;\n+  background: linear-gradient(135deg, \n+    ${AppColors.primary} 0%, \n+    ${AppColors.tertiary} 100%\n+  );\n+  color: ${AppColors.onPrimary};\n+  border: none;\n+  border-radius: 12px;\n+  font-size: 1.1rem;\n+  font-weight: 600;\n+  cursor: pointer;\n+  transition: all 0.3s ease;\n+  box-shadow: 0 8px 24px rgba(55, 187, 214, 0.3);\n+\n+  &:hover {\n+    transform: translateY(-2px);\n+    box-shadow: 0 12px 32px rgba(55, 187, 214, 0.4);\n+  }\n+\n+  &:active {\n+    transform: translateY(0);\n+  }\n+`;\n+\n+const Contact: React.FC = () => {\n+  const [formData, setFormData] = useState({\n+    name: '',\n+    email: '',\n+    message: ''\n+  });\n+\n+  const contactInfo = [\n+    {\n+      icon: \"📧\",\n+      title: \"이메일\",\n+      text: \"contact@lavida.com\\nbusiness@lavida.com\"\n+    },\n+    {\n+      icon: \"📞\",\n+      title: \"전화번호\",\n+      text: \"02-1234-5678\\n010-9876-5432\"\n+    },\n+    {\n+      icon: \"📍\",\n+      title: \"주소\",\n+      text: \"서울시 강남구 테헤란로 123\\n라비다 빌딩 15층\"\n+    },\n+    {\n+      icon: \"🕒\",\n+      title: \"운영시간\",\n+      text: \"평일 9:00 - 18:00\\n토요일 10:00 - 15:00\"\n+    }\n+  ];\n+\n+  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n+    const { name, value } = e.target;\n+    setFormData(prev => ({\n+      ...prev,\n+      [name]: value\n+    }));\n+  };\n+\n+  const handleSubmit = (e: React.FormEvent) => {\n+    e.preventDefault();\n+    // Form submission logic here\n+    console.log('Form submitted:', formData);\n+  };\n+\n+  return (\n+    <Section>\n+      <Container>\n+        <SectionHeader>\n+          <SectionTitle>연락처</SectionTitle>\n+          <SectionDescription>\n+            궁금한 점이 있으시거나 상담이 필요하시면 언제든 연락주세요\n+          </SectionDescription>\n+        </SectionHeader>\n+        \n+        <ContactContent>\n+          <ContactInfo>\n+            <ContactGrid>\n+              {contactInfo.map((contact, index) => (\n+                <ContactCard key={index} index={index}>\n+                  <ContactIcon>{contact.icon}</ContactIcon>\n+                  <ContactDetails>\n+                    <ContactTitle>{contact.title}</ContactTitle>\n+                    <ContactText>{contact.text}</ContactText>\n+                  </ContactDetails>\n+                </ContactCard>\n+              ))}\n+            </ContactGrid>\n+          </ContactInfo>\n+\n+          <ContactForm>\n+            <FormContainer onSubmit={handleSubmit}>\n+              <FormTitle>문의하기</FormTitle>\n+              \n+              <FormGroup>\n+                <FormLabel htmlFor=\"name\">이름</FormLabel>\n+                <FormInput\n+                  type=\"text\"\n+                  id=\"name\"\n+                  name=\"name\"\n+                  value={formData.name}\n+                  onChange={handleInputChange}\n+                  placeholder=\"이름을 입력해주세요\"\n+                  required\n+                />\n+              </FormGroup>\n+\n+              <FormGroup>\n+                <FormLabel htmlFor=\"email\">이메일</FormLabel>\n+                <FormInput\n+                  type=\"email\"\n+                  id=\"email\"\n+                  name=\"email\"\n+                  value={formData.email}\n+                  onChange={handleInputChange}\n+                  placeholder=\"이메일을 입력해주세요\"\n+                  required\n+                />\n+              </FormGroup>\n+\n+              <FormGroup>\n+                <FormLabel htmlFor=\"message\">메시지</FormLabel>\n+                <FormTextarea\n+                  id=\"message\"\n+                  name=\"message\"\n+                  value={formData.message}\n+                  onChange={handleInputChange}\n+                  placeholder=\"문의 내용을 입력해주세요\"\n+                  required\n+                />\n+              </FormGroup>\n+\n+              <SubmitButton type=\"submit\">\n+                메시지 보내기\n+              </SubmitButton>\n+            </FormContainer>\n+          </ContactForm>\n+        </ContactContent>\n+      </Container>\n+    </Section>\n+  );\n+};\n+\n+export default Contact;\n"
                }
            ],
            "date": 1760504010819,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport styled from 'styled-components';\nimport { AppColors } from '../../styles/colors';\n\n// 공통 섹션 스타일\nconst Section = styled.section`\n  padding: 80px 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  background: ${AppColors.background};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 2.5rem;\n  color: ${AppColors.onBackground};\n  text-align: center;\n  margin-bottom: 20px;\n  font-weight: 600;\n`;\n\nconst SectionDescription = styled.p`\n  font-size: 1.2rem;\n  color: ${AppColors.onInput2};\n  text-align: center;\n  margin-bottom: 60px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  line-height: 1.6;\n`;\n\nconst ContactGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 40px;\n  margin-top: 40px;\n`;\n\nconst ContactCard = styled.div`\n  text-align: center;\n  padding: 30px 20px;\n`;\n\nconst ContactIcon = styled.div`\n  width: 60px;\n  height: 60px;\n  background: ${AppColors.primary};\n  border-radius: 50%;\n  margin: 0 auto 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${AppColors.onPrimary};\n  font-size: 1.5rem;\n`;\n\nconst ContactTitle = styled.h4`\n  font-size: 1.3rem;\n  color: ${AppColors.onBackground};\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\n\nconst ContactText = styled.p`\n  color: ${AppColors.onInput2};\n`;\n\nconst Contact: React.FC = () => {\n  const contactInfo = [\n    {\n      icon: \"📧\",\n      title: \"이메일\",\n      text: \"contact@lavida.com\"\n    },\n    {\n      icon: \"📞\",\n      title: \"전화번호\",\n      text: \"02-1234-5678\"\n    },\n    {\n      icon: \"📍\",\n      title: \"주소\",\n      text: \"서울시 강남구 테헤란로 123\"\n    },\n    {\n      icon: \"🕒\",\n      title: \"운영시간\",\n      text: \"평일 9:00 - 18:00\"\n    }\n  ];\n\n  return (\n    <Section>\n      <SectionTitle>연락처</SectionTitle>\n      <SectionDescription>\n        궁금한 점이 있으시거나 상담이 필요하시면 언제든 연락주세요\n      </SectionDescription>\n      <ContactGrid>\n        {contactInfo.map((contact, index) => (\n          <ContactCard key={index}>\n            <ContactIcon>{contact.icon}</ContactIcon>\n            <ContactTitle>{contact.title}</ContactTitle>\n            <ContactText>{contact.text}</ContactText>\n          </ContactCard>\n        ))}\n      </ContactGrid>\n    </Section>\n  );\n};\n\nexport default Contact;\n"
        }
    ]
}