{
    "sourceFile": "src/components/Calendar/types.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1760154018682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760157680196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+/**\n+ * 달력 컴포넌트 관련 타입 정의\n+ */\n+\n+export type CalendarView = 'day' | 'week' | 'month';\n+\n+export interface ScheduleEvent {\n+  id: string;\n+  title: string;\n+  startTime: Date;\n+  endTime: Date;\n+  staffId: string;\n+  staffName: string;\n+  programId?: string;\n+  programName?: string;\n+  memberId?: string;\n+  memberName?: string;\n+  type: 'class' | 'personal' | 'meeting' | 'break';\n+  color?: string;\n+  description?: string;\n+}\n+\n+export interface StaffInfo {\n+  id: string;\n+  name: string;\n+  role: string;\n+  program?: string;\n+  isActive: boolean;\n+  color?: string; // 달력에서 구분용 색상\n+  contractStartDate?: Date; // 계약 시작일\n+  contractEndDate?: Date; // 계약 종료일\n+  workingHours?: {\n+    start: number; // 기본 근무 시작 시간 (시)\n+    end: number; // 기본 근무 종료 시간 (시)\n+  };\n+}\n+\n+// 휴일 설정 관련 타입\n+export interface HolidaySettings {\n+  id: string;\n+  staffId: string;\n+  date: string; // YYYY-MM-DD 형식\n+  isHoliday: boolean; // true: 휴일, false: 근무일\n+  workingHours?: {\n+    start: number;\n+    end: number;\n+  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n+  createdAt: Date;\n+  updatedAt: Date;\n+}\n+\n+export interface HolidayModalProps {\n+  isOpen: boolean;\n+  onClose: () => void;\n+  staffId?: string; // undefined면 전체 코치\n+  staffList: StaffInfo[];\n+  currentUser?: {\n+    id: string;\n+    role: 'master' | 'coach' | 'admin';\n+  };\n+  onSave: (settings: HolidaySettings[]) => void;\n+}\n+\n+export interface CalendarProps {\n+  view: CalendarView;\n+  currentDate: Date;\n+  events: ScheduleEvent[];\n+  staffList: StaffInfo[];\n+  selectedStaffIds: string[];\n+  onViewChange: (view: CalendarView) => void;\n+  onDateChange: (date: Date) => void;\n+  onStaffFilter: (staffIds: string[]) => void;\n+  onEventClick?: (event: ScheduleEvent) => void;\n+  onEventCreate?: (startTime: Date, endTime: Date, staffId?: string) => void;\n+  onHolidaySettings?: (staffId?: string) => void; // 휴일설정 핸들러 추가\n+}\n+\n+export interface TimeSlot {\n+  hour: number;\n+  minute: number;\n+  display: string;\n+}\n+\n+export interface DayColumn {\n+  date: Date;\n+  dayName: string;\n+  isToday: boolean;\n+  isWeekend: boolean;\n+}\n"
                },
                {
                    "date": 1760158255871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n /**\n  * 달력 컴포넌트 관련 타입 정의\n  */\n \n+// Calendar에서는 IndexedDB의 HolidaySettings를 그대로 사용\n+import type { HolidaySettings } from '../../utils/indexedDB';\n+\n export type CalendarView = 'day' | 'week' | 'month';\n \n export interface ScheduleEvent {\n   id: string;\n@@ -34,22 +37,8 @@\n     end: number; // 기본 근무 종료 시간 (시)\n   };\n }\n \n-// 휴일 설정 관련 타입\n-export interface HolidaySettings {\n-  id: string;\n-  staffId: string;\n-  date: string; // YYYY-MM-DD 형식\n-  isHoliday: boolean; // true: 휴일, false: 근무일\n-  workingHours?: {\n-    start: number;\n-    end: number;\n-  }; // 해당 날짜의 근무시간 (휴일이 아닌 경우)\n-  createdAt: Date;\n-  updatedAt: Date;\n-}\n-\n export interface HolidayModalProps {\n   isOpen: boolean;\n   onClose: () => void;\n   staffId?: string; // undefined면 전체 코치\n@@ -57,9 +46,10 @@\n   currentUser?: {\n     id: string;\n     role: 'master' | 'coach' | 'admin';\n   };\n-  onSave: (settings: HolidaySettings[]) => void;\n+  onSave: (settings: Omit<HolidaySettings, 'id' | 'createdAt' | 'updatedAt'>[]) => Promise<void>; // dbManager 타입에 맞춤\n+  existingHolidays?: HolidaySettings[]; // 기존 휴일 설정 데이터\n }\n \n export interface CalendarProps {\n   view: CalendarView;\n@@ -86,60 +76,4 @@\n   dayName: string;\n   isToday: boolean;\n   isWeekend: boolean;\n }\n-/**\n- * 달력 컴포넌트 관련 타입 정의\n- */\n-\n-export type CalendarView = 'day' | 'week' | 'month';\n-\n-export interface ScheduleEvent {\n-  id: string;\n-  title: string;\n-  startTime: Date;\n-  endTime: Date;\n-  staffId: string;\n-  staffName: string;\n-  programId?: string;\n-  programName?: string;\n-  memberId?: string;\n-  memberName?: string;\n-  type: 'class' | 'personal' | 'meeting' | 'break';\n-  color?: string;\n-  description?: string;\n-}\n-\n-export interface StaffInfo {\n-  id: string;\n-  name: string;\n-  role: string;\n-  program?: string;\n-  isActive: boolean;\n-  color?: string; // 달력에서 구분용 색상\n-}\n-\n-export interface CalendarProps {\n-  view: CalendarView;\n-  currentDate: Date;\n-  events: ScheduleEvent[];\n-  staffList: StaffInfo[];\n-  selectedStaffIds: string[];\n-  onViewChange: (view: CalendarView) => void;\n-  onDateChange: (date: Date) => void;\n-  onStaffFilter: (staffIds: string[]) => void;\n-  onEventClick?: (event: ScheduleEvent) => void;\n-  onEventCreate?: (startTime: Date, endTime: Date, staffId?: string) => void;\n-}\n-\n-export interface TimeSlot {\n-  hour: number;\n-  minute: number;\n-  display: string;\n-}\n-\n-export interface DayColumn {\n-  date: Date;\n-  dayName: string;\n-  isToday: boolean;\n-  isWeekend: boolean;\n-}\n"
                },
                {
                    "date": 1760160349151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n     role: 'master' | 'coach' | 'admin';\n   };\n   onSave: (settings: Omit<HolidaySettings, 'id' | 'createdAt' | 'updatedAt'>[]) => Promise<void>; // dbManager 타입에 맞춤\n   existingHolidays?: HolidaySettings[]; // 기존 휴일 설정 데이터\n+  existingEvents?: ScheduleEvent[]; // 기존 예약 이벤트 데이터 (휴일 설정 제한용)\n }\n \n export interface CalendarProps {\n   view: CalendarView;\n"
                },
                {
                    "date": 1761454363958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n  * 달력 컴포넌트 관련 타입 정의\n  */\n \n // Calendar에서는 IndexedDB의 HolidaySettings를 그대로 사용\n-import type { HolidaySettings } from '../../utils/indexedDB';\n+import type { HolidaySettings, WeeklyHolidaySettings } from '../../utils/db/types';\n \n export type CalendarView = 'day' | 'week' | 'month';\n \n export interface ScheduleEvent {\n@@ -63,8 +63,9 @@\n   onStaffFilter: (staffIds: string[]) => void;\n   onEventClick?: (event: ScheduleEvent) => void;\n   onEventCreate?: (startTime: Date, endTime: Date, staffId?: string) => void;\n   onHolidaySettings?: (staffId?: string) => void; // 휴일설정 핸들러 추가\n+  weeklyHolidaySettings?: WeeklyHolidaySettings[]; // 주별 휴일설정 추가\n }\n \n export interface TimeSlot {\n   hour: number;\n"
                },
                {
                    "date": 1761455802286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,18 @@\n   programId?: string;\n   programName?: string;\n   memberId?: string;\n   memberName?: string;\n-  type: 'class' | 'personal' | 'meeting' | 'break';\n+  type: 'class' | 'personal' | 'meeting' | 'break' | 'holiday';\n   color?: string;\n   description?: string;\n+  branchId?: string;\n+  branchName?: string;\n+  recurrenceRule?: string; // RRULE for recurring events\n+  sourceType: 'manual' | 'weekly_holiday' | 'booking'; // 이벤트 생성 출처\n+  sourceId?: string; // 원본 데이터 ID (WeeklyHolidaySettings ID 등)\n+  createdAt?: Date;\n+  updatedAt?: Date;\n }\n \n export interface StaffInfo {\n   id: string;\n"
                },
                {
                    "date": 1761460101707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   description?: string;\n   branchId?: string;\n   branchName?: string;\n   recurrenceRule?: string; // RRULE for recurring events\n-  sourceType: 'manual' | 'weekly_holiday' | 'booking'; // 이벤트 생성 출처\n+  sourceType: 'manual' | 'weekly_holiday' | 'booking' | 'period_enrollment'; // 이벤트 생성 출처\n   sourceId?: string; // 원본 데이터 ID (WeeklyHolidaySettings ID 등)\n   createdAt?: Date;\n   updatedAt?: Date;\n }\n"
                },
                {
                    "date": 1761460460457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n   onEventClick?: (event: ScheduleEvent) => void;\n   onEventCreate?: (startTime: Date, endTime: Date, staffId?: string) => void;\n   onHolidaySettings?: (staffId?: string) => void; // 휴일설정 핸들러 추가\n   weeklyHolidaySettings?: WeeklyHolidaySettings[]; // 주별 휴일설정 추가\n+  allowEmptyStaff?: boolean; // 코치가 없어도 달력 표시 허용 (기간제용)\n }\n \n export interface TimeSlot {\n   hour: number;\n"
                }
            ],
            "date": 1760154018682,
            "name": "Commit-0",
            "content": "/**\n * 달력 컴포넌트 관련 타입 정의\n */\n\nexport type CalendarView = 'day' | 'week' | 'month';\n\nexport interface ScheduleEvent {\n  id: string;\n  title: string;\n  startTime: Date;\n  endTime: Date;\n  staffId: string;\n  staffName: string;\n  programId?: string;\n  programName?: string;\n  memberId?: string;\n  memberName?: string;\n  type: 'class' | 'personal' | 'meeting' | 'break';\n  color?: string;\n  description?: string;\n}\n\nexport interface StaffInfo {\n  id: string;\n  name: string;\n  role: string;\n  program?: string;\n  isActive: boolean;\n  color?: string; // 달력에서 구분용 색상\n}\n\nexport interface CalendarProps {\n  view: CalendarView;\n  currentDate: Date;\n  events: ScheduleEvent[];\n  staffList: StaffInfo[];\n  selectedStaffIds: string[];\n  onViewChange: (view: CalendarView) => void;\n  onDateChange: (date: Date) => void;\n  onStaffFilter: (staffIds: string[]) => void;\n  onEventClick?: (event: ScheduleEvent) => void;\n  onEventCreate?: (startTime: Date, endTime: Date, staffId?: string) => void;\n}\n\nexport interface TimeSlot {\n  hour: number;\n  minute: number;\n  display: string;\n}\n\nexport interface DayColumn {\n  date: Date;\n  dayName: string;\n  isToday: boolean;\n  isWeekend: boolean;\n}\n"
        }
    ]
}