{
    "sourceFile": "src/components/Calendar/StaffFilter.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1760154018716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760154726113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,22 +94,10 @@\n const StaffName = styled.div`\n   font-size: ${AppTextStyles.body2.fontSize};\n   font-weight: 500;\n   color: ${AppColors.onSurface};\n-  margin-bottom: 2px;\n `;\n \n-const StaffRole = styled.div`\n-  font-size: ${AppTextStyles.label2.fontSize};\n-  color: ${AppColors.onSurface}80;\n-`;\n-\n-const StaffProgram = styled.div`\n-  font-size: ${AppTextStyles.label2.fontSize};\n-  color: ${AppColors.primary};\n-  margin-top: 2px;\n-`;\n-\n const SelectedCount = styled.div`\n   font-size: ${AppTextStyles.label2.fontSize};\n   color: ${AppColors.onSurface}60;\n   margin-top: 8px;\n@@ -181,12 +169,8 @@\n               >\n                 <StaffColorDot color={staff.color || AppColors.primary} />\n                 <StaffDetails>\n                   <StaffName>{staff.name}</StaffName>\n-                  <StaffRole>{staff.role}</StaffRole>\n-                  {staff.program && (\n-                    <StaffProgram>담당: {staff.program}</StaffProgram>\n-                  )}\n                 </StaffDetails>\n               </StaffItem>\n             ))}\n           </StaffGrid>\n"
                },
                {
                    "date": 1760156736222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,10 +94,27 @@\n const StaffName = styled.div`\n   font-size: ${AppTextStyles.body2.fontSize};\n   font-weight: 500;\n   color: ${AppColors.onSurface};\n+  margin-bottom: 4px;\n `;\n \n+const HolidayButton = styled.button`\n+  padding: 2px 6px;\n+  border: 1px solid ${AppColors.primary}40;\n+  border-radius: 3px;\n+  background-color: ${AppColors.primary}10;\n+  color: ${AppColors.primary};\n+  font-size: ${AppTextStyles.label3.fontSize};\n+  cursor: pointer;\n+  transition: all 0.2s ease;\n+  \n+  &:hover {\n+    background-color: ${AppColors.primary}20;\n+    border-color: ${AppColors.primary}60;\n+  }\n+`;\n+\n const SelectedCount = styled.div`\n   font-size: ${AppTextStyles.label2.fontSize};\n   color: ${AppColors.onSurface}60;\n   margin-top: 8px;\n@@ -130,8 +147,18 @@\n   const handleSelectNone = () => {\n     onStaffFilter([]);\n   };\n \n+  const handleHolidaySettings = (staffId?: string) => {\n+    if (staffId) {\n+      console.log(`${staffId} 코치의 휴일설정`);\n+      // 개별 코치 휴일설정 로직\n+    } else {\n+      console.log('전체 코치 휴일설정');\n+      // 전체 코치 휴일설정 로직\n+    }\n+  };\n+\n   const toggleExpanded = () => {\n     setIsExpanded(!isExpanded);\n   };\n \n@@ -152,8 +179,11 @@\n             </ActionButton>\n             <ActionButton onClick={handleSelectNone}>\n               선택 해제\n             </ActionButton>\n+            <ActionButton onClick={() => handleHolidaySettings()}>\n+              휴일설정\n+            </ActionButton>\n           </FilterActions>\n         )}\n       </FilterHeader>\n \n@@ -169,8 +199,16 @@\n               >\n                 <StaffColorDot color={staff.color || AppColors.primary} />\n                 <StaffDetails>\n                   <StaffName>{staff.name}</StaffName>\n+                  <HolidayButton \n+                    onClick={(e) => {\n+                      e.stopPropagation();\n+                      handleHolidaySettings(staff.id);\n+                    }}\n+                  >\n+                    휴일설정\n+                  </HolidayButton>\n                 </StaffDetails>\n               </StaffItem>\n             ))}\n           </StaffGrid>\n"
                },
                {
                    "date": 1760157680197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n interface StaffFilterProps {\n   staffList: StaffInfo[];\n   selectedStaffIds: string[];\n   onStaffFilter: (staffIds: string[]) => void;\n+  onHolidaySettings?: (staffId?: string) => void;\n }\n \n const FilterContainer = styled.div`\n   padding: 16px;\n@@ -122,9 +123,10 @@\n \n const StaffFilter: React.FC<StaffFilterProps> = ({\n   staffList,\n   selectedStaffIds,\n-  onStaffFilter\n+  onStaffFilter,\n+  onHolidaySettings\n }) => {\n   const [isExpanded, setIsExpanded] = useState(true);\n \n   // 코치 직원들만 필터링\n@@ -147,18 +149,8 @@\n   const handleSelectNone = () => {\n     onStaffFilter([]);\n   };\n \n-  const handleHolidaySettings = (staffId?: string) => {\n-    if (staffId) {\n-      console.log(`${staffId} 코치의 휴일설정`);\n-      // 개별 코치 휴일설정 로직\n-    } else {\n-      console.log('전체 코치 휴일설정');\n-      // 전체 코치 휴일설정 로직\n-    }\n-  };\n-\n   const toggleExpanded = () => {\n     setIsExpanded(!isExpanded);\n   };\n \n@@ -179,9 +171,9 @@\n             </ActionButton>\n             <ActionButton onClick={handleSelectNone}>\n               선택 해제\n             </ActionButton>\n-            <ActionButton onClick={() => handleHolidaySettings()}>\n+            <ActionButton onClick={() => onHolidaySettings?.()}>\n               휴일설정\n             </ActionButton>\n           </FilterActions>\n         )}\n@@ -202,9 +194,9 @@\n                   <StaffName>{staff.name}</StaffName>\n                   <HolidayButton \n                     onClick={(e) => {\n                       e.stopPropagation();\n-                      handleHolidaySettings(staff.id);\n+                      onHolidaySettings?.(staff.id);\n                     }}\n                   >\n                     휴일설정\n                   </HolidayButton>\n"
                },
                {
                    "date": 1760158997982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,11 +171,11 @@\n             </ActionButton>\n             <ActionButton onClick={handleSelectNone}>\n               선택 해제\n             </ActionButton>\n-            <ActionButton onClick={() => onHolidaySettings?.()}>\n+            {/* <ActionButton onClick={() => onHolidaySettings?.()}>\n               휴일설정\n-            </ActionButton>\n+            </ActionButton> */}\n           </FilterActions>\n         )}\n       </FilterHeader>\n \n"
                },
                {
                    "date": 1760160713134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,30 +60,30 @@\n   grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n   gap: 8px;\n `;\n \n-const StaffItem = styled.div<{ selected: boolean; color: string }>`\n+const StaffItem = styled.div<{ $selected: boolean; $color: string }>`\n   display: flex;\n   align-items: center;\n   padding: 8px 12px;\n-  border: 2px solid ${props => props.selected ? props.color : AppColors.borderLight};\n+  border: 2px solid ${props => props.$selected ? props.$color : AppColors.borderLight};\n   border-radius: 6px;\n-  background-color: ${props => props.selected ? `${props.color}10` : AppColors.background};\n+  background-color: ${props => props.$selected ? `${props.$color}10` : AppColors.background};\n   cursor: pointer;\n   transition: all 0.2s ease;\n   user-select: none;\n \n   &:hover {\n-    border-color: ${props => props.color};\n-    background-color: ${props => `${props.color}20`};\n+    border-color: ${props => props.$color};\n+    background-color: ${props => `${props.$color}20`};\n   }\n `;\n \n-const StaffColorDot = styled.div<{ color: string }>`\n+const StaffColorDot = styled.div<{ $color: string }>`\n   width: 12px;\n   height: 12px;\n   border-radius: 50%;\n-  background-color: ${props => props.color};\n+  background-color: ${props => props.$color};\n   margin-right: 8px;\n   flex-shrink: 0;\n `;\n \n@@ -184,13 +184,13 @@\n           <StaffGrid>\n             {coachStaff.map((staff) => (\n               <StaffItem\n                 key={staff.id}\n-                selected={selectedStaffIds.includes(staff.id)}\n-                color={staff.color || AppColors.primary}\n+                $selected={selectedStaffIds.includes(staff.id)}\n+                $color={staff.color || AppColors.primary}\n                 onClick={() => handleStaffToggle(staff.id)}\n               >\n-                <StaffColorDot color={staff.color || AppColors.primary} />\n+                <StaffColorDot $color={staff.color || AppColors.primary} />\n                 <StaffDetails>\n                   <StaffName>{staff.name}</StaffName>\n                   <HolidayButton \n                     onClick={(e) => {\n"
                },
                {
                    "date": 1760161170343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n-import React, { useState } from 'react';\n+import React, { useState, useEffect } from 'react';\n import styled from 'styled-components';\n import { AppColors } from '../../styles/colors';\n import { AppTextStyles } from '../../styles/textStyles';\n import { type StaffInfo } from './types';\n+import { getCurrentUser, canEditStaffHoliday } from '../../utils/authUtils';\n \n interface StaffFilterProps {\n   staffList: StaffInfo[];\n   selectedStaffIds: string[];\n@@ -127,9 +128,35 @@\n   onStaffFilter,\n   onHolidaySettings\n }) => {\n   const [isExpanded, setIsExpanded] = useState(true);\n+  const [currentUser, setCurrentUser] = useState<{ id: string; role: 'master' | 'coach' | 'admin' } | null>(null);\n \n+  // 현재 사용자 정보 로드\n+  useEffect(() => {\n+    const loadCurrentUser = async () => {\n+      try {\n+        const user = await getCurrentUser();\n+        setCurrentUser(user);\n+      } catch (error) {\n+        console.error('현재 사용자 정보 로드 실패:', error);\n+      }\n+    };\n+\n+    loadCurrentUser();\n+  }, []);\n+\n+  // 휴일설정 권한 체크\n+  const canEditHoliday = (staffId: string): boolean => {\n+    if (!currentUser) return false;\n+    \n+    // 마스터 권한은 모든 직원 편집 가능\n+    if (currentUser.role === 'master') return true;\n+    \n+    // 본인만 편집 가능\n+    return currentUser.id === staffId;\n+  };\n+\n   // 코치 직원들만 필터링\n   const coachStaff = staffList.filter(staff => \n     staff.role === '코치' && staff.isActive\n   );\n@@ -191,16 +218,18 @@\n               >\n                 <StaffColorDot $color={staff.color || AppColors.primary} />\n                 <StaffDetails>\n                   <StaffName>{staff.name}</StaffName>\n-                  <HolidayButton \n-                    onClick={(e) => {\n-                      e.stopPropagation();\n-                      onHolidaySettings?.(staff.id);\n-                    }}\n-                  >\n-                    휴일설정\n-                  </HolidayButton>\n+                  {canEditHoliday(staff.id) && (\n+                    <HolidayButton \n+                      onClick={(e) => {\n+                        e.stopPropagation();\n+                        onHolidaySettings?.(staff.id);\n+                      }}\n+                    >\n+                      휴일설정\n+                    </HolidayButton>\n+                  )}\n                 </StaffDetails>\n               </StaffItem>\n             ))}\n           </StaffGrid>\n"
                }
            ],
            "date": 1760154018716,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { AppColors } from '../../styles/colors';\nimport { AppTextStyles } from '../../styles/textStyles';\nimport { type StaffInfo } from './types';\n\ninterface StaffFilterProps {\n  staffList: StaffInfo[];\n  selectedStaffIds: string[];\n  onStaffFilter: (staffIds: string[]) => void;\n}\n\nconst FilterContainer = styled.div`\n  padding: 16px;\n  background-color: ${AppColors.surface};\n  border: 1px solid ${AppColors.borderLight};\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nconst FilterHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n\nconst FilterTitle = styled.h3`\n  font-size: ${AppTextStyles.body1.fontSize};\n  font-weight: 600;\n  color: ${AppColors.onSurface};\n  margin: 0;\n`;\n\nconst FilterActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  padding: 4px 8px;\n  border: 1px solid ${AppColors.borderLight};\n  border-radius: 4px;\n  background-color: ${AppColors.background};\n  color: ${AppColors.onSurface};\n  font-size: ${AppTextStyles.label2.fontSize};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${AppColors.primary}10;\n    border-color: ${AppColors.primary}40;\n    color: ${AppColors.primary};\n  }\n`;\n\nconst StaffGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 8px;\n`;\n\nconst StaffItem = styled.div<{ selected: boolean; color: string }>`\n  display: flex;\n  align-items: center;\n  padding: 8px 12px;\n  border: 2px solid ${props => props.selected ? props.color : AppColors.borderLight};\n  border-radius: 6px;\n  background-color: ${props => props.selected ? `${props.color}10` : AppColors.background};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  user-select: none;\n\n  &:hover {\n    border-color: ${props => props.color};\n    background-color: ${props => `${props.color}20`};\n  }\n`;\n\nconst StaffColorDot = styled.div<{ color: string }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  margin-right: 8px;\n  flex-shrink: 0;\n`;\n\nconst StaffDetails = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst StaffName = styled.div`\n  font-size: ${AppTextStyles.body2.fontSize};\n  font-weight: 500;\n  color: ${AppColors.onSurface};\n  margin-bottom: 2px;\n`;\n\nconst StaffRole = styled.div`\n  font-size: ${AppTextStyles.label2.fontSize};\n  color: ${AppColors.onSurface}80;\n`;\n\nconst StaffProgram = styled.div`\n  font-size: ${AppTextStyles.label2.fontSize};\n  color: ${AppColors.primary};\n  margin-top: 2px;\n`;\n\nconst SelectedCount = styled.div`\n  font-size: ${AppTextStyles.label2.fontSize};\n  color: ${AppColors.onSurface}60;\n  margin-top: 8px;\n`;\n\nconst StaffFilter: React.FC<StaffFilterProps> = ({\n  staffList,\n  selectedStaffIds,\n  onStaffFilter\n}) => {\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  // 코치 직원들만 필터링\n  const coachStaff = staffList.filter(staff => \n    staff.role === '코치' && staff.isActive\n  );\n\n  const handleStaffToggle = (staffId: string) => {\n    const newSelectedIds = selectedStaffIds.includes(staffId)\n      ? selectedStaffIds.filter(id => id !== staffId)\n      : [...selectedStaffIds, staffId];\n    \n    onStaffFilter(newSelectedIds);\n  };\n\n  const handleSelectAll = () => {\n    onStaffFilter(coachStaff.map(staff => staff.id));\n  };\n\n  const handleSelectNone = () => {\n    onStaffFilter([]);\n  };\n\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  if (coachStaff.length === 0) {\n    return null;\n  }\n\n  return (\n    <FilterContainer>\n      <FilterHeader>\n        <FilterTitle onClick={toggleExpanded} style={{ cursor: 'pointer' }}>\n          코치 필터 {isExpanded ? '▼' : '▶'} ({selectedStaffIds.length}/{coachStaff.length})\n        </FilterTitle>\n        {isExpanded && (\n          <FilterActions>\n            <ActionButton onClick={handleSelectAll}>\n              전체 선택\n            </ActionButton>\n            <ActionButton onClick={handleSelectNone}>\n              선택 해제\n            </ActionButton>\n          </FilterActions>\n        )}\n      </FilterHeader>\n\n      {isExpanded && (\n        <>\n          <StaffGrid>\n            {coachStaff.map((staff) => (\n              <StaffItem\n                key={staff.id}\n                selected={selectedStaffIds.includes(staff.id)}\n                color={staff.color || AppColors.primary}\n                onClick={() => handleStaffToggle(staff.id)}\n              >\n                <StaffColorDot color={staff.color || AppColors.primary} />\n                <StaffDetails>\n                  <StaffName>{staff.name}</StaffName>\n                  <StaffRole>{staff.role}</StaffRole>\n                  {staff.program && (\n                    <StaffProgram>담당: {staff.program}</StaffProgram>\n                  )}\n                </StaffDetails>\n              </StaffItem>\n            ))}\n          </StaffGrid>\n          \n          <SelectedCount>\n            {selectedStaffIds.length > 0 \n              ? `${selectedStaffIds.length}명의 코치가 선택됨`\n              : '선택된 코치가 없습니다'\n            }\n          </SelectedCount>\n        </>\n      )}\n    </FilterContainer>\n  );\n};\n\nexport default StaffFilter;\n"
        }
    ]
}