{
    "sourceFile": "src/components/StaffFileUploadField.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1759904790072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1759904790072,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport styled from 'styled-components';\nimport { AppColors } from '../styles/colors';\nimport { AppTextStyles } from '../styles/textStyles';\n\nconst FormField = styled.div<{ $fullWidth?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  grid-column: ${props => props.$fullWidth ? '1 / -1' : 'auto'};\n`;\n\nconst Label = styled.label<{ $required?: boolean }>`\n  font-size: ${AppTextStyles.label1.fontSize};\n  font-weight: 600;\n  color: ${AppColors.onSurface};\n  \n  &::after {\n    content: ${props => props.$required ? '\" *\"' : '\"\"'};\n    color: ${AppColors.error};\n  }\n`;\n\nconst FileUploadContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst FileUploadButton = styled.label`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  min-height: 48px;\n  padding: 14px 16px;\n  border: 2px dashed ${AppColors.borderLight};\n  border-radius: 12px;\n  background-color: ${AppColors.surface};\n  color: ${AppColors.onSurface};\n  font-size: ${AppTextStyles.body1.fontSize};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: ${AppColors.primary};\n    background-color: ${AppColors.primary}08;\n    color: ${AppColors.primary};\n    box-shadow: 0 2px 8px rgba(55, 187, 214, 0.1);\n  }\n`;\n\nconst HiddenFileInput = styled.input.attrs({ type: 'file' })`\n  display: none;\n`;\n\nconst FileInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  min-height: 48px;\n  padding: 14px 16px;\n  background-color: ${AppColors.background};\n  border: 1px solid ${AppColors.borderLight};\n  border-radius: 12px;\n  font-size: ${AppTextStyles.body1.fontSize};\n  color: ${AppColors.onSurface};\n`;\n\nconst FileRemoveButton = styled.button`\n  background: none;\n  border: none;\n  color: ${AppColors.error};\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  \n  &:hover {\n    background-color: ${AppColors.error}10;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${AppColors.error};\n  font-size: ${AppTextStyles.label3.fontSize};\n  margin-top: 4px;\n`;\n\nexport interface StaffFileUploadFieldProps {\n  label?: string;\n  value: File | null;\n  onChange: (file: File | null) => void;\n  placeholder?: string;\n  errorMessage?: string;\n  required?: boolean;\n  disabled?: boolean;\n  fullWidth?: boolean;\n  accept?: string;\n  maxSizeMB?: number;\n  allowedTypes?: string[];\n}\n\nexport const StaffFileUploadField: React.FC<StaffFileUploadFieldProps> = ({\n  label,\n  value,\n  onChange,\n  placeholder = 'ÌååÏùºÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî',\n  errorMessage,\n  required = false,\n  disabled = false,\n  fullWidth = true,\n  accept = 'image/*,application/pdf',\n  maxSizeMB = 10,\n  allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf']\n}) => {\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0] || null;\n    \n    if (file) {\n      // ÌååÏùº ÌÉÄÏûÖ Í≤ÄÏ¶ù\n      if (allowedTypes.length > 0 && !allowedTypes.includes(file.type)) {\n        // ÏóêÎü¨ Ï≤òÎ¶¨Îäî Î∂ÄÎ™® Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú Ï≤òÎ¶¨ÌïòÎèÑÎ°ù ÏùºÎã® ÌååÏùºÏùÑ Ï†ÑÎã¨\n        onChange(null);\n        return;\n      }\n      \n      // ÌååÏùº ÌÅ¨Í∏∞ Í≤ÄÏ¶ù\n      if (maxSizeMB && file.size > maxSizeMB * 1024 * 1024) {\n        // ÏóêÎü¨ Ï≤òÎ¶¨Îäî Î∂ÄÎ™® Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú Ï≤òÎ¶¨ÌïòÎèÑÎ°ù ÏùºÎã® ÌååÏùºÏùÑ Ï†ÑÎã¨\n        onChange(null);\n        return;\n      }\n    }\n    \n    onChange(file);\n    \n    // inputÏùÑ Ï¥àÍ∏∞ÌôîÌïòÏó¨ Í∞ôÏùÄ ÌååÏùºÏùÑ Îã§Ïãú ÏÑ†ÌÉùÌï† Ïàò ÏûàÎèÑÎ°ù Ìï®\n    e.target.value = '';\n  };\n\n  const removeFile = () => {\n    onChange(null);\n  };\n\n  const getFileIcon = (file: File): string => {\n    if (file.type.startsWith('image/')) return 'üñºÔ∏è';\n    if (file.type === 'application/pdf') return 'üìÑ';\n    return 'üìé';\n  };\n\n  return (\n    <FormField $fullWidth={fullWidth}>\n      {label && (\n        <Label $required={required}>\n          {label}\n        </Label>\n      )}\n      <FileUploadContainer>\n        {!value ? (\n          <FileUploadButton>\n            <HiddenFileInput\n              accept={accept}\n              onChange={handleFileChange}\n              disabled={disabled}\n            />\n            üìé {placeholder}\n          </FileUploadButton>\n        ) : (\n          <FileInfo>\n            <span>{getFileIcon(value)} {value.name}</span>\n            <FileRemoveButton type=\"button\" onClick={removeFile} disabled={disabled}>\n              ‚úï\n            </FileRemoveButton>\n          </FileInfo>\n        )}\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </FileUploadContainer>\n    </FormField>\n  );\n};\n"
        }
    ]
}