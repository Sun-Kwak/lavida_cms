{
    "sourceFile": "src/components/Modal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1759906185677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759906646971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,8 +99,9 @@\n   borderRadius?: string;\n   width?: string;\n   height?: string;\n   zIndex?: number;\n+  disableOutsideClick?: boolean;\n \n   header?: string;\n   body?: React.ReactNode;\n   footer?: React.ReactNode;\n@@ -114,8 +115,9 @@\n   borderRadius,\n   width,\n   height,\n   zIndex,\n+  disableOutsideClick = false,\n   header,\n   body,\n   footer,\n }: ModalComponentProps) {\n@@ -131,9 +133,9 @@\n     };\n   }, [isOpen]);\n \n   const modal = (\n-    <Overlay onClick={onClose} $zIndex={zIndex}>\n+    <Overlay onClick={disableOutsideClick ? undefined : onClose} $zIndex={zIndex}>\n       <ModalWrapper\n         $bgColor={bgColor}\n         $padding={padding}\n         $borderRadius={borderRadius}\n"
                },
                {
                    "date": 1759906762104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n   left: 50%;\n   transform: translate(-50%, -50%);\n \n   background-color: ${({ $bgColor }) => $bgColor || \"#FFFFFF\"};\n-  padding: ${({ $padding }) => $padding || \"24px 14px 12px 14px\"};\n+  padding: 0; // 패딩을 제거하고 각 섹션에서 개별 관리\n   border-radius: ${({ $borderRadius }) => $borderRadius || \"14px\"};\n   width: ${({ $width }) => $width || \"300px\"};\n   max-width: calc(100vw - 32px); // 좌우 16px씩 여백 확보\n   min-width: 280px; // 최소 너비 설정\n@@ -61,35 +61,39 @@\n   z-index: ${({ $zIndex }) => $zIndex || 9998};\n \n   display: flex;\n   flex-direction: column;\n-  justify-content: center;\n   overflow: hidden; // 내부 스크롤 처리를 위해\n `;\n \n const ModalHeader = styled.div`\n+  padding: 24px 24px 16px 24px;\n   text-align: center;\n   font-size: 16px;\n   font-weight: 760;\n   color: #000000;\n-  margin-bottom: 16px; // Space between header and body\n   white-space: pre-line; // Respect newlines in header content\n+  flex-shrink: 0; // 헤더 크기 고정\n `;\n \n const ModalBody = styled.div`\n+  padding: 0 24px;\n   font-size: 16px;\n   line-height: 1.5;\n   color: #000000;\n   text-align: center;\n-  margin-bottom: 24px; // Space before footer\n   flex-grow: 1; // Allow body to take available space\n   white-space: pre-line; // Respect newlines in body content\n   overflow-y: auto; // 스크롤 처리\n+  min-height: 0; // flexbox에서 스크롤이 동작하도록\n `;\n \n const ModalFooter = styled.div`\n+  padding: 16px 24px 24px 24px;\n   display: flex;\n   gap: 12px;\n+  flex-shrink: 0; // 푸터 크기 고정\n+  border-top: 1px solid #f0f0f0; // 구분선 추가\n `;\n \n type ModalComponentProps = {\n   isOpen: boolean;\n@@ -145,9 +149,9 @@\n         onClick={(e) => e.stopPropagation()} // Prevent overlay close when clicking inside modal\n       >\n         {header && <ModalHeader>{header}</ModalHeader>}\n         <ModalBody>{body}</ModalBody>\n-        <ModalFooter>{footer}</ModalFooter>\n+        {footer && <ModalFooter>{footer}</ModalFooter>}\n       </ModalWrapper>\n     </Overlay>\n   );\n \n"
                },
                {
                    "date": 1759909776217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,19 @@\n   flex-grow: 1; // Allow body to take available space\n   white-space: pre-line; // Respect newlines in body content\n   overflow-y: auto; // 스크롤 처리\n   min-height: 0; // flexbox에서 스크롤이 동작하도록\n+  \n+  /* 스크롤바 숨김 - Webkit 브라우저 (Chrome, Safari, Edge) */\n+  &::-webkit-scrollbar {\n+    display: none;\n+  }\n+  \n+  /* 스크롤바 숨김 - Firefox */\n+  scrollbar-width: none;\n+  \n+  /* 스크롤바 숨김 - IE/Edge Legacy */\n+  -ms-overflow-style: none;\n `;\n \n const ModalFooter = styled.div`\n   padding: 16px 24px 24px 24px;\n"
                }
            ],
            "date": 1759906185677,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { keyframes, styled } from \"styled-components\";\n/**\n * 주석 이름 / Section: Modal (공통 모달 컴포넌트)\n * 코드 목적 / Purpose: 다양한 상황(알림, 확인, 폼 등)에 재사용 가능한 범용 모달 UI를 제공합니다.\n * 산출물 / Output: header/body/footer 구조의 중앙 고정 모달, showCloseButton 등 옵션 지원 (optional)\n *\n * 시나리오(알고리즘) / Scenario (Algorithm Flow): (optional)\n *   1. isOpen이 true일 때만 Portal로 모달을 렌더링합니다.\n *   2. Overlay 클릭 시 onClose 호출(외부 닫힘 허용), 내부 콘텐츠 클릭은 이벤트 전파 방지 필요.\n *   3. header/body/footer props로 다양한 UI를 커스터마이즈할 수 있습니다.\n *\n * 관련 모듈/클래스 / Related Modules/Classes: BtnElement, AppColors, AppTextStyles 등 (optional)\n * 입력 값 / Input Values: isOpen, onClose, showCloseButton, header, body, footer, 스타일 props 등 (optional)\n * 예외 처리 / Exception Handling: isOpen=false 또는 window 미존재 시 렌더링하지 않음 (optional)\n */\n\n\n\n\nconst fadeIn = keyframes`\n  from { opacity: 0; }\n  to { opacity: 1; }\n`;\n\nconst Overlay = styled.div<{ $zIndex?: number }>`\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: ${({ $zIndex }) => ($zIndex ? $zIndex - 1 : 9997)};\n  animation: ${fadeIn} 0.2s ease-out;\n  pointer-events: auto;\n`;\n\ntype ModalProps = {\n  $bgColor?: string;\n  $padding?: string;\n  $borderRadius?: string;\n  $width?: string;\n  $height?: string;\n  $zIndex?: number;\n};\n\nconst ModalWrapper = styled.div<ModalProps>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: ${({ $bgColor }) => $bgColor || \"#FFFFFF\"};\n  padding: ${({ $padding }) => $padding || \"24px 14px 12px 14px\"};\n  border-radius: ${({ $borderRadius }) => $borderRadius || \"14px\"};\n  width: ${({ $width }) => $width || \"300px\"};\n  max-width: calc(100vw - 32px); // 좌우 16px씩 여백 확보\n  min-width: 280px; // 최소 너비 설정\n  height: ${({ $height }) => $height || \"auto\"};\n  max-height: calc(100vh - 32px); // 상하 16px씩 여백 확보\n  z-index: ${({ $zIndex }) => $zIndex || 9998};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden; // 내부 스크롤 처리를 위해\n`;\n\nconst ModalHeader = styled.div`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 760;\n  color: #000000;\n  margin-bottom: 16px; // Space between header and body\n  white-space: pre-line; // Respect newlines in header content\n`;\n\nconst ModalBody = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n  color: #000000;\n  text-align: center;\n  margin-bottom: 24px; // Space before footer\n  flex-grow: 1; // Allow body to take available space\n  white-space: pre-line; // Respect newlines in body content\n  overflow-y: auto; // 스크롤 처리\n`;\n\nconst ModalFooter = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\ntype ModalComponentProps = {\n  isOpen: boolean;\n  onClose?: () => void;\n  bgColor?: string;\n  padding?: string;\n  borderRadius?: string;\n  width?: string;\n  height?: string;\n  zIndex?: number;\n\n  header?: string;\n  body?: React.ReactNode;\n  footer?: React.ReactNode;\n};\n\nexport default function Modal({\n  isOpen,\n  onClose,\n  bgColor,\n  padding,\n  borderRadius,\n  width,\n  height,\n  zIndex,\n  header,\n  body,\n  footer,\n}: ModalComponentProps) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"\";\n    }\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [isOpen]);\n\n  const modal = (\n    <Overlay onClick={onClose} $zIndex={zIndex}>\n      <ModalWrapper\n        $bgColor={bgColor}\n        $padding={padding}\n        $borderRadius={borderRadius}\n        $width={width}\n        $height={height}\n        $zIndex={zIndex}\n        onClick={(e) => e.stopPropagation()} // Prevent overlay close when clicking inside modal\n      >\n        {header && <ModalHeader>{header}</ModalHeader>}\n        <ModalBody>{body}</ModalBody>\n        <ModalFooter>{footer}</ModalFooter>\n      </ModalWrapper>\n    </Overlay>\n  );\n\n  if (!isOpen || typeof window === \"undefined\") return null;\n\n  return ReactDOM.createPortal(modal, document.body);\n}\n"
        }
    ]
}