{
    "sourceFile": "src/components/CustomList/GenericDataTable.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1757743165770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757830071424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,17 +168,17 @@\n   width: 100%;\n   border-collapse: collapse;\n   font-size: 14px;\n   text-align: center;\n-  background-color: #fffefb;\n+  background-color: #ffffff;\n   table-layout: fixed; /* 테이블 레이아웃을 고정하여 컬럼 너비 제어 */\n `;\n \n const Th = styled.th<{ $isSortable?: boolean }>`\n   padding: 12px 8px;\n   border-bottom: 1px solid #e6e7e9;\n-  background-color: #f7f7f7;\n-  color: #221d12;\n+  background-color: #f0fbfc; /* 브랜드 컬러의 매우 밝은 톤 */\n+  color: #1e7a8a; /* 브랜드 컬러의 어두운 톤 */\n   font-weight: bold;\n   white-space: nowrap;\n   user-select: none;\n   position: sticky;\n@@ -189,29 +189,29 @@\n \n const SortIcon = styled.span`\n   margin-left: 4px;\n   font-size: 12px;\n-  color: #221d12;\n+  color: #37bbd6; /* 브랜드 컬러 */\n `;\n \n const TableRow = styled.tr`\n-  background-color: #fffefb;\n+  background-color: #ffffff;\n   position: relative; /* 툴팁 위치 기준점 */\n \n   &:nth-child(even) {\n-    background-color: #f7f7f7;\n+    background-color: #fafefe; /* 매우 밝은 톤 */\n   }\n \n-  /* 행에 호버될 때 z-index 조정 */\n   &:hover {\n+    background-color: #f0fbfc; /* 브랜드 컬러의 매우 밝은 톤 */\n     z-index: 100;\n   }\n `;\n \n const Td = styled.td`\n   padding: 12px 8px;\n   background-color: transparent;\n-  color: #221d12;\n+  color: #262626;\n   text-align: center;\n   border: none;\n   overflow: hidden; /* 넘치는 내용 숨김 */\n   text-overflow: ellipsis; /* 말줄임표 표시 */\n@@ -221,9 +221,9 @@\n \n const TdNoData = styled.td`\n   padding: 40px;\n   color: #aaa;\n-  background-color: #fffefb;\n+  background-color: #ffffff;\n `;\n \n const NoDataWrapper = styled.div`\n   text-align: center;\n@@ -238,10 +238,10 @@\n   padding: 20px;\n `;\n \n const LoadingSpinner = styled.div`\n-  border: 4px solid rgba(0, 0, 0, 0.1);\n-  border-left: 4px solid #214a72;\n+  border: 4px solid rgba(55, 187, 214, 0.1); /* 브랜드 컬러의 투명한 톤 */\n+  border-left: 4px solid #37bbd6; /* 브랜드 컬러 */\n   border-radius: 50%;\n   width: 40px;\n   height: 40px;\n   animation: spin 1s linear infinite;\n"
                }
            ],
            "date": 1757743165770,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useRef } from \"react\";\nimport { devLog } from \"../../utils/devLogger\";\nimport { ThemeMode } from \"../../styles/theme_colors\";\n\n\n\nexport interface ColumnDefinition<T> {\n  header: string;\n  accessor: keyof T | string;\n  sortable?: boolean;\n  noPopup?: boolean; // ✅ 팝업 비활성화\n  formatter?: (value: any, item: T, rowIndex: number) => React.ReactNode;\n  excelFormatter?: (value: any, item: T) => string | number | boolean; // Excel 전용 포맷터 (옵셔널)\n  showColumn?: boolean; // ✅ 엑셀에서 컬럼 표시 여부 (기본 true)\n  headerStyle?: React.CSSProperties;\n  cellStyle?: React.CSSProperties | ((value: any, item: T) => React.CSSProperties);\n  flex?: number; // ✅ flex 비율\n}\n\ninterface GenericDataTableProps<T> {\n  data: T[];\n  columns: ColumnDefinition<T>[];\n  isLoading?: boolean;\n  error?: string | null;\n  maxLength?: number;\n  onRowClick?: (item: T, rowIndex: number) => void;\n  onHeaderClick?: (accessor: keyof T | string) => void;\n  sortKey?: keyof T | string | null;\n  sortOrder?: \"asc\" | \"desc\";\n  keyExtractor: (item: T, index: number) => string | number;\n  themeMode?: ThemeMode;\n}\n\n// 중첩 키 처리\nconst getPropertyValue = <T,>(obj: T, path: keyof T | string): any => {\n  if (typeof path !== \"string\") return obj[path];\n  const keys = path.split(\".\");\n  return keys.reduce((acc: any, key: string) => acc?.[key], obj);\n};\n\nconst GenericDataTable = <T extends object>({\n  data,\n  columns,\n  isLoading = false,\n  error = null,\n  maxLength,\n  onRowClick,\n  onHeaderClick,\n  sortKey,\n  sortOrder,\n  keyExtractor,\n  themeMode = \"dark\",\n}: GenericDataTableProps<T>) => {\n  const totalFlex = columns.reduce((sum, col) => sum + (col.flex ?? 0), 0);\n  const displayData = maxLength ? data.slice(0, maxLength) : data;\n  const tableRef = useRef<HTMLTableElement>(null);\n\n  useEffect(() => {\n    const logFlexStatus = () => {\n      const tableWidth = tableRef.current?.offsetWidth;\n      devLog(\"============== 📐 GenericDataTable Layout Info ==============\");\n      devLog(\"📏 window.innerWidth:\", window.innerWidth);\n      devLog(\"📐 table.offsetWidth:\", tableWidth);\n      devLog(\"📊 totalFlex:\", totalFlex);\n      columns.forEach((col, i) => {\n        const flex = col.flex ?? 0;\n        const percent = totalFlex > 0 ? ((flex / totalFlex) * 100).toFixed(2) : \"0\";\n        devLog(`  ▸ Column ${i} (${col.header}): flex=${flex}, widthPercent=${percent}%`);\n      });\n      devLog(\"=============================================================\");\n    };\n    logFlexStatus();\n    window.addEventListener(\"resize\", logFlexStatus);\n    return () => window.removeEventListener(\"resize\", logFlexStatus);\n  }, [columns, totalFlex]);\n\n  return (\n    <Table ref={tableRef}>\n      {totalFlex > 0 && (\n        <colgroup>\n          {columns.map((col, i) => (\n            <col key={i} style={{ width: col.flex ? `${(col.flex / totalFlex) * 100}%` : undefined }} />\n          ))}\n        </colgroup>\n      )}\n      <thead>\n        <tr>\n          {columns.map((col, i) => {\n            const sortable = (col.sortable ?? true) && onHeaderClick;\n            const isSorted = sortable && col.accessor === sortKey;\n            return (\n              <Th\n                key={i}\n                onClick={sortable ? () => onHeaderClick(col.accessor) : undefined}\n                style={{ ...col.headerStyle, cursor: sortable ? \"pointer\" : \"default\" }}\n                $isSortable={!!sortable}>\n                {col.header}\n                {isSorted && <SortIcon>{sortOrder === \"asc\" ? \" ▲\" : \" ▼\"}</SortIcon>}\n              </Th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {isLoading ? (\n          <tr>\n            <TdNoData colSpan={columns.length}>\n              <LoadingWrapper>\n                <LoadingSpinner />\n                <p>데이터를 불러오는 중...</p>\n              </LoadingWrapper>\n            </TdNoData>\n          </tr>\n        ) : error ? (\n          <tr>\n            <TdNoData colSpan={columns.length}>\n              <NoDataWrapper>\n                <p style={{ color: '#d32f2f' }}>오류: {error}</p>\n              </NoDataWrapper>\n            </TdNoData>\n          </tr>\n        ) : data.length === 0 ? (\n          <tr>\n            <TdNoData colSpan={columns.length}>\n              <NoDataWrapper>\n                <p>데이터가 없습니다.</p>\n              </NoDataWrapper>\n            </TdNoData>\n          </tr>\n        ) : (\n          displayData.map((item, rowIdx) => (\n            <TableRow key={keyExtractor(item, rowIdx)}>\n              {columns.map((col, colIdx) => {\n                const value = getPropertyValue(item, col.accessor);\n                const content = col.formatter ? col.formatter(value, item, rowIdx) : String(value ?? \"-\");\n                const style = typeof col.cellStyle === \"function\" ? col.cellStyle(value, item) : col.cellStyle;\n                \n                return (\n                  <Td\n                    key={colIdx}\n                    style={{\n                      ...style,\n                      cursor: col.noPopup ? \"default\" : \"pointer\",\n                    }}\n                    onClick={() => {\n                      if (!col.noPopup && onRowClick) onRowClick(item, rowIdx);\n                    }}>\n                    {content}\n                  </Td>\n                );\n              })}\n            </TableRow>\n          ))\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default GenericDataTable;\n\n// --- Styles ---\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-size: 14px;\n  text-align: center;\n  background-color: #fffefb;\n  table-layout: fixed; /* 테이블 레이아웃을 고정하여 컬럼 너비 제어 */\n`;\n\nconst Th = styled.th<{ $isSortable?: boolean }>`\n  padding: 12px 8px;\n  border-bottom: 1px solid #e6e7e9;\n  background-color: #f7f7f7;\n  color: #221d12;\n  font-weight: bold;\n  white-space: nowrap;\n  user-select: none;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  cursor: ${({ $isSortable }) => ($isSortable ? \"pointer\" : \"default\")};\n`;\n\nconst SortIcon = styled.span`\n  margin-left: 4px;\n  font-size: 12px;\n  color: #221d12;\n`;\n\nconst TableRow = styled.tr`\n  background-color: #fffefb;\n  position: relative; /* 툴팁 위치 기준점 */\n\n  &:nth-child(even) {\n    background-color: #f7f7f7;\n  }\n\n  /* 행에 호버될 때 z-index 조정 */\n  &:hover {\n    z-index: 100;\n  }\n`;\n\nconst Td = styled.td`\n  padding: 12px 8px;\n  background-color: transparent;\n  color: #221d12;\n  text-align: center;\n  border: none;\n  overflow: hidden; /* 넘치는 내용 숨김 */\n  text-overflow: ellipsis; /* 말줄임표 표시 */\n  white-space: nowrap; /* 텍스트 줄바꿈 방지 */\n  position: relative; /* 툴팁 위치 기준점 */\n`;\n\nconst TdNoData = styled.td`\n  padding: 40px;\n  color: #aaa;\n  background-color: #fffefb;\n`;\n\nconst NoDataWrapper = styled.div`\n  text-align: center;\n  width: 100%;\n`;\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  padding: 20px;\n`;\n\nconst LoadingSpinner = styled.div`\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left: 4px solid #214a72;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;"
        }
    ]
}